{"version":3,"sources":["./src/app/role/list-role/list-role.component.ts","./src/app/role/list-role/list-role.component.html","./src/app/_shared/role/role-form/role-form.component.ts","./src/app/_shared/role/role-form/role-form.component.html","./src/app/common-component/common-component.module.ts","./src/app/_utility/disable-item.ts","./src/app/role/add-role/add-role.component.ts","./src/app/role/add-role/add-role.component.html","./src/app/_shared/alert/autorisation-alert/autorisation-alert.component.ts","./src/app/_shared/alert/autorisation-alert/autorisation-alert.component.html","./src/app/_shared/role/role-list/role-list.component.ts","./src/app/_shared/role/role-list/role-list.component.html","./src/app/role/role.module.ts","./src/app/_utility/enable-item.ts","./src/app/role/update-role/update-role.component.ts","./src/app/role/update-role/update-role.component.html","./src/app/role/role-routing.module.ts"],"names":[],"mappings":"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","file":"role-role-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-role',\n  templateUrl: './list-role.component.html',\n  styleUrls: ['./list-role.component.css']\n})\nexport class ListRoleComponent implements OnInit {\n\n /**\n  * title to display\n  */\n  title = 'Liste des rôles';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","    \n    <app-role-list [title]='title'></app-role-list>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Role } from 'src/app/_models/role.model';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\nimport { RoleService } from 'src/app/_services/role.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\nimport { can } from 'src/app/_utility/permission/can';\n\n@Component({\n  selector: 'app-role-form',\n  templateUrl: './role-form.component.html',\n  styleUrls: ['./role-form.component.css']\n})\nexport class RoleFormComponent implements OnInit {\n\n  /**\n  *   form Group\n  */\n  form: FormGroup;\n\n  /**\n  * form submission action, it will get the value of the action to do\n  */\n  formAction = '';\n\n  /** \n  * invalid from controls\n  */\n  invalidFormControls: any;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  roleId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * child component output\n   */\n  @Output()\n  objectEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * the component model\n   */\n  role: Role;\n\n/**\n * role permissions\n */\npermissions= []\n\n  /**\n  * define  states options\n  */\n  actives = [\n    { id: \"Y\", value: \"Actif\" },\n    { id: \"N\", value: \"Inactif\" },\n  ];\n\n  /**\n  * define  deleted options\n  */\n  deleted = [\n    { id: \"Y\", value: \"Actif\" },\n    { id: \"N\", value: \"Inactif\" },\n  ];\n\n   /**\n   * permission service\n   */\n  appPermission : any;\n\n  /**\n   * \n   */\n  data: object = {};\n\n  /**\n   * define permissions\n   */\n  createRole: boolean;\n\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   * @param redirectTo \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n \n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    private roleService: RoleService,\n    private authService : AuthenticationService,\n    private userService : UserService,\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n    if (this.roleId) this.initUpdateForm();\n    this.setPermissions();\n  }\n\n  /**\n   * init the form value when adding\n   */\n  initForm() {\n    this.form = new FormGroup({\n      id: new FormControl(0),\n      name: new FormControl('', Validators.required),\n      description: new FormControl(''),\n      active: new FormControl('Y', Validators.required),\n    });\n\n  }\n\n   /**\n   * set Permissions to component ressources\n   */\n  setPermissions(){\n    this.userService.findByUsername(this.authService.getUsername()).subscribe(user => {\n      this.createRole = can(user, 'createRole');\n    });\n  }\n\n  /**\n   * init the form value when updating\n   */\n  initUpdateForm() {\n\n    if (this.roleId) {\n\n      this.roleService.findById(this.roleId).subscribe(\n        role => {\n          if (role) {\n           this.form.patchValue(role);\n           this.permissions = role['permissions'].map(({ id }) => id);\n\n          } else {\n            this.errorAction(\"Modification impossible car le role n'existe pas\", '/role/list');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de la modification\", '/role/list');\n          \n        })\n    }\n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the object\n    */\n  save() {\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    this.data['roleDTO'] = this.form.value;\n    this.data['permissions']=this.permissions;\n\n    if (this.form.valid) {\n\n      this.objectEmitter.emit({ role: this.data, action: this.formAction })\n\n      if (this.formAction == \"save_and_new\") {\n        this.initForm();\n      }\n\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n  /**\n   * get the form submission action\n   * @param action : string\n   */\n  actionToDo(action) {\n    this.formAction = action;\n  }\n\n  /**\n   * action to Do when  ckick on cancel button\n   */\n  cancelAction() {\n    this.errorAction('Action annulée', '/role/list');\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"save()\" *ngIf=\"createRole\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            <div class=\"row\">\r\n                <div class=\"mr-auto p-2 col-md-4\">\r\n                    <h3>{{title}}</h3>\r\n                </div>\r\n                <div class=\"col-md-7\">\r\n                    <div class=\"row\">\r\n                        <div class=\"mt-3 col-lg-3 col-md-6 col-sm-12 offset-lg-3 text-nowrap\">\r\n                            <button (click)=\"actionToDo('save')\"\r\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold\">\r\n                                <span *ngIf=\"!roleId\">Enregistrer</span>\r\n                                <span *ngIf=\"roleId\">Modifier</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"mt-3 col-lg-3 col-md-6 col-sm-12 text-nowrap\" *ngIf=\"!roleId\">\r\n                            <button (click)=\"actionToDo('save_and_new')\"\r\n                                class=\"btn btn-block btn-info btn-sm font-weight-bold\">\r\n                                Enreg. & nouveau\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"mt-3 col-lg-3 col-md-6 col-sm-12 text-nowrap\">\r\n                            <span (click)=\"cancelAction()\" class=\"btn btn-block btn-danger btn-sm font-weight-bold\">\r\n                                Annuler\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- / .card-header -->\r\n        <div class=\"card-body\">\r\n            <p class=\"text-muted\"> NB: les champs marqués d'un astérisque ( <span class=\"text-danger\">*</span> ) sont\r\n                obligatoire pour la validation de la fiche</p>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Role</label>\r\n                        <span class=\"text-danger\">*</span>\r\n                        <div class=\"input-group input-group-sm\">\r\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control\"\r\n                                placeholder=\"libellé du rôle\">\r\n                        </div>\r\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.name\">\r\n                            ce champ doit être renseigné\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"input-group-sm\">\r\n                            <label for=\"active\">Status</label>\r\n                            <ng-select formControlName=\"active\">\r\n                                <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">\r\n                                    {{active.value}}</ng-option>\r\n                            </ng-select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label for=\"descrition\">Description du role </label>\r\n                    <textarea class=\"form-control\" formControlName=\"description\" rows=\"3\"\r\n                        placeholder=\"Description du rôle\"></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n<app-autorisation-alert *ngIf=\"createRole == false\"></app-autorisation-alert>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutorisationAlertComponent } from '../_shared/alert/autorisation-alert/autorisation-alert.component';\n\n@NgModule({\n  declarations: [ AutorisationAlertComponent],\n  imports: [\n    CommonModule\n  ],\n  exports : [AutorisationAlertComponent],\n})\nexport class CommonComponentModule { }\n","/**\r\n * disable object from the DOM whithout refresh the page  after  disabling from the database\r\n * @param array array of objects\r\n * @param rowId row to disable\r\n */\r\nexport function disableItem( array : any, rowId : number){\r\n    for (let i = 0; i < array.length; ++i) {\r\n      \r\n        if (array[i].id === rowId) {\r\n            array[i].active = 'N'; \r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoleService } from 'src/app/_services/role.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.css']\n})\nexport class AddRoleComponent implements OnInit {\n\n  /***\n   * page title\n   */\n  title = 'Nouveau rôle';\n  \n  constructor(\n    private router : Router,\n    private roleService : RoleService,\n    private alertService : AlertService\n    ) { }\n\n  ngOnInit(): void { }\n\n  /**\n   * add a new object\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let role = data.role;\n    let action = data.action;\n     \n    this.roleService.save(role).subscribe(res => {\n    \n      switch (action) {\n        case 'save':\n          this.router.navigate(['/role/list']);\n          this.alertService.success('Rôle ajouté avec succès')\n          break;\n\n        case 'save_and_new':\n          this.router.navigate(['/role/add']);\n          this.alertService.success('Rôle ajouté avec succès')\n\n          break;\n\n        default: this.router.navigate(['/role/list']);\n        this.alertService.error('Ajout annulée')\n\n          break;\n      }\n    },\n    error => {\n      this.alertService.error(error);\n    });\n\n  }\n}\n","<app-role-form [title]='title' (objectEmitter)=\"save($event)\" ></app-role-form>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-autorisation-alert',\n  templateUrl: './autorisation-alert.component.html',\n  styleUrls: ['./autorisation-alert.component.css']\n})\nexport class AutorisationAlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\"> \n    <div class=\"alert alert-danger\" >\n        Alert ! &nbsp;<i class=\"icon fas fa-ban\"></i>\n        Vous n'avez pas le droit d'acceder a cette ressource !!! Veillez contacter votre administrateur Web.\n   </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Role } from 'src/app/_models/role.model';\nimport { RoleService } from 'src/app/_services/role.service';\nimport { enableItem } from 'src/app/_utility/enable-item';\nimport { disableItem } from 'src/app/_utility/disable-item';\nimport Swal from 'sweetalert2';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { can } from 'src/app/_utility/permission/can';\n\n@Component({\n  selector: 'app-role-list',\n  templateUrl: './role-list.component.html',\n  styleUrls: ['./role-list.component.css']\n})\nexport class RoleListComponent implements OnInit {\n\n  /**\n   * search formGroup\n   */\n  public form: FormGroup;\n\n  /**\n   * entries formGroup\n   */\n  public entryForm: FormGroup;\n\n  /**\n   * init first page\n   */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * the selected item a action\n   */\n  public selectedItem: number;\n\n  /**\n   * object model\n   */\n  role: Role;\n\n  /**\n   * collection of object\n   */\n  roles: Role[];\n\n  /**\n   * Define entries options\n   */\n  entries = [\n    { id: 10, value: 10 },\n    { id: 25, value: 25 },\n    { id: 50, value: 50 },\n    { id: 100, value: 100 }\n  ];\n\n  /**\n  * define  states options\n  */\n  actives = [\n    { id: \"Y\", value: \"Actif\" },\n    { id: \"N\", value: \"Inactif\" },\n  ];\n\n  \n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * description of the order direction\n   */\n  orderDescription = 'decroissant';\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  /**\n   * permission service\n   */\n  permission: any;\n\n  /**\n   * define permissions\n   */\n  createRole: boolean;\n  listRole: boolean;\n  updateRole: boolean;\n  enableRole: boolean;\n  disableRole: boolean;\n  searchRole: boolean;\n\n  @Input()\n  title: string;\n\n  constructor(\n    private roleService: RoleService,\n    private userService: UserService,\n    private authService :  AuthenticationService\n  ) { }\n\n  ngOnInit() {\n\n    this.initForm();\n    this.getRoles();\n    this.setPermissions();\n\n  }\n\n  /**\n   * set Permissions to component ressources\n   */\n  setPermissions(){\n    this.userService.findByUsername(this.authService.getUsername()).subscribe(user => {\n      this.createRole = can(user, 'createRole');\n      this.listRole = can(user, 'listRole');\n      this.updateRole = can(user, 'updateRole');\n      this.enableRole = can(user, 'enableRole');\n      this.disableRole = can(user, 'disableRole');\n      this.searchRole = can(user, 'searchRole');\n    });\n  }\n\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      name: new FormControl(''),\n      active: new FormControl(null),\n    })\n\n    this.entryForm = new FormGroup({\n      entries: new FormControl(10),\n    })\n  }\n\n  /**\n   * get list\n   */\n  getRoles() {\n    let data = this.form.value\n    data.entries = this.entryForm.get('entries').value;\n    data.page = this.page;\n    data.order = this.order;\n    data.sort = this.sort;\n\n    this.roleService.findAllByPage(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.roles = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        this.roles = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n  }\n\n  /**\n   * search function\n   */\n  search() {\n    this.loading = true;\n    this.page = this.page > 0 ? this.page - 1 : 0;\n    this.getRoles();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n    this.loading = true;\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getRoles();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getRoles();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.loading = true;\n    this.perPage = this.entryForm.get('entries').value;\n    this.page = this.page - 1;\n    this.getRoles();\n  }\n\n  /**\n   * set the selected item \n   * @param item \n   */\n  onItemChange(item) {\n    this.selectedItem = item;\n  }\n\n  /**\n   * disable a role\n   */\n  disable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment desactiver ce rôle?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n      if (result.value) {\n\n        this.roleService.disable(this.selectedItem).subscribe(result => {\n          //disable item in the DOM\n          if (result) disableItem(this.roles, result['id']);\n\n          Swal.fire(\n            'Desactivé!',\n            'Rôle desactiver avec succès.',\n            'success'\n          );\n\n        });\n\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'le rôle n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n\n  /**\n   * enable a role\n   */\n  enable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Activer ce rôle?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n\n      if (result.value) {\n        this.roleService.enable(this.selectedItem).subscribe(result => {\n          //Enable item in the Dom\n          if (result) enableItem(this.roles, result['id']);\n\n          Swal.fire(\n            'Actvé!',\n            'Rôle activé avec succès.',\n            'success'\n          );\n\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'Le rôle n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n\n}\n","<div class=\"card\"  *ngIf=\"listRole\">\n    <div class=\"card-header\">\n        <div class=\"row pl-3 pr-3\">\n            <div class=\"col-md-7\"  *ngIf=\"searchRole\">\n                <form [formGroup]=\"form\">\n                    <div class=\"row\">\n                        <div class=\"row pt-1 m-0 col-md-12\">\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                                            placeholder=\"Rôle\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-3 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"active\" placeholder=\" etat \" style=\"width: 100%;\">\n                                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">\n                                                {{active.value}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"px-2 col-lg-2 col-md-2 col-sm-12 mb-1\">\n                                <span class=\"btn btn-light btn-sm\" (click)=\"search()\" style=\"width: 100%;\">\n                                    <i class=\"fas fa-search\"></i>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-5\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\" *ngIf=\"createRole\">\n                            <a routerLink=\"/role/add\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold text-nowrap text-white\">\n                                <i class=\"fas fa-list mr-2\"></i>\n                                Nouveau\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\" *ngIf=\"updateRole\">\n                            <a routerLink=\"/role/update/{{selectedItem}}\"\n                                class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-pen-alt mr-2\"></i>\n                                Modifier\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\" *ngIf=\"enableRole\">\n                            <a (click)=\"enable()\"\n                                class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-on mr-2\"></i>\n                                Activer\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\" *ngIf=\"disableRole\">\n                            <a (click)=\"disable()\"\n                                class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-off mr-2\"></i>\n                                Desactiver\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-8 text-center text-muted\">\n                <h4>{{title}}</h4>\n            </div>\n            <div class=\"col-md-4 text-right\">\n                <form [formGroup]=\"entryForm\">\n                    <div class=\"row\">\n                        <div for=\"entries\" class=\"col-md-6 text-right mt-1\"> Afficher</div>\n                        <div class=\"col-md-6 mb-2\">\n                            <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\"\n                                (change)=\"OnEntryChange()\">\n                                <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\n                            </ng-select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-sm table-hover table-bordered \">\n                <thead class=\"thead-light text-center\">\n                    <tr>\n                        <th scope=\"col\"></th>\n                        <th>ID<i class=\"fa fa-sort ml-2\" (click)=\"onSort('id')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">Rôle<i class=\"fa fa-sort ml-2\" (click)=\"onSort('name')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">Etat <i class=\"fa fa-sort ml-2\" (click)=\"onSort('active')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">crée le <i class=\"fa fa-sort ml-2\" (click)=\"onSort('createdAt')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">crée par</th>\n                        <th scope=\"col\">Dernière modif.</th>\n                        <th scope=\"col\">Modifié par</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let role of roles\">\n                        <th class=\"text-center\" scope=\"row\">\n                            <div class=\"custom-control custom-radio\">\n                                <input type=\"radio\" class=\"custom-control-input\" id=\"{{role.id}}\" name=\"radio-stacked\"\n                                    value=\"{{role.id}}\" (change)=\"onItemChange($event.target.value)\">\n                                <label class=\"custom-control-label\" for=\"{{role.id}}\"></label>\n                            </div>\n                        </th>\n                        <td>{{role.id}}</td>\n                        <td class=\"text-capitalize\">{{role.name}}</td>\n                        <td class=\"text-capitalize text-center\">\n                            <i class=\"fas fa-circle\"\n                                [ngClass]=\"{'text-green': role.active=='Y', 'text-red': role.active=='N'}\"\n                                ngbTooltip=\"{{role.active=='Y'? 'Actif' : 'Inactif'}}\"></i>\n                        </td>\n                        <td class=\"text-center text-nowrap\">{{role.createdAt | date:'dd/MM/yyy H:mm:ss'}}</td>\n                      <td class=\"text-capitalize text-nowrap\">{{role.createdByFirstName +' '+ role.createdByLastName}}</td>\n                        <td class=\"text-center text-center text-nowrap\">{{role.updatedAt ? (role.updatedAt | date:'dd/MM/yyyy H:mm:ss') : 'Jamais modifié'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{role.UpdatedByFirstName ? role.UpdatedByFirstName +' '+ role.UpdatedByLastName : ''}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"text-center mb-5 mt-4\">\n            <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n            <div *ngIf=\"hasNoData\" class=\"mt-3\">\n                <span class=\"text-muted ml-3 \" >{{EmptyMessage}}</span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-7 offset-md-5\">\n                <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n                    (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n            </div>\n        </div>\n    </div>\n</div>\n<app-autorisation-alert *ngIf=\"listRole == false\"></app-autorisation-alert>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RoleRoutingModule } from './role-routing.module';\nimport { AddRoleComponent } from './add-role/add-role.component';\nimport { UpdateRoleComponent } from './update-role/update-role.component';\nimport { RoleFormComponent } from './../_shared/role/role-form/role-form.component';\nimport { RoleListComponent } from './../_shared/role/role-list/role-list.component';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { NgbPaginationModule, NgbTooltipModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ListRoleComponent } from './list-role/list-role.component';\nimport { CommonComponentModule } from '../common-component/common-component.module';\n\n@NgModule({\n  declarations: [\n    AddRoleComponent,\n    UpdateRoleComponent, \n    RoleFormComponent, \n    RoleListComponent, \n    ListRoleComponent,\n  ],\n  imports: [\n    CommonModule,\n    RoleRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgSelectModule,\n    NgbPaginationModule,\n    NgbTooltipModule,\n    CommonComponentModule\n  ]\n})\nexport class RoleModule { }\n","/**\r\n * enable object from the DOM whithout refresh the page  after  enabling from the database\r\n * @param array array of objects\r\n * @param rowId row to enable\r\n */\r\nexport function enableItem( array : any, rowId : number){\r\n    for (let i = 0; i < array.length; ++i) {\r\n      \r\n        if (array[i].id === rowId) {\r\n            array[i].active = 'Y'; \r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RoleService } from 'src/app/_services/role.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-update-role',\n  templateUrl: './update-role.component.html',\n  styleUrls: ['./update-role.component.css']\n})\nexport class UpdateRoleComponent implements OnInit {\n\n  /***\n   * page title\n   */\n  title = 'Modifier un rôle';\n\n  /**\n   * object id \n   */\n  roleId: number;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private roleService: RoleService,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      this.roleId = params.id;\n\n    })\n  }\n\n  /**\n   * update existing object\n   * @param data object\n   */\n  save(data) {\n\n    let object = data.role;\n\n    this.roleService.update(object).subscribe(role => {\n      this.router.navigate(['/role/list']);\n      this.alertService.success('Rôle modifié avec succès');\n    })\n\n  }\n\n}\n","<app-role-form [title]='title' [roleId]='roleId' (objectEmitter)=\"save($event)\"></app-role-form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddRoleComponent } from \"./add-role/add-role.component\";\nimport { ListRoleComponent } from './list-role/list-role.component';\nimport { UpdateRoleComponent } from \"./update-role/update-role.component\";\n\nconst routes: Routes = [\n  { path: 'add', component:AddRoleComponent },\n  { path: 'update/:id', component:UpdateRoleComponent },\n   { path: 'list', component:ListRoleComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RoleRoutingModule { }\n"],"sourceRoot":"webpack:///"}