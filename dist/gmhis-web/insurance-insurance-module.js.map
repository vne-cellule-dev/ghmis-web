{"version":3,"sources":["./src/app/insurance/add-insurance/add-insurance.component.ts","./src/app/insurance/add-insurance/add-insurance.component.html","./src/app/insurance/update-subscriber/update-subscriber.component.ts","./src/app/insurance/update-subscriber/update-subscriber.component.html","./src/app/_shared/insurance/subscriber-form/subscriber-form.component.ts","./src/app/_shared/insurance/subscriber-form/subscriber-form.component.html","./src/app/_utility/disable-item.ts","./src/app/_services/insurance-subscriber.service.ts","./src/app/insurance/list-insurance/list-insurance.component.ts","./src/app/insurance/list-insurance/list-insurance.component.html","./src/app/insurance/list-subscriber/list-subscriber.component.ts","./src/app/insurance/list-subscriber/list-subscriber.component.html","./src/app/insurance/update-insurance/update-insurance.component.ts","./src/app/insurance/update-insurance/update-insurance.component.html","./src/app/insurance/insurance.module.ts","./src/app/_utility/enable-item.ts","./src/app/insurance/add-subscriber/add-subscriber.component.ts","./src/app/insurance/add-subscriber/add-subscriber.component.html","./src/app/_shared/insurance/insurance-list/insurance-list.component.ts","./src/app/_shared/insurance/insurance-list/insurance-list.component.html","./src/app/_services/insurance.service.ts","./src/app/insurance/insurance-routing.module.ts","./src/app/_shared/insurance/insurance-form/insurance-form.component.ts","./src/app/_shared/insurance/insurance-form/insurance-form.component.html","./src/app/_shared/insurance/subscriber-list/subscriber-list.component.ts","./src/app/_shared/insurance/subscriber-list/subscriber-list.component.html"],"names":[],"mappings":"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","file":"insurance-insurance-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { InsuranceService } from \"./../../_services/insurance.service\";\n\n@Component({\n  selector: 'app-add-insurance',\n  templateUrl: './add-insurance.component.html',\n  styleUrls: ['./add-insurance.component.css']\n})\nexport class AddInsuranceComponent implements OnInit {\n\n  \n  /**\n   * title to display\n   */\n  title = 'Ajouter une assurance / mutuelle';\n\n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    private insuranceService: InsuranceService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * add a new object\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let insurance = data.insurance;\n    let action = data.action;\n\n    this.insuranceService.save(insurance).subscribe(\n      res => {\n         switch (action) {\n           case 'save':\n             this.router.navigate(['/insurance/list']);\n             this.alertService.success('Assurance ajoutée avec succès')\n             break;\n             \n             case 'save_and_new':\n               this.router.navigate(['/insurance/add']);\n               this.alertService.success('Assurance ajoutée avec succès')\n               \n               break;\n               \n               default: this.router.navigate(['/insurance/list']);\n               this.alertService.error('Ajout annulée')\n               \n               break;\n            }\n     },error => {\n       this.alertService.error(error);\n     });\n\n  }\n\n}\n","<app-insurance-form [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-insurance-form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { InsuranceSubscriberService } from 'src/app/_services/insurance-subscriber.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-update-subscriber',\n  templateUrl: './update-subscriber.component.html',\n  styleUrls: ['./update-subscriber.component.css']\n})\nexport class UpdateSubscriberComponent implements OnInit {\n  \n  /**\n  * insurance id \n  */\n subscriberId :  number;\n  \n /**\n  * title to display\n  */\n title = \"Modification d'un etablissement garant\";\n \n\n constructor(\n   private router: Router,\n   private activatedRoute: ActivatedRoute,\n   private subscriberService: InsuranceSubscriberService,\n   private alertService: AlertService\n ) { }\n\n ngOnInit(): void {\n   this.activatedRoute.params.subscribe(params=>{\n      this.subscriberId = params.id;\n   })\n }\n\n /**\n  * update existing object\n  * @param data object\n  */\n save(data) {\n  \n   let subscriber = data.subscriber;\n   let action = data.action;\n   \n   this.subscriberService.update(subscriber).subscribe(res => {\n        this.router.navigate(['/insurance/list-subscriber']);\n        this.alertService.success('Societaire modifié avec succès');\n   });\n  }\n\n}\n","<app-subscriber-form [subscriberId]=\"subscriberId\" [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-subscriber-form>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { InsuranceSubscriber } from 'src/app/_models/insuranceSubscriber.model';\nimport { InsuranceSubscriberService } from 'src/app/_services/insurance-subscriber.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\n\n@Component({\n  selector: 'app-subscriber-form',\n  templateUrl: './subscriber-form.component.html',\n  styleUrls: ['./subscriber-form.component.css']\n})\nexport class SubscriberFormComponent implements OnInit {\n\n  /**\n   *   form Group\n   */\n  form: FormGroup;\n\n  /**\n  * form submission action, it will get the value of the action to do\n  */\n  formAction = '';\n\n  /**\n   * invalid from controls\n   */\n  invalidFormControls: any;\n\n\n  /**\n   * parent component input\n   */\n  @Input()\n  subscriberId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * child component output\n   */\n  @Output()\n  objectEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * the component model\n   */\n  susbscriber: InsuranceSubscriber\n\n   /**\n   * define insurance subscriber states options\n   */\n  actives = [\n    {id: \"Y\", value: \"Actif\"},\n    {id: \"N\", value: \"Inactif\"},\n  ]\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   * @param redirectTo \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n\n  constructor(\n    private router: Router,\n    private alertService : AlertService,\n    private subscriberService: InsuranceSubscriberService\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    if (this.subscriberId) this.initUpdateAction();\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      id: new FormControl(0),\n      name: new FormControl('', Validators.required),\n      code: new FormControl(''),\n      address: new FormControl(''),\n      active: new FormControl('Y', Validators.required),\n    });\n  }\n\n  /**\n   * init the form value when updating\n   */\n  initUpdateAction() {\n\n      this.subscriberService.findById(this.subscriberId).subscribe(\n        subscriber => {\n          if (subscriber) {\n            this.susbscriber = subscriber;\n            this.form.patchValue(this.susbscriber);\n          } else {\n            this.errorAction(\"Modification impossible car le societaire n'existe pas\", '/insurance-subscriber/list');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de la modification\", '/insurance-subscriber/list');\n          \n        })\n    \n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the object\n    */\n  save() {// reset alerts on submit\n    this.alertService.clear();\n\n    //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    this.susbscriber = this.form.value;\n    \n    if (this.form.valid) {\n      this.objectEmitter.emit({ subscriber: this.susbscriber, action: this.formAction })\n      if (this.formAction == \"save_and_new\") this.initForm();\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n  /**\n   * get the form submission action\n   * @param action : string\n   */\n  actionToDo(action) {\n    this.formAction = action;\n  }\n\n  /**\n   * action to Do when  ckick on cancel button\n   */\n  cancelAction() {\n    this.errorAction('Action annulée', '/insurance/list-subscriber');\n  }\n\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"mr-auto p-2 col-md-7\">\n                    <h3>{{title}}</h3>\n                </div>\n                <div class=\"col-md-5\">\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <button type=\"submit\" (click)=\"actionToDo('save')\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold\" value=\"save\">\n                                Enregistrer\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\" *ngIf='!subscriberId'>\n                            <button type=\"submit\" (click)=\"actionToDo('save_and_new')\"\n                                class=\"btn btn-block btn-info btn-sm font-weight-bold\" value=\"save_and_new\">\n                                Enreg. & nouveau\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <span (click)=\"cancelAction()\" class=\"btn btn-block btn-danger btn-sm font-weight-bold\"\n                                value=\"cancel\">\n                                Annuler\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <p class=\"text-muted\"> NB: les champs marqués d'un astérisque ( <span class=\"text-danger\">*</span> ) sont\n                obligatoire pour la validation du formulare</p>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Etablissement</label>\n                        <span class=\"text-danger\">*</span>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Etablissement\">\n                        </div>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.name\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label for=\"code\">code</label>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"code\" class=\"form-control\" placeholder=\"code\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label for=\"address\">Adresse</label>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"address\" class=\"form-control\" placeholder=\"Adresse\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                            <label for=\"typeactive\">Etat</label>\n                            <span class=\"text-red\">*</span>\n                            <ng-select formControlName=\"active\" placeholder=\"Etat\">\n                                <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">{{active.value}}\n                                </ng-option>\n                            </ng-select>\n                            <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.active\">\n                                ce champ doit être renseigné\n                            </span>\n                        </div>\n                    </div>\n                \n                <!-- hidden -->\n                <input type=\"hidden\" formControlName=\"id\">\n            </div>\n        </div>\n    </div>\n</form>","/**\r\n * disable object from the DOM whithout refresh the page  after  disabling from the database\r\n * @param array array of objects\r\n * @param rowId row to disable\r\n */\r\nexport function disableItem( array : any, rowId : number){\r\n    for (let i = 0; i < array.length; ++i) {\r\n      \r\n        if (array[i].id === rowId) {\r\n            array[i].active = 'N'; \r\n        }\r\n    }\r\n}","import { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { InsuranceSubscriber } from '../_models/insuranceSubscriber.model';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InsuranceSubscriberService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(subscriber: InsuranceSubscriber): Observable<InsuranceSubscriber> {\n    return this.http.post<InsuranceSubscriber>(environment.baseUrl2 + '/insurance-subscriber/add', subscriber);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<InsuranceSubscriber> {\n    return this.http.put<InsuranceSubscriber>(environment.baseUrl2 + '/insurance-subscriber/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<InsuranceSubscriber[]> {\n    return this.http.get<InsuranceSubscriber[]>(environment.baseUrl2 + '/insurance-subscriber/list');\n  }\n\n    /**\n   * get a paginated list of object\n   */\n  findAllByPage(data): Observable<InsuranceSubscriber[]> {\n      let queryParams = {};\n       data['active']= (data['active'] == null) ? '' : data['active'];\n      //  data['deleted']= (data['deleted'] == null) ? '' : data['deleted'];\n  \n      queryParams = { params: new HttpParams().set('page', data['page'])\n                                              .set('size', data['entries'])\n                                              .set('name', data['name'])\n                                              .set('active', data['active'])\n                                              .set('sort', data['sort']+','+data['order'])\n    };\n      return this.http.get<InsuranceSubscriber[]>(environment.baseUrl2 + '/insurance-subscriber/p_list', queryParams);\n    }\n    \n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<InsuranceSubscriber[]> {\n  return this.http.get<InsuranceSubscriber[]>(environment.baseUrl2 + '/insurance-subscriber/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id) : Observable<InsuranceSubscriber> {\n  return this.http.get<InsuranceSubscriber>(environment.baseUrl2 + '/insurance-subscriber/enable/' + id);\n \n  }\n\n  /**\n   * disable a object\n   */\n  disable(id) : Observable<InsuranceSubscriber> {\n    return this.http.get<InsuranceSubscriber>(environment.baseUrl2 + '/insurance-subscriber/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<InsuranceSubscriber> {\n    return this.http.get<InsuranceSubscriber>(environment.baseUrl2 + '/insurance-subscriber/detail/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n      return this.http.get<any>(environment.baseUrl2 + '/insurance-subscriber/active_subscribers_name');\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-insurance',\n  templateUrl: './list-insurance.component.html',\n  styleUrls: ['./list-insurance.component.css']\n})\nexport class ListInsuranceComponent implements OnInit {\n\n  /**\n   * title to display\n   */\n  title='Liste des assurances'; \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-insurance-list [title]='title'></app-insurance-list>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-subscriber',\n  templateUrl: './list-subscriber.component.html',\n  styleUrls: ['./list-subscriber.component.css']\n})\nexport class ListSubscriberComponent implements OnInit {\n\n  /**\n   * title to display\n   */\n  title='Liste des établissements garants';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-subscriber-list [title]='title'></app-subscriber-list>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { InsuranceService } from 'src/app/_services/insurance.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-update-insurance',\n  templateUrl: './update-insurance.component.html',\n  styleUrls: ['./update-insurance.component.css']\n})\nexport class UpdateInsuranceComponent implements OnInit {\n\n\n  /**\n  * insurance id \n  */\n  insuranceId: number;\n\n  /**\n   * title to display\n   */\n  title = \"Modification d'une assurance / mutelle\";\n\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private insuranceService: InsuranceService,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      this.insuranceId = params.id;\n    })\n  }\n\n  /**\n   * update existing object\n   * @param data object\n   */\n  save(data) {\n\n    let insurance = data.insurance;\n    let action = data.action;\n    this.insuranceService.update(insurance).subscribe(res => {\n      this.router.navigate(['/insurance/list']);\n      this.alertService.success('Assurance modifiée avec succès'); \n    });\n\n  }\n\n}\n","<app-insurance-form [insuranceId]=\"insuranceId\" [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-insurance-form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InsuranceRoutingModule } from './insurance-routing.module';\nimport { AddInsuranceComponent } from './add-insurance/add-insurance.component';\nimport { UpdateInsuranceComponent } from './update-insurance/update-insurance.component';\nimport { ListInsuranceComponent } from './list-insurance/list-insurance.component';\nimport { ListSubscriberComponent } from './list-subscriber/list-subscriber.component';\nimport { AddSubscriberComponent } from './add-subscriber/add-subscriber.component';\nimport { UpdateSubscriberComponent } from './update-subscriber/update-subscriber.component';\nimport { InsuranceFormComponent } from './../_shared/insurance/insurance-form/insurance-form.component';\nimport { InsuranceListComponent } from './../_shared/insurance/insurance-list/insurance-list.component';\nimport { SubscriberListComponent } from './../_shared/insurance/subscriber-list/subscriber-list.component';\nimport { SubscriberFormComponent } from './../_shared/insurance/subscriber-form/subscriber-form.component';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport {NgbPaginationModule, NgbTooltipModule  } from \"@ng-bootstrap/ng-bootstrap\";\n\n\n@NgModule({\n  declarations: [\n    AddInsuranceComponent, \n    UpdateInsuranceComponent, \n    ListInsuranceComponent, \n    ListSubscriberComponent,\n    AddSubscriberComponent, \n    UpdateSubscriberComponent, \n    InsuranceFormComponent, \n    InsuranceListComponent,\n    SubscriberFormComponent, \n    SubscriberListComponent\n  ],\n  imports: [\n    CommonModule,\n    InsuranceRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    NgbPaginationModule, \n    NgbTooltipModule\n  ]\n})\nexport class InsuranceModule { }\n","/**\r\n * enable object from the DOM whithout refresh the page  after  enabling from the database\r\n * @param array array of objects\r\n * @param rowId row to enable\r\n */\r\nexport function enableItem( array : any, rowId : number){\r\n    for (let i = 0; i < array.length; ++i) {\r\n      \r\n        if (array[i].id === rowId) {\r\n            array[i].active = 'Y'; \r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { InsuranceSubscriberService } from 'src/app/_services/insurance-subscriber.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-add-subscriber',\n  templateUrl: './add-subscriber.component.html',\n  styleUrls: ['./add-subscriber.component.css']\n})\nexport class AddSubscriberComponent implements OnInit {\n\n  \n  \n  /**\n   * title to display\n   */\n  title = 'Ajouter un etablissement garant';\n\n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    private subscriberService: InsuranceSubscriberService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * add a new object\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let subscriber = data.subscriber;\n    let action = data.action;\n\n    this.subscriberService.save(subscriber).subscribe(subscriber => {\n\n      switch (action) {\n        case 'save':\n          this.router.navigate(['/insurance/list-subscriber']);\n          this.alertService.success('Societaire ajouté avec succès')\n          break;\n\n        case 'save_and_new':\n          this.router.navigate(['/insurance/add-subscriber']);\n          this.alertService.success('Societaire ajouté avec succès')\n\n          break;\n\n        default: this.router.navigate(['/insurance/list-subscriber']);\n          this.alertService.error('Ajout annulée')\n\n          break;\n      }\n    },\n    error => {\n      this.alertService.error(error);\n    });\n\n  }\n}\n","<app-subscriber-form [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-subscriber-form>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Insurance } from 'src/app/_models/insurance.model';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { disableItem } from 'src/app/_utility/disable-item';\nimport { enableItem } from 'src/app/_utility/enable-item';\nimport Swal from 'sweetalert2';\nimport { InsuranceService } from \"./../../../_services/insurance.service\";\n\n@Component({\n  selector: 'app-insurance-list',\n  templateUrl: './insurance-list.component.html',\n  styleUrls: ['./insurance-list.component.css']\n})\nexport class InsuranceListComponent implements OnInit {\n\n  /**\n     * search formGroup\n     */\n  public form: FormGroup;\n\n  /**\n   * entries formGroup\n   */\n  public entryForm: FormGroup;\n\n  /**\n   * init first page\n   */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * the selected item a action\n   */\n  public selectedItem: number;\n\n  /**\n   * object model\n   */\n  insurance: Insurance;\n\n  /**\n   * collection of object\n   */\n  insurances: Insurance[];\n\n\n  /**\n   * Define entries options\n   */\n  entries = [\n    { id: 10, value: 10 },\n    { id: 25, value: 25 },\n    { id: 50, value: 50 },\n    { id: 100, value: 100 }\n  ];\n\n  /**\n  * define  states options\n  */\n  actives = [\n    { id: \"Y\", value: \"Actif\" },\n    { id: \"N\", value: \"Inactif\" },\n  ]\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * description of the order direction\n   */\n  orderDescription = 'decroissant';\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  /**\n   * page title\n   */\n  @Input()\n  title: string;\n\n  constructor(\n    private insuranceService: InsuranceService,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n\n    this.initForm();\n    this.getInsurances();\n\n  }\n\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      name: new FormControl(''),\n      active: new FormControl(null),\n    })\n\n    this.entryForm = new FormGroup({\n      entries: new FormControl(10),\n    })\n  }\n\n  /**\n   * get insurance list\n   */\n  getInsurances() {\n    let data = this.form.value\n    data.entries = this.entryForm.get('entries').value;\n    data.page = this.page;\n    data.order = this.order;\n    data.sort = this.sort;\n\n    this.insuranceService.findAllByPage(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.insurances = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        this.insurances = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n  }\n\n\n  /**\n   * search function\n   */\n  search() {\n    this.loading = true;\n    this.page = this.page > 0 ? this.page - 1 : 0;\n    this.getInsurances();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n    this.loading = true;\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getInsurances();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getInsurances();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.loading = true;\n    this.perPage = this.entryForm.get('entries').value;\n    this.page = this.page - 1;\n    this.getInsurances();\n  }\n\n  /**\n   * set the selected item \n   * @param item \n   */\n  onItemChange(item) {\n    this.selectedItem = item;\n  }\n\n  /**\n   * disable a insurance\n   */\n  disable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment desactiver cette assurance?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n      if (result.value) {\n\n        this.insuranceService.disable(this.selectedItem).subscribe(result => {\n          //disable item in the DOM\n          if (result) disableItem(this.insurances, result['id']);\n\n          Swal.fire(\n            'Desactivé!',\n            'assurance desactiver avec succès.',\n            'success'\n          );\n\n        });\n\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'l\\'assurance n\\'a pas été modifiée.',\n          'error'\n        )\n      }\n    })\n  }\n\n  /**\n   * enable a insurance\n   */\n  enable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Activer cette assurance?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n\n      if (result.value) {\n        this.insuranceService.enable(this.selectedItem).subscribe(result => {\n          //Enable item in the Dom\n          if (result) enableItem(this.insurances, result['id']);\n\n          Swal.fire(\n            'Actvé!',\n            'assurance activé avec succès.',\n            'success'\n          );\n\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'L\\'assurance n\\'a pas été modifiée.',\n          'error'\n        )\n      }\n    })\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"row pl-3 pr-3\">\n            <div class=\"col-md-7\">\n                <form [formGroup]=\"form\">\n                    <div class=\"row\">\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                                            placeholder=\"Assurance\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"active\" placeholder=\" Etat \" style=\"width: 100%;\">\n                                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">\n                                                {{active.value}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"px-2 col-lg-2 col-md-2 col-sm-12 mb-1\">\n                                <span class=\"btn btn-light btn-sm\" (click)=\"search()\" style=\"width: 100%;\">\n                                    <i class=\"fas fa-search\"></i>\n                                </span>\n                            </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-5\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/insurance/add\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold text-nowrap text-white\">\n                                <i class=\"fas fa-list mr-2\"></i>\n                                Nouveau\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/insurance/update/{{selectedItem}}\"\n                                class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-pen-alt mr-2\"></i>\n                                Modifier\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"enable()\"\n                                class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-on mr-2\"></i>\n                                Activer\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"disable()\"\n                                class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-off mr-2\"></i>\n                                Desactiver\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-10 text-center text-muted\">\n                <h4>{{title}}</h4>\n            </div>\n            <div class=\"col-md-2 text-right\">\n                <form [formGroup]=\"entryForm\">\n                     <div class=\"row\">\n                        <div for=\"entries\" class=\"col-sm-12 text-right mt-1\"> Afficher</div>\n                        <div class=\"col-sm-12 mb-2\">\n                            <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\"\n                                (change)=\"OnEntryChange()\">\n                                <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\n                            </ng-select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-sm table-hover table-bordered \">\n                <thead class=\"thead-light text-center\">\n                    <tr>\n                        <th scope=\"col\"></th>\n                        <th>ID</th>\n                        <th scope=\"col\">Assurance<i class=\"fa fa-sort ml-2\" (click)=\"onSort('name')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                                <th scope=\"col\">code</th>\n                                <th scope=\"col\">Adresse</th>\n                        <th scope=\"col\">Etat <i class=\"fa fa-sort ml-2\" (click)=\"onSort('active')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">crée le </th>\n                        <th scope=\"col\">crée par</th>\n                        <th scope=\"col\">Dernière modif.</th>\n                        <th scope=\"col\">Modifié par</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let insurance of insurances\">\n                        <th class=\"text-center\" scope=\"row\">\n                            <div class=\"custom-control custom-radio\">\n                                <input type=\"radio\" class=\"custom-control-input\" id=\"{{insurance.id}}\"\n                                    name=\"radio-stacked\" value=\"{{insurance.id}}\"\n                                    (change)=\"onItemChange($event.target.value)\">\n                                <label class=\"custom-control-label\" for=\"{{insurance.id}}\"></label>\n                            </div>\n                        </th> \n                       <td>{{insurance.id}}</td>\n                        <td class=\"text-capitalize\">{{insurance.name}}</td>\n                        <td class=\"text-center\">{{insurance.code}}</td>\n                        <td class=\"text-capitalize\">{{insurance.address}}</td>\n                        <td class=\"text-capitalize text-center\">\n                            <i class=\"fas fa-circle\"\n                                [ngClass]=\"{'text-green': insurance.active=='Y', 'text-red': insurance.active=='N'}\"\n                                ngbTooltip=\"{{insurance.active=='Y'? 'Actif' : 'Inactif'}}\"></i>\n                        </td>\n                        <td class=\"text-center\">{{insurance.createdAt | date:'dd/MM/yyyy H:mm:ss'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{insurance.createdByFirstName +' '+ insurance.createdByLastName}}</td>\n                        <td class=\"text-center text-center text-nowrap\">{{insurance.updatedAt ? (insurance.updatedAt | date:'dd/MM/yyyy H:mm:ss') : 'Jamais modifié'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{insurance.UpdatedByFirstName ? insurance.UpdatedByFirstName +' '+ insurance.UpdatedByLastName : ''}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"text-center mb-5 mt-4\">\n            <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n            <div *ngIf=\"hasNoData\" class=\"mt-3\">\n                <span class=\"text-muted ml-3 \" >{{EmptyMessage}}</span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-7 offset-md-5\">\n                <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n                    (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Insurance } from '../_models/insurance.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InsuranceService {\n\n  constructor( private http: HttpClient) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(insurance: Insurance): Observable<Insurance> {\n    return this.http.post<Insurance>(environment.baseUrl2 + '/insurance/add', insurance);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<Insurance> {\n    return this.http.put<Insurance>(environment.baseUrl2 + '/insurance/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<Insurance[]> {\n    return this.http.get<Insurance[]>(environment.baseUrl2 + '/insurance/list');\n  }\n\n    /**\n   * get a paginated list of object\n   */\n  findAllByPage(data): Observable<Insurance[]> {\n      let queryParams = {};\n       data['active']= (data['active'] == null) ? '' : data['active'];\n      //  data['deleted']= (data['deleted'] == null) ? '' : data['deleted'];\n  \n      queryParams = { params: new HttpParams().set('page', data['page'])\n                                              .set('size', data['entries'])\n                                              .set('name', data['name'])\n                                              .set('active', data['active'])\n                                              .set('sort', data['sort']+','+data['order'])\n    };\n      return this.http.get<Insurance[]>(environment.baseUrl2 + '/insurance/p_list', queryParams);\n    }\n    \n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<Insurance[]> {\n  return this.http.get<Insurance[]>(environment.baseUrl2 + '/insurance/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id) : Observable<Insurance> {\n  return this.http.get<Insurance>(environment.baseUrl2 + '/insurance/enable/' + id);\n \n  }\n\n  /**\n   * disable a object\n   */\n  disable(id) : Observable<Insurance> {\n    return this.http.get<Insurance>(environment.baseUrl2 + '/insurance/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<Insurance> {\n    return this.http.get<Insurance>(environment.baseUrl2 + '/insurance/detail/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n      return this.http.get<any>(environment.baseUrl2 + '/insurance/active_insurances_name');\n    }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddInsuranceComponent } from './add-insurance/add-insurance.component';\nimport { ListInsuranceComponent } from './list-insurance/list-insurance.component';\nimport { UpdateInsuranceComponent } from './update-insurance/update-insurance.component';\nimport { AddSubscriberComponent } from \"./add-subscriber/add-subscriber.component\";\nimport { UpdateSubscriberComponent } from \"./update-subscriber/update-subscriber.component\";\nimport { ListSubscriberComponent } from \"./list-subscriber/list-subscriber.component\";\n\nconst routes: Routes = [\n  {path:\"add\", component:AddInsuranceComponent},\n  {path:\"update/:id\", component: UpdateInsuranceComponent},\n  {path:\"list\", component:ListInsuranceComponent},\n  {path:\"add-subscriber\", component:AddSubscriberComponent},\n  {path:\"update-subscriber/:id\", component:UpdateSubscriberComponent},\n  {path:\"list-subscriber\", component:ListSubscriberComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InsuranceRoutingModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Insurance } from 'src/app/_models/insurance.model';\nimport { InsuranceService } from 'src/app/_services/insurance.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\n\n@Component({\n  selector: 'app-insurance-form',\n  templateUrl: './insurance-form.component.html',\n  styleUrls: ['./insurance-form.component.css']\n})\nexport class InsuranceFormComponent implements OnInit {\n\n  /**\n   *   form Group\n   */\n  form: FormGroup;\n\n  /**\n  * form submission action, it will get the value of the action to do\n  */\n  formAction = '';\n\n  /**\n   * invalid from controls\n   */\n  invalidFormControls: any;\n\n\n  /**\n   * parent component input\n   */\n  @Input()\n  insuranceId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * child component output\n   */\n  @Output()\n  objectEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * the component model\n   */\n  insurance: Insurance\n\n   /**\n   * define  states options\n   */\n  actives = [\n    {id: \"Y\", value: \"Actif\"},\n    {id: \"N\", value: \"Inactif\"},\n  ]\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   * @param redirectTo \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n\n  constructor(\n    private router: Router,\n    private alertService : AlertService,\n    private insuranceService: InsuranceService\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    if (this.insuranceId) this.initUpdateAction();\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      id: new FormControl(0),\n      name: new FormControl('', Validators.required),\n      code: new FormControl(''),\n      address: new FormControl(''),\n      account: new FormControl(''),\n      active: new FormControl('Y', Validators.required),\n      \n    });\n  }\n  /**\n   * init the form value when updating\n   */\n  initUpdateAction() {\n      this.insuranceService.findById(this.insuranceId).subscribe(\n        insurance => {\n          if (insurance) {\n            this.insurance = insurance;\n            this.form.patchValue(this.insurance)\n          } else {\n            this.errorAction(\"Modification impossible car l'assurance n'existe pas\", '/insurance/list');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de la modification\", '/insurance/list');\n        })\n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the object\n    */\n  save() {// reset alerts on submit\n    this.alertService.clear();\n\n    //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    this.insurance = this.form.value;\n  \n    if (this.form.valid) {\n      this.objectEmitter.emit({ insurance: this.insurance, action: this.formAction })\n      if (this.formAction == \"save_and_new\") this.initForm();\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n  /**\n   * get the form submission action\n   * @param action : string\n   */\n  actionToDo(action) {\n    this.formAction = action;\n  }\n\n  /**\n   * action to Do when  ckick on cancel button\n   */\n  cancelAction() {\n    this.errorAction('Action annulée', '/insurance/list');\n  }\n\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"mr-auto p-2 col-md-7\">\n                    <h3>{{title}}</h3>\n                </div>\n                <div class=\"col-md-5\">\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <button type=\"submit\" (click)=\"actionToDo('save')\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold\" value=\"save\">\n                                Enregistrer\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\" *ngIf='!insuranceId'>\n                            <button type=\"submit\" (click)=\"actionToDo('save_and_new')\"\n                                class=\"btn btn-block btn-info btn-sm font-weight-bold\" value=\"save_and_new\">\n                                Enreg. & nouveau\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <span (click)=\"cancelAction()\" class=\"btn btn-block btn-danger btn-sm font-weight-bold\"\n                                value=\"cancel\">\n                                Annuler\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <p class=\"text-muted\"> NB: les champs marqués d'un astérisque ( <span class=\"text-danger\">*</span> ) sont\n                obligatoire pour la validation du formulare</p>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Asurance</label>\n                        <span class=\"text-danger\">*</span>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Assurance\">\n                        </div>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.name\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label for=\"code\">code</label>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"code\" class=\"form-control\" placeholder=\"code\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label for=\"address\">Adresse</label>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"address\" class=\"form-control\" placeholder=\"Adresse\">\n                        </div>\n                    </div>\n                </div>\n                    <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                            <label for=\"account\">Numero de compte</label>\n                            <div class=\"input-group input-group-sm\">\n                                <input type=\"text\" formControlName=\"account\" class=\"form-control\"\n                                    placeholder=\"Numero de compte\">\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                            <label for=\"typeactive\">Etat</label>\n                            <span class=\"text-red\">*</span>\n                            <ng-select formControlName=\"active\" placeholder=\"Etat\">\n                                <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">{{active.value}}\n                                </ng-option>\n                            </ng-select>\n                            <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.active\">\n                                ce champ doit être renseigné\n                            </span>\n                        </div>\n                    </div>\n                \n                <!-- hidden -->\n                <input type=\"hidden\" formControlName=\"id\">\n            </div>\n        </div>\n    </div>\n</form>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { InsuranceSubscriber } from 'src/app/_models/insuranceSubscriber.model';\nimport { InsuranceSubscriberService } from 'src/app/_services/insurance-subscriber.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { disableItem } from 'src/app/_utility/disable-item';\nimport { enableItem } from 'src/app/_utility/enable-item';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-subscriber-list',\n  templateUrl: './subscriber-list.component.html',\n  styleUrls: ['./subscriber-list.component.css']\n})\nexport class SubscriberListComponent implements OnInit {\n  \n  /**\n     * search formGroup\n     */\n    public form: FormGroup;\n\n    /**\n     * entries formGroup\n     */\n    public entryForm: FormGroup;\n  \n    /**\n     * init first page\n     */\n    public page = 0;\n  \n    /**\n     * number of item par page default 10\n     */\n    public perPage = 10;\n  \n    /**\n     * total items\n     */\n    public totalItem: number;\n  \n    /**\n     * number of page\n     */\n    public pages: number;\n  \n    /**\n     * handle the spinner\n     */\n    public loading = true;\n  \n    /**\n     * the selected item a action\n     */\n    public selectedItem: number;\n  \n    /**\n     * object model\n     */\n    subscriber : InsuranceSubscriber;\n\n    /**\n     * collection of object\n     */\n    subscribers: InsuranceSubscriber[];\n  \n  \n    /**\n     * Define entries options\n     */\n    entries = [\n      { id: 10, value: 10 },\n      { id: 25, value: 25 },\n      { id: 50, value: 50 },\n      { id: 100, value: 100 }\n    ];\n\n   /**\n   * define  states options\n   */\n  actives = [\n    {id: \"Y\", value: \"Actif\"},\n    {id: \"N\", value: \"Inactif\"},\n  ]\n  \n    /**\n     *  order direction\n     */\n    order = 'desc';\n  \n    /**\n     * order column default id\n     */\n    sort = 'id';\n\n    /**\n     * description of the order direction\n     */\n    orderDescription = 'decroissant';\n    \n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n   /**\n    * Msg to display when request result is empty\n    */\n   EmptyMessage: String;\n  \n    @Input()\n    title: string;\n  \n    constructor(\n      private subscriberService: InsuranceSubscriberService,\n      private alertService: AlertService\n   \n    ) { }\n  \n    ngOnInit() {\n      \n      this.initForm();\n      this.getSubscribers();\n      \n    }\n  \n  \n    /**\n     *  init form \n     */\n    initForm() {\n      this.form = new FormGroup({\n        name: new FormControl(''),\n        active: new FormControl(null),\n      })\n  \n      this.entryForm = new FormGroup({\n        entries: new FormControl(10),\n      })\n    }\n  \n    /**\n     * get object list\n     */\n    getSubscribers() {\n      let data = this.form.value\n      data.entries = this.entryForm.get('entries').value;\n      data.page = this.page;\n      data.order = this.order;\n      data.sort = this.sort;\n     \n      this.subscriberService.findAllByPage(data).subscribe(\n        res => {\n          if (res) {\n            this.loading = false;\n            this.hasNoData=false;\n            this.totalItem = res['totalElements'];\n            this.pages = res['totalPages'];\n            this.subscribers = res['content'];\n            this.page = res['pageNumber'] + 1;\n          };\n        },\n        error =>{\n            this.subscribers = [];\n            this.loading=false;\n            this.hasNoData=true;\n            this.EmptyMessage=error;\n        })\n    }\n  \n   \n  /**\n   * search function\n   */\n  search() {\n    this.loading = true;\n    this.page =this.page > 0 ? this.page - 1: 0;\n    this.getSubscribers();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n    this.loading= true;\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getSubscribers();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getSubscribers();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.loading = true;\n    this.perPage = this.entryForm.get('entries').value;\n    this.page = this.page - 1;\n    this.getSubscribers();\n  }\n\n  /**\n   * set the selected item \n   * @param item \n   */\n  onItemChange(item) {\n    this.selectedItem = item;\n  }\n\n  /**\n   * disable an object\n   */\n  disable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment desactiver cet établissement?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n      if (result.value) {\n\n        this.subscriberService.disable(this.selectedItem).subscribe(result => {\n          //disable item in the DOM\n          if (result) disableItem(this.subscribers, result['id']);\n\n          Swal.fire(\n            'Desactivé!',\n            'établissement desactiver avec succès.',\n            'success'\n          );\n\n        });\n\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'l\\'établissement n\\'a pas été modifiée.',\n          'error'\n        )\n      }\n    })\n  }\n\n  /**\n   * enable an object\n   */\n  enable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Activer cet établissement?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n\n      if (result.value) {\n        this.subscriberService.enable(this.selectedItem).subscribe(result => {\n          //Enable item in the Dom\n          if (result) enableItem(this.subscribers, result['id']);\n\n          Swal.fire(\n            'Actvé!',\n            'établissement activé avec succès.',\n            'success'\n          );\n\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'L\\'établissement n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"row pl-3 pr-3\">\n            <div class=\"col-md-7\">\n                <form [formGroup]=\"form\">\n                    <div class=\"row\">\n                        <div class=\"row m-0 col-md-8\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                                            placeholder=\"Etablissement\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"active\" placeholder=\" Etat \" style=\"width: 100%;\">\n                                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">\n                                                {{active.value}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                              <div class=\"px-2 col-lg-2 col-md-2 col-sm-12 mb-1\">\n                                <span class=\"btn btn-light btn-sm\" (click)=\"search()\" style=\"width: 100%;\">\n                                    <i class=\"fas fa-search\"></i>\n                                </span>\n                            </div>\n\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-5\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/insurance/add-subscriber\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold text-nowrap text-white\">\n                                <i class=\"fas fa-list mr-2\"></i>\n                                Nouveau\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/insurance/update-subscriber/{{selectedItem}}\"\n                                class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-pen-alt mr-2\"></i>\n                                Modifier\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"enable()\"\n                                class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-on mr-2\"></i>\n                                Activer\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"disable()\"\n                                class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-off mr-2\"></i>\n                                Desactiver\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-10 text-center text-muted\">\n                <h4>{{title}}</h4>\n            </div>\n            <div class=\"col-md-2 text-right\">\n                <form [formGroup]=\"entryForm\">\n                     <div class=\"row\">\n                        <div for=\"entries\" class=\"col-sm-12 text-right mt-1\"> Afficher</div>\n                        <div class=\"col-sm-12 mb-2\">\n                            <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\"\n                                (change)=\"OnEntryChange()\">\n                                <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\n                            </ng-select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-sm table-hover table-bordered \">\n                <thead class=\"thead-light text-center\">\n                    <tr>\n                        <th scope=\"col\"></th>\n                        <th>ID</th>\n                        <th scope=\"col\">Etablissement<i class=\"fa fa-sort ml-2\" (click)=\"onSort('name')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                                <th scope=\"col\">code</th>\n                                <th scope=\"col\">Adresse</th>\n                        <th scope=\"col\">Etat <i class=\"fa fa-sort ml-2\" (click)=\"onSort('active')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">crée le </th>\n                        <th scope=\"col\">crée par</th>\n                        <th scope=\"col\">Dernière modif.</th>\n                        <th scope=\"col\">Modifié par</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let subscriber of subscribers\">\n                        <th class=\"text-center\" scope=\"row\">\n                            <div class=\"custom-control custom-radio\">\n                                <input type=\"radio\" class=\"custom-control-input\" id=\"{{subscriber.id}}\"\n                                    name=\"radio-stacked\" value=\"{{subscriber.id}}\"\n                                    (change)=\"onItemChange($event.target.value)\">\n                                <label class=\"custom-control-label\" for=\"{{subscriber.id}}\"></label>\n                            </div>\n                        </th>\n                        <td>{{subscriber.id}}</td>\n                        <td class=\"text-capitalize\">{{subscriber.name}}</td>\n                        <td class=\"text-center\">{{subscriber.code}}</td>\n                        <td class=\"text-capitalize\">{{subscriber.address}}</td>\n                        <td class=\"text-capitalize text-center\">\n                            <i class=\"fas fa-circle\"\n                                [ngClass]=\"{'text-green': subscriber.active=='Y', 'text-red': subscriber.active=='N'}\"\n                                ngbTooltip=\"{{subscriber.active=='Y'? 'Actif' : 'Inactif'}}\"></i>\n                        </td>\n                        <td class=\"text-center\">{{subscriber.createdAt | date:'dd/MM/yyyy H:mm:ss'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{subscriber.createdByFirstName +' '+ subscriber.createdByLastName}}</td>\n                        <td class=\"text-center text-center text-nowrap\">{{subscriber.updatedAt ? (subscriber.updatedAt | date:'dd/MM/yyyy H:mm:ss') : 'Jamais modifié'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{subscriber.UpdatedByFirstName ? subscriber.UpdatedByFirstName +' '+ subscriber.UpdatedByLastName : ''}}</td>\n                   \n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"text-center mb-5 mt-4\">\n            <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n            <div *ngIf=\"hasNoData\" class=\"mt-3\">\n                <span class=\"text-muted ml-3 \" >{{EmptyMessage}}</span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-7 offset-md-5\">\n                <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n                    (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n            </div>\n\n        </div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}