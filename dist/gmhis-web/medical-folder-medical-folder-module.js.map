{"version":3,"sources":["./src/app/medical-folder/certificate-follow-up/certificate-follow-up.component.ts","./src/app/medical-folder/certificate-follow-up/certificate-follow-up.component.html","./src/app/_services/current-treatment.service.ts","./src/app/medical-folder/exam-follow-up/exam-follow-up.component.ts","./src/app/medical-folder/exam-follow-up/exam-follow-up.component.html","./src/app/_services/patient-courier.service.ts","./src/app/_services/patient-check-up.service.ts","./src/app/medical-folder/consultation-follow-up/consultation-follow-up.component.ts","./src/app/medical-folder/consultation-follow-up/consultation-follow-up.component.html","./src/app/medical-folder/folder/folder.component.ts","./src/app/medical-folder/folder/folder.component.html","./src/app/medical-folder/antecedent/antecedent.component.ts","./src/app/medical-folder/antecedent/antecedent.component.html","./src/app/_services/admission.service.ts","./src/app/medical-folder/prescription-follow-up/prescription-follow-up.component.ts","./src/app/medical-folder/prescription-follow-up/prescription-follow-up.component.html","./src/app/_services/patient-history.service.ts","./src/app/medical-folder/medical-folder.module.ts","./src/app/medical-folder/new-consultation/new-consultation.component.ts","./src/app/medical-folder/new-consultation/new-consultation.component.html","./src/app/medical-folder/check-up-follow-up/check-up-follow-up.component.ts","./src/app/medical-folder/check-up-follow-up/check-up-follow-up.component.html","./src/app/_services/analysis-domain.service.ts","./src/app/_services/consultation.service.ts","./src/app/_services/patient-cro.service.ts","./src/app/medical-folder/cro-follow-up/cro-follow-up.component.ts","./src/app/medical-folder/cro-follow-up/cro-follow-up.component.html","./src/app/medical-folder/constant-follow-up/constant-follow-up.component.ts","./src/app/medical-folder/constant-follow-up/constant-follow-up.component.html","./src/app/_services/patient-certificate.service.ts","./src/app/medical-folder/mail-follow-up/mail-follow-up.component.ts","./src/app/medical-folder/mail-follow-up/mail-follow-up.component.html","./src/app/_services/allergy.service.ts","./src/app/medical-folder/medical-folder-routing.module.ts"],"names":[],"mappings":"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","file":"medical-folder-medical-folder-module.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { NgbCalendar, NgbDateAdapter, NgbDateParserFormatter, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { I18n, CustomDatepickerI18n, CustomAdapter, CustomDateParserFormatter } from \"./../../_utility/date/ngb-datepicker\";\nimport * as DecoupedEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport { dateOutputFormat } from 'src/app/_utility/date/date-output-format';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { TypeCertificateService } from 'src/app/_services/type-certificate.service';\nimport { PatientService } from 'src/app/_services/patient.service';\nimport { PatientCertificateService } from 'src/app/_services/patient-certificate.service';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { slugify } from 'src/app/_utility/string/slugify';\nimport { replaceDocVarialbles } from 'src/app/_utility/string/replaceDocParms';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AppCookieService } from 'src/app/_services/app-cookie.service';\n\n\n@Component({\n  selector: 'app-certificate-follow-up',\n  templateUrl: './certificate-follow-up.component.html',\n  styleUrls: ['./certificate-follow-up.component.css'],\n  providers: [\n    I18n,\n    { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n },\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter }\n  ] // define custom NgbDatepickerI18n provider\n})\nexport class CertificateFollowUpComponent implements OnInit {\n\n  /**\n   * form\n   */\n  form: FormGroup;\n\n  @Input()\n  patientId: number;\n\n  @Input()\n  admissionId: number;\n\n  /**\n  * init first page\n  */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 25;\n\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  /**\n   * \n   */\n  today = dateOutputFormat(new Date());\n\n  patient: Object;\n\n  pratician: Object;\n\n  /**\n    * date picker model\n    */\n  datePicker: NgbDateStruct;\n\n  /**\n  * assign the editor to a public property to make it accessible from the template\n  */\n  public Editor = DecoupedEditor;\n\n  /**\n  * data to preview\n  */\n  previewData: SafeHtml;\n\n  /**\n   * share a model in with the editor\n   */\n  public model = {\n    editorData: ''\n  };\n\n  certificateTypes: Object;\n\n  certificateType: Object;\n\n  patientCertificates: Object;\n\n  certificateCustomText = false;\n\n  patientCertificateId = 0;\n\n  /**\n   * pdf src for ngx-extended-pdf-viewer\n   */\n  docSrc: any;\n\n  constructor(\n    private typeCertificateService: TypeCertificateService,\n    private patientCertificateService: PatientCertificateService,\n    private patientService: PatientService,\n    private sanitizer: DomSanitizer,\n    private alertService: AlertService,\n    private userService: UserService,\n    private cookieService: AppCookieService\n    \n\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.typeCertificateService.getIdAndName().subscribe(res => { this.certificateTypes = res; });\n    this.userService.findByUsername(this.cookieService.get('username')).subscribe(res => { this.pratician = res; });\n    this.patientService.findById(this.patientId).subscribe(res => {\n      this.patient = res;\n      this.getCertificates();\n    });\n  }\n\n  /**\n   * init form\n   */\n  initForm() {\n    this.form = new FormGroup({\n      date: new FormControl(dateOutputFormat(new Date())),\n      certificate: new FormControl(null),\n    })\n  }\n\n  /**\n   * get a collection of the patient certificated\n   */\n  getCertificates() {\n\n    let data = {\n      patientId: this.patientId,\n      page: this.page,\n    }\n\n    this.patientCertificateService.findAllByPage(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.patientCertificates = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        this.patientCertificates = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n  }\n\n  /**\n   * add the toolbar to the DOM\n   * \n   */\n  public onReady(editor) {\n    editor.ui.getEditableElement().parentElement.insertBefore(\n      editor.ui.view.toolbar.element,\n      editor.ui.getEditableElement()\n    );\n  }\n\n\n  /**\n  * set the current page\n  * @param pageNum \n  */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = this.page - 1;\n    this.getCertificates();\n  }\n\n  /**\n   * set the content for the chosen certificate type\n   * @param val \n   */\n  setCertificateText() {\n    let certificateTypeId = this.form.get(\"certificate\").value;\n\n    this.typeCertificateService.findById(certificateTypeId).subscribe(res => {\n  \n    this.model.editorData = res['content'];\n\n      for (let index = 0; index < Object.keys(this.patient).length; index++) {\n        const element = '@@@-' + slugify(Object.keys(this.patient)[index]) + '-';\n        this.model.editorData = replaceDocVarialbles(this.model.editorData, this.patient, this.pratician)\n      }\n\n      this.previewData = this.sanitizer.bypassSecurityTrustHtml(this.model.editorData);\n    })\n\n  }\n\n  /**\n   *  tooble the hiden state of the editor\n   */\n  toggleEditorHidden() {\n    this.certificateCustomText = this.certificateCustomText ? false : true;\n  }\n\n  /**\n   * save data into the database\n   */\n  save() {\n\n    if (this.patientCertificateId == 0) {\n      let customText = !this.certificateCustomText ? null : this.model.editorData;\n      let data = {\n        \"admission\": this.admissionId,\n        \"docId\": this.form.get('certificate').value,\n        \"custom_text\": customText,\n        \"id\": this.patientCertificateId\n      }\n\n      this.patientCertificateService.save(data).subscribe(res => {\n        if (res) {\n          this.alertService.success('Certificat creé avec succès !');\n          this.page = this.page - 1;\n          this.patientCertificateId = res.id;\n          this.getCertificates();\n        }\n      });\n    } else {\n      this.alertService.error('Impossible de mofier un certificat qui a deja été crée, veillez creer un autre.')\n    }\n  }\n\n  /**\n   * pgenerate pdf in the ngx-pdf-extended-viewer\n   */\n  generateCerticifate(certificate) {\n      \n    const patientTag = document.getElementsByClassName('barcode')[0].firstChild;\n    this.patient = certificate['patient'];\n    let doc = this.patientCertificateService.generatePdf(certificate, patientTag);\n    this.docSrc = doc.output('datauristring');\n\n  }\n\n  /**\n   *  reset the datas and the form\n   */\n  reset() {\n   this.previewData = null;\n   this.patientCertificateId = 0;\n   this.form.get('certificate').reset();\n  }\n\n}\n","<ul class=\"nav nav-pills\" id=\"pills-tab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link active\" id=\"pills-certificate-list-tab\" data-toggle=\"pill\" href=\"#pills-certificate-list\"\n      role=\"tab\" aria-controls=\"pills-certificate-list\" aria-selected=\"true\">Liste des certificats</a>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link\" id=\"pills-new-certificate-tab\" data-toggle=\"pill\" href=\"#pills-new-certificate\" role=\"tab\"\n      aria-controls=\"pills-new-certificate\" aria-selected=\"false\">Nouveau certificate</a>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"pills-tabContent\">\n  <div class=\"tab-pane fade show active\" id=\"pills-certificate-list\" role=\"tabpanel\"\n    aria-labelledby=\"pills-certificate-list-tab\">\n    <div class=\"table-responsive mt-3\">\n      <table class=\"table table-sm table-hover table-striped\">\n        <thead>\n          <th>Date</th>\n          <th>certificat</th>\n          <th>Medecin</th>\n          <th>Centre Médical</th>\n          <th>PDF</th>\n        </thead>\n        <tr *ngFor=\"let certificate of patientCertificates\">\n          <td>{{certificate.date | date: 'dd/MM/yyyy hh:mm:ss'}}</td>\n          <td><button class=\"btn btn-link text-dark\"\n              (click)=\"atModalshow()\"><b>{{certificate.certificatType.name}}</b></button></td>\n          <td>{{certificate.practician.firstName +\" \" + certificate.practician.lastName}}</td>\n          <td>{{certificate.facility.name}}</td>\n          <td><button class=\"btn btm-sm btn-light\" style=\"width: 100%;\" (click)=\"generateCerticifate(certificate)\"\n              data-toggle=\"modal\" data-target=\"#certificatePdfModal\"><i class=\"fa fa-file-pdf text-danger\"\n                aria-hidden=\"true\"></i></button>\n          </td>\n        </tr>\n      </table>\n      <div class=\"text-center mb-5 mt-4\">\n        <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n          <span class=\"sr-only\">Loading...</span>\n        </div>\n        <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n        <div *ngIf=\"hasNoData\" class=\"mt-3\">\n          <span class=\"text-muted ml-3 \">{{EmptyMessage}}</span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-7 offset-md-5\">\n          <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n            (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"tab-pane fade show \" id=\"pills-new-certificate\" role=\"tabpanel\"\n    aria-labelledby=\"pills-new-certificate-tab\">\n    <form [formGroup]=\"form\">\n        <div class=\"row\">\n          <div class=\"col-md-4 input-group input-group-sm\">\n            <input formControlName=\"date\" class=\"form-control\" placeholder=\"jj-mm-AAAA\" ngbDatepicker #d=\"ngbDatepicker\"\n              value=\"{{today}}\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\" (click)=\"d.toggle()\">\n                <i class=\"far fa-calendar-alt\"></i>\n              </span>\n            </div>\n          </div>\n          <div class=\"col-md-8\">\n            <ng-select placeholder=\"Type de certificat\" (change)=\"setCertificateText()\" formControlName=\"certificate\">\n              <ng-option *ngFor=\"let certificate of certificateTypes\" [value]=\"certificate.id\">{{certificate.name}}\n              </ng-option>\n            </ng-select>\n          </div>\n        </div>\n        <div class=\"mt-3\">\n          <div *ngIf=\"previewData\" [hidden]=\"certificateCustomText\" class=\"mt-3\">\n            <div class=\"card\">\n              <div [innerHTML]=\"previewData\" class=\"card-body\" style=\"height: 20rem;\"></div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success mx-2\" (click)=\"save()\">Valider</button>\n            <button class=\"btn btn-sm btn-secondary  mx-2\" (click)=\"toggleEditorHidden()\"><i\n                class=\"fas fa-pen-alt mr-1\"></i>Modifier</button>\n            <button type=\"button\" class=\"btn btn-sm btn-danger mx-3\" (click)=\"reset()\">fermer</button>\n          </div>\n          <div  [hidden]=\"!certificateCustomText\">\n          <div class=\"card\">\n            <div class=\"card-body\" [hidden]=\"!certificateCustomText\">\n              <ckeditor [(ngModel)]=\"model.editorData\" [ngModelOptions]=\"{standalone: true}\" [editor]=\"Editor\"\n                (ready)=\"onReady($event)\" class=\"bg-light\"></ckeditor>\n            </div>\n          </div>\n          <div >\n            <button type=\"button\" class=\"btn btn-danger m-2\" (click)=\"toggleEditorHidden()\">Annuler</button>\n            <button type=\"button\" class=\"btn btn-success m-2\" (click)=\"save()\">Valider</button>\n          </div>\n        </div>\n        </div>\n    </form>\n  </div>\n</div>\n\n<app-patient-tag [patient]=\"patient\"></app-patient-tag>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"certificatePdfModal\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\n  aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!-- ngx-extended-pdf-viewer -->\n        <ngx-extended-pdf-viewer *ngIf='docSrc' [src]=\"docSrc\" useBrowserLocale=\"true\" height=\"80vh\">\n        </ngx-extended-pdf-viewer>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">fermer</button>\n      </div>\n    </div>\n  </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { CurrentTreatment } from '../_models/currentTreatment.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentTreatmentService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(currentTreatment : CurrentTreatment): Observable<CurrentTreatment> {\n    return this.http.post<CurrentTreatment>(environment.baseUrl2 + '/current-treatment/add', currentTreatment);\n  }\n\n  /**\n   * get object by id\n   * @param patient_id \n   */\n  findByPatientId(patient_id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/current-treatment/detail/' + patient_id);\n  }\n}\n","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { AnalysisDomainService } from 'src/app/_services/analysis-domain.service';\nimport { AnalysisRequestService } from 'src/app/_services/analysis-request.service';\nimport { PatientService } from 'src/app/_services/patient.service';\ndeclare let $: any;\n\n@Component({\n  selector: 'app-exam-follow-up',\n  templateUrl: './exam-follow-up.component.html',\n  styleUrls: ['./exam-follow-up.component.css']\n})\nexport class ExamFollowUpComponent implements OnInit {\n\n\n  form: FormGroup;\n\n  @Input()\n  admissionId: number;\n\n  @Input()\n  patientId: number;\n\n  /**\n  * init first page\n  */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  /**\n   * \n   */\n\n  analysisDomains: object;\n  /**\n   * \n   */\n  analysisTypes: object;\n  /**\n   * \n   */\n  selectectedItems = [];\n\n  /**\n   * \n   */\n  analysisRequest: object;\n\n  /**\n   * \n  */\n  message: string;\n  /**\n   * \n   * \n   */\n  error: string;\n\n  /**\n   * \n   */\n  requestLists: object;\n\n  analysis = [];\n\n  patient : object;\n\n  /**\n   * pdf src for ngx-extended-pdf-viewer\n   */\n  docSrc: any;\n\n  constructor(\n    private analysisRequestService: AnalysisRequestService,\n    private analysisDomainService: AnalysisDomainService,\n    private patientService: PatientService\n    \n  ) { }\n\n  ngOnInit(): void {\n\n    this.patientService.findById(this.patientId).subscribe(res => { this.patient = res;})\n    this.initForm()\n    this.analysisDomainService.findActive().subscribe(res => { this.analysisDomains = res; });\n    this.getAnalysisRequests();\n  }\n\n  /**\n   * \n   */\n  initForm() {\n\n    this.form = new FormGroup({\n      admission: new FormControl(this.admissionId),\n      analysis: new FormControl(null),\n      diagnostic: new FormControl(''),\n      id: new FormControl(0),\n      observation: new FormControl(''),\n      otherAnalysis: new FormControl('')\n    })\n  }\n\n  /**\n   * \n   */\n  getAnalysisRequests() {\n\n    let data = {\n      \"page\": this.page,\n      'size': this.perPage,\n      \"sort\": 'createdAt',\n      \"order\": 'desc',\n      'patientId': this.patientId\n    };\n\n    this.analysisRequestService.findAllByPatientAndPage(data).subscribe(\n      res => {\n        if (res) {\n\n          res['content'].forEach(element => {\n            map(element.analysis = JSON.parse(element.analysis).join(\", \"))\n          });\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.requestLists = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        this.requestLists = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n  }\n\n  /**\n  * set the current page\n  * @param pageNum \n  */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = this.page - 1;\n    this.getAnalysisRequests();\n  }\n\n  /**\n   * \n   */\n  saveAnalysisRequest() {\n    this.atModalshow();\n    let data = this.form.value;\n    data.analysis = JSON.stringify(this.selectectedItems);\n\n    if (this.form.valid) {\n      if (this.selectectedItems.length != 0) {\n        this.analysisRequestService.save(data).subscribe(res => {\n          this.analysisRequest = res;\n          this.form.get('id').setValue(res.id);\n          this.message = \"Demande d'analyses envoyée\";\n          this.loading = true;\n          this.page = this.page - 1;\n          this.getAnalysisRequests();\n        })\n\n      } else {\n        this.error = 'veillez selectionner des actes!'\n      }\n    } else {\n      this.error = 'Formulaire invalid';\n    }\n\n  }\n\n  /**\n   * \n   */\n  generateExam(request): void { \n    const patientTag = document.getElementsByClassName('barcode')[0].firstChild;\n    console.log(patientTag);\n    \n      let doc = this.analysisRequestService.generatePdf(request, 'Chambre 00', patientTag);\n      this.docSrc = doc.output('datauristring');\n  }\n\n  /**\n   * \n   * @param target \n   * @param item \n   */\n  checked(target, item) {\n    target.classList.toggle('bg-dark');\n\n    if (this.selectectedItems.includes(item)) {\n\n      let index = this.selectectedItems.indexOf(item);\n      this.selectectedItems.splice(index, 1);\n\n    } else {\n\n      this.selectectedItems.push(item);\n    }\n\n  }\n\n  /**\n   * \n   * @param item \n   */\n  selectedItem(item) {\n\n    this.analysisRequestService.findById(item).subscribe(res => {\n      this.selectectedItems = JSON.parse(res.analysis);\n\n      for (let index = 0; index < this.selectectedItems.length; index++) {\n        document.getElementById(this.selectectedItems[index]).classList.add('bg-dark');\n      }\n\n      this.form.patchValue(res);\n    });\n  }\n\n  /**\n   * \n   */\n  atModalshow() {\n    this.message = null;\n    this.error = null;\n  }\n\n  /**\n   * \n   */\n  atModalsClose() {\n    let analysisTypes = document.getElementsByClassName('analysisType');\n\n    for (let index = 0; index < analysisTypes.length; index++) {\n      document.getElementById(analysisTypes[index].id).classList.remove('bg-dark');\n    }\n  }\n}\n","<ul class=\"nav nav-pills\" id=\"pills-tab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link active\" id=\"pills-exams-tab\" data-toggle=\"pill\" href=\"#pills-exams\" role=\"tab\"\n      aria-controls=\"pills-exams\" aria-selected=\"true\">Examens</a>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link\" id=\"pills-check-up-tab\" data-toggle=\"pill\" href=\"#pills-check-up\" role=\"tab\"\n      aria-controls=\"pills-check-up\" aria-selected=\"false\">Bilans</a>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"pills-tabContent\">\n  <div class=\"tab-pane fade show active\" id=\"pills-exams\" role=\"tabpanel\" aria-labelledby=\"pills-exams-tab\">\n    <div class=\"float-right\">\n      <!-- Button trigger modal -->\n      <button type=\"button\" class=\"btn btn-success m-2\" data-toggle=\"modal\" data-target=\"#exam\" (click)=\"atModalshow()\">\n        Demande d'examens\n      </button>\n    </div>\n    <div class=\"table-responsive\">\n      <table class=\" table table-hover table-striped\">\n        <thead>\n          <th>Date</th>\n          <th>Examens</th>\n          <th>Etat</th>\n          <th>Medecin</th>\n          <th>Centre Médical</th>\n          <th>Editer</th>\n          <th>PDF</th>\n        </thead>\n        <tr *ngFor=\"let request of requestLists\">\n          <td>{{request.date | date: 'dd/MM/yyyy hh:mm:ss'}} </td>\n          <td><b>{{request.analysis}}</b></td>\n              <td class=\"text-capitalize text-center text-nowrap\">\n                <i class=\"fas fa-circle\" [ngClass]=\"{'text-green': request.state=='Y', 'text-red': request.state=='N'}\"\n                  ngbTooltip=\"{{request.state=='Y'? 'examens effectués' : 'examen non effectué'}}\"></i>\n              </td>\n          <td>{{request.practicianFirstName +\" \" + request.practicianLastName}}</td>\n          <td>{{request.facility}}</td>\n          <td> \n            <div class=\"text-info\" style=\"width: 100%;\" (click)=\"selectedItem(request.id)\" data-toggle=\"modal\" data-target=\"#exam\"\n            (click)=\"atModalshow()\">\n            <i class=\"fa fa-pen-alt\" aria-hidden=\"true\"></i>\n          </div>\n        </td>\n          <td>\n            <button class=\"btn btm-sm btn-light\" style=\"width: 100%;\" (click)=\"generateExam(request)\" data-toggle=\"modal\" data-target=\"#examPdfModal\">\n              <i class=\"fa fa-file-pdf text-danger\" aria-hidden=\"true\"></i>\n          </button>\n      </td>\n        </tr>\n      </table>\n    </div>\n    <div class=\"text-center mb-5 mt-4\">\n      <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n      <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n      <div *ngIf=\"hasNoData\" class=\"mt-3\">\n        <span class=\"text-muted ml-3 \">{{EmptyMessage}}</span>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-7 offset-md-5\">\n        <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n          (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n      </div>\n    </div>\n  </div>\n  <div class=\"tab-pane fade\" id=\"pills-check-up\" role=\"tabpanel\" aria-labelledby=\"pills-check-up-tab\">\n    \n    <app-check-up-follow-up [patientId]='patientId'  [admissionId]='admissionId'></app-check-up-follow-up>\n  </div>\n</div>\n\n<app-patient-tag [patient]=\"patient\"></app-patient-tag>\n\n<!-- analysis request  modal -->\n<div class=\"modal fade\" id=\"exam\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"examLabel\"\n  aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"examLabel\">Demande d'examens</h5>\n        <span type=\"button\" class=\"text-right mr-2\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"atModalsClose()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </span>\n      </div>\n      <div class=\"modal-body\" #htmlData style=\"word-spacing: 5px;\">\n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"message\">\n          {{message}}\n        </div>\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"error\">\n          {{error}}\n        </div>\n        <form [formGroup]=\"form\">\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <div *ngFor=\"let domain of analysisDomains\" class=\"mb-3\">\n                <div class=\"row text-center border\">\n                  <div class=\"col-md-12 text-bold\">\n                    {{ domain.name }}\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div *ngFor=\"let type of domain.analysisTypes\" class=\"col-md-3 border\">\n                    <input class=\"d-inline mr-2 analysisType\" style=\"width: 13px; height: 13px;\"\n                      (click)=\"checked($event.target, type.name)\" id=\"{{type.name}}\">\n                    <label class=\"d-inline\" for=\"type.name\">{{ type.name}}</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"col-md-12\">\n                <label for=\"otherAnalysis\">\n                  <h6 class=\"text-bold\">\n                    <u>Autres examens</u>\n                  </h6>\n                </label>\n                <div class=\"form-group\">\n                  <textarea class=\"form-control\" formControlName=\"otherAnalysis\" rows=\"4\"\n                    placeholder=\"\"></textarea>\n                </div>\n              </div>\n              <div class=\"col-md-12\">\n                <label for=\"observation\">\n                  <h6 class=\"text-bold\">\n                    <u>Observation</u>\n                  </h6>\n                </label>\n                <div class=\"form-group\">\n                  <textarea class=\"form-control\" formControlName=\"observation\" rows=\"4\"\n                    placeholder=\"\"></textarea>\n                </div>\n              </div>\n              <div class=\"col-md-12\">\n                <label for=\"diagnostic\">\n                  <h6 class=\"text-bold\">\n                    <u>Diagnostic</u>\n                  </h6>\n                </label>\n                <div class=\"form-group\">\n                  <textarea class=\"form-control\" formControlName=\"diagnostic\" rows=\"4\"\n                    placeholder=\"\"></textarea>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"atModalsClose()\">Fermer</button>\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"saveAnalysisRequest()\">Valider</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"examPdfModal\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\n  aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!-- ngx-extended-pdf-viewer -->\n        <ngx-extended-pdf-viewer *ngIf='docSrc' [src]=\"docSrc\" useBrowserLocale=\"true\" height=\"80vh\">\n        </ngx-extended-pdf-viewer>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">fermer</button>\n      </div>\n    </div>\n  </div>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport jsPDF from 'jspdf';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { patientDocument } from '../_models/patientDodument.model';\nimport { dateOutputFormat } from '../_utility/date/date-output-format';\nimport { replaceDocVarialbles } from '../_utility/string/replaceDocParms';\nimport { slugify } from '../_utility/string/slugify';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientCourierService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(document: patientDocument): Observable<patientDocument> {\n    return this.http.post<patientDocument>(environment.baseUrl2 + '/patient-courier/add', document);\n  }\n\n  /**\n * get a paginated list of object\n */\n  findAllByPage(data): Observable<patientDocument[]> {\n    let queryParams = {};\n\n    queryParams = {\n      params: new HttpParams().set('patientId', data['patientId'])\n        .set('page', data['page'])\n    };\n\n    return this.http.get<patientDocument[]>(environment.baseUrl2 + '/patient-courier/p_list', queryParams);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<patientDocument> {\n    return this.http.get<patientDocument>(environment.baseUrl2 + '/patient-courier/detail/' + id);\n  }\n\n  /**\n   * generate mail document\n   */\n   generatePdf(mail: object, patientTag: any) {\n    var doc = new jsPDF('p', 'pt', 'a4');\n    var patient = mail['patient'];\n    var practician = mail['practician'];\n    var croType = mail['courierType'];\n\n    if (mail) {\n\n      // doc variable\n      var date = dateOutputFormat(mail['date']);;\n      var patientNumber = patient['patientExternalId'];\n      var practicianFullName = practician['firstName'] + ' ' + practician['lastName'];\n      var footer = environment.documentFooter;\n\n      //doc head\n      doc.addImage(environment.logo, \"JPEG\", 25, 15, 60, 60);\n      doc.setFontSize(10);\n      doc.setFont(\"bold\");\n      doc.addImage(patientTag['src'], 'JPEG', 380, 30, 170, 50);\n\n      //information\n      doc.setFontSize(10);\n      doc.text(patientNumber, 430, 80);\n      doc.text(\"Date:\" + date, 25, 120)\n\n      doc.setFontSize(12);\n      doc.setFont('times', 'bold')\n      doc.text(\"Courier: \", 200, 190);\n      doc.setLineWidth(1)\n      doc.line(250, 192, 200, 192)\n      doc.setFontSize(10);\n\n      if (mail['custom_text']) {\n        var content = doc.splitTextToSize(mail['custom_text'], 540);\n        doc.text(content, 25, 210);\n      } else {\n        for (let index = 0; index < Object.keys(patient).length; index++) {\n          const element = '@@@-' + slugify(Object.keys(patient)[index]) + '-';\n          croType['content'] = replaceDocVarialbles(croType['content'], patient, practician);\n        }\n\n        // doc.html(croType['content'], {\n        //     callback: function (doc) {\n        //       doc.output('dataurlnewwindow');\n        //     },\n        //     x: 25,\n        //     y: 210\n        //   });\n\n        var content = doc.splitTextToSize(croType['content'], 540);\n        doc.text(content, 25, 210);\n      }\n\n      doc.setFont('times', 'bold')\n      doc.text(\"Médécin: \", 350, 700);\n      doc.text(practicianFullName, 350, 720);\n      doc.setTextColor(150)\n      doc.setFontSize(8);\n      doc.setLineWidth(0.25)\n      doc.line(552, 770, 25, 770)\n      var splitFooter = doc.splitTextToSize(footer, 540);\n      doc.text(splitFooter, 25, 780);\n\n    }\n\n    return doc;\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { patientDocument } from '../_models/patientDodument.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientCheckUpService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(document: patientDocument): Observable<patientDocument> {\n    return this.http.post<patientDocument>(environment.baseUrl2 + '/patient-check-up/add', document);\n  }\n\n  /**\n * get a paginated list of object\n */\n  findAllByPage(data): Observable<patientDocument[]> {\n    let queryParams = {};\n\n    queryParams = {\n      params: new HttpParams().set('patientId', data['patientId'])\n        .set('page', data['page'])\n    };\n\n    return this.http.get<patientDocument[]>(environment.baseUrl2 + '/patient-check-up/p_list', queryParams);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<patientDocument> {\n    return this.http.get<patientDocument>(environment.baseUrl2 + '/patient-check-up/detail/' + id);\n  }\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ConsultationService } from 'src/app/_services/consultation.service';\nimport { PathologyService } from 'src/app/_services/pathology.service';\nimport { SymptomService } from 'src/app/_services/symptom.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { dateOutputFormat } from 'src/app/_utility/date/date-output-format';\n\n@Component({\n  selector: 'app-consultation-follow-up',\n  templateUrl: './consultation-follow-up.component.html',\n  styleUrls: ['./consultation-follow-up.component.css']\n})\nexport class ConsultationFollowUpComponent implements OnInit {\n\n  /**\n  * init first page\n  */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'startDate';\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * \n   */\n  consultations: object;\n\n  /**\n  * patient id\n  */\n  @Input()\n  patientId: number;\n\n  /** */\n  @Input()\n  patientConsultations: object;\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  @Output()\n  activeTabEvent : EventEmitter <string> = new EventEmitter();\n\n  \n  /**\n   * the form\n   */\n  form: FormGroup;\n\n  /**\n   * consultation object\n   */\n  consultation: Object;\n\n  pathologies : Object;\n  symptoms : Object;\n\n  updatedMessage : string;\n\n  /**\n   * define consultation type option\n   */\n  consultationTypes = [\n    { id: 'p', value: 'Prémière consultation' },\n    { id: 's', value: 'Consultation de surveillance' },\n  ];\n\n  constructor(\n    private consultationService: ConsultationService,\n    private alertService : AlertService,\n    private pathologyService : PathologyService,\n    private symptomService : SymptomService\n  ) { }\n\n  ngOnInit(): void {\n    this.getConsultations();\n   this.initForm();\n   this.pathologyService.getIdAndName().subscribe( res => { this.pathologies = res;}); \n   this.symptomService.getIdAndName().subscribe (res => { this.symptoms = res;})\n  }\n\n  /**\n   * \n   */\n  getConsultations() {\n    let data = {\n      \"page\": this.page,\n      \"size\": this.perPage,\n      \"sort\": 'startDate',\n      \"order\": 'desc',\n      'patient': this.patientId\n    };\n\n    this.consultationService.findAllPatientConsultations(data).subscribe(\n      res => {\n        if (res) {\n\n          console.log(res);\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.consultations = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        this.consultations = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getConsultations();\n  }\n\n  sendActiveTab(activeTab) {\n    this.activeTabEvent.emit(activeTab);\n  }\n\n\n  /**\n   * init form\n   */\n  initForm() {\n\n    this.form = new FormGroup({\n      date: new FormControl(null), \n      conclusionExamResult: new FormControl(null),\n      admission: new FormControl(null),\n      conclusion: new FormControl({value: '', disabled:true}),\n      examinationReasons: new FormControl({value: '', disabled:true}),\n      examinationType: new FormControl({value: '', disabled:true}),\n      history: new FormControl({value: '', disabled:true}),\n      id: new FormControl(0),\n      pathologies: new FormControl(null),\n      symptoms: new FormControl({value: 'null', disabled:true} ),\n      startDate: new FormControl(null)\n     \n    })\n  }\n\n  selectedItem(itemId){\n    this.updatedMessage = null;\n    this.consultationService.findById(itemId).subscribe(res => {\n    let pathologies = res['spathologies'].map(({ id }) => id);\n    let symptoms = res['symptoms'].map(({ id }) => id);\n    this.form.get('conclusion').setValue(res.conclusion);\n    this.form.get('examinationReasons').setValue(res.examinationReasons);\n    this.form.get('history').setValue(res.history);\n    this.form.get('id').setValue(res.id);\n    this.form.get('date').setValue(dateOutputFormat( res.startDate));\n    this.form.get('examinationType').setValue(res.examinationType);\n    this.form.get('conclusionExamResult').setValue(res['conclusionExamResult']);\n    this.form.get('admission').setValue(res.admission);\n    this.form.get('pathologies').setValue(pathologies);\n    this.form.get('symptoms').setValue(symptoms);\n   \n  })\n\n    \n  }\n\n  /**\n   * save \n   */\n  save() {\n\n    //validate form '\n    this.alertService.clear();\n    let data = this.form.value;\n    if (this.form.valid) {\n        this.consultationService.update(data).subscribe(res => {\n            this.consultation = res;\n            this.updatedMessage = 'Consultation mis a jour avec succés';\n        })\n\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n}\n","<div class=\"table-responsive\">\n  <table class=\"table table-sm table-hover table-striped\">\n    <thead>\n      <th class=\"col-1\">Date</th>\n      <th class=\"col-3\">Observation</th>\n      <th class=\"col-1\">Medecin</th>\n      <th class=\"col-1\">Centre Médical</th>\n    </thead>\n    <tr *ngFor=\"let consultation of consultations;\">\n      <td><button class=\"btn btn-link\" (click)=\"selectedItem(consultation.id)\"  data-toggle=\"modal\" data-target=\"#editConsutation\">{{consultation.date | date: 'dd/MM/yyyy'}}</button> </td>\n      <td> {{consultation.conclusion}} </td>\n      <td class=\"text-capitalize\">{{consultation.practicianFirstName+' '+consultation.practicianLastName}}</td>\n      <td>{{consultation.facility}}</td>\n    </tr>\n  </table>\n</div>\n<div class=\"text-center mb-5 mt-4\">\n  <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n  <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n  <div *ngIf=\"hasNoData\" class=\"mt-3\">\n    <span class=\"text-muted ml-3 \">{{EmptyMessage}}</span>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-md-7 offset-md-5\">\n    <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n      (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n  </div>\n</div>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"editConsutation\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"patologyLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl modal-dialog-scrollable\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"patologyLabel\"></h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"updatedMessage\">\n         {{updatedMessage}}\n        </div>\n        <form [formGroup]='form' (submit)='save()'>\n          <div class=\"row\">\n              <div class=\"row col-md-9\">\n                  <div class=\"form-group\">\n                      \n                      <div class=\"input-group input-group-sm\">\n                          <label for=\"date\">Date : &nbsp;</label>\n                          <input type=\"text\" formControlName=\"date\"\n                              class=\"form-control\" disabled>\n                      </div>\n                  </div>\n                  <div class=\"row input-group-sm col-md-7\">\n                      <div class=\"col-md-5 float-right\"><label for=\"examinationType\" >Type de consult. <span class=\"text-danger\">*</span> :</label></div>\n                      <div class=\"col-md-7\">\n                      <ng-select formControlName=\"examinationType\" >\n                          <ng-option *ngFor=\"let type of consultationTypes\" [value]=\"type.id\"> {{type.value}}\n                          </ng-option>\n                      </ng-select>\n                  </div>\n                  </div>\n                  \n              </div>\n        \n              <div class=\" row col-md-3\">\n                 <div class=\"col-md-6\">\n                   <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Annuler</button>\n                 </div>\n                 <div class=\"col-md-6\">\n                   <button type=\"button\" class=\"btn btn-success\"  (click)=\"save()\">Valider</button>\n                 </div>\n                  \n              </div>\n          </div>\n         <hr>\n        \n          <div class=\"row\">\n              <div class=\"col-md-6\">\n                  <label for=\"reason\">\n                      <h6 class=\"text-bold\">\n                          <u>Motif de la consultation</u>\n                          <span class=\"text-danger\">*</span>\n                      </h6>\n                  </label>\n                  <div class=\"form-group\">\n                      <textarea class=\"form-control\" formControlName=\"examinationReasons\" rows=\"4\"\n                          placeholder=\"Motif de la consultation\"></textarea>\n                  </div>\n                  <div class=\"row input-group-sm mb-4\">\n                      <label for=\"symptoms\" >\n                          <h6 class=\"text-bold mb-2\"><u>Choix de symptômes</u></h6></label>\n                      <ng-select formControlName=\"symptoms\" style=\"width: 100%\" [multiple]=\"true\">\n                          <ng-option *ngFor=\"let symptom of symptoms\" [value]=\"symptom.id\" > {{symptom.name}}\n                          </ng-option>\n                      </ng-select>\n                  </div>\n              </div>\n              <div class=\"col-md-6\">\n                  <label for=\"history\">\n                      <h6 class=\"text-bold\">\n                          <u>Histoire de la maladie</u>\n                          <span class=\"text-danger\">*</span>\n                      </h6>\n                  </label>\n                  <div class=\"form-group\">\n                      <textarea class=\"form-control\" formControlName=\"history\" rows=\"8\"\n                          placeholder=\"Histoire de la maladie\"></textarea>\n                  </div>\n              </div>\n          </div>\n          <div class=\"row\">\n              <div class=\"col-md-6\">\n                  <label for=\"conclusion\">\n                      <h6 class=\"text-bold\">\n                          <u>Conclusion de l'Interrogatoire</u>\n                          <span class=\"text-danger\">*</span>\n                      </h6>\n                  </label>\n                  <div class=\"form-group\">\n                      <textarea class=\"form-control mt-3\" formControlName=\"conclusion\" rows=\"8\"\n                          placeholder=\"Conclusion l'Interrogatoire\"></textarea>\n                  </div>\n              </div>\n              <div class=\"col-md-6\">\n                  <div class=\"row input-group-sm\">\n                      <label for=\"pathologies\" class=\"mb-4\">\n                          <h6 class=\"text-bold mb-2\"><u>Choix de pathologies</u></h6></label>\n                      <ng-select formControlName=\"pathologies\" style=\"width: 100%\" [multiple]=\"true\">\n                          <ng-option *ngFor=\"let pathology of pathologies\" [value]=\"pathology.id\" > {{pathology.name}}\n                          </ng-option>\n                      </ng-select>\n                  </div>\n        \n                   <label for=\"conclusion\" class=\"mt-2\">\n                      <h6 class=\"text-bold\"><u>Interpretation des résultat d'Examens</u>\n                  </h6>\n                  </label>\n                  <div class=\"form-group\">\n                      <textarea class=\"form-control\" formControlName=\"conclusionExamResult\" rows=\"5\"\n                          placeholder=\"Interpretation des résultat d'Examens\"></textarea>\n                  </div>\n              </div>\n          </div>\n        \n        </form>\n    \n        \n      </div>\n     \n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Admission } from 'src/app/_models/admission.model';\nimport { Patient } from 'src/app/_models/patient.model';\nimport { AdmissionService } from 'src/app/_services/admission.service';\nimport { ConsultationService } from 'src/app/_services/consultation.service';\nimport { PatientService } from 'src/app/_services/patient.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-folder',\n  templateUrl: './folder.component.html',\n  styleUrls: ['./folder.component.css']\n})\nexport class FolderComponent implements OnInit {\n\n \n  public patientId : number;\n\n  public admissionId : number;\n\n  public startDate = new Date();\n\n  title = '';\n \n  public patient : Object;\n\n  public admission : Object;\n\n  public activeTab: string;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private patientService : PatientService,\n    private admissionService :  AdmissionService,   \n  ) { }\n \n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params=>{\n       this.patientId = params.patientId;\n       this.admissionId = params.admissionId;   \n    })\n\n    this.patientService.findById(this.patientId).subscribe(res =>{ this.patient=res; });\n    this.admissionService.findById(this.admissionId).subscribe(res =>{ this.admission=res; });\n  }\n\n  receiveActiveTab($event) {\n    this.activeTab = $event;\n    \n  }\n  \n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"row\" *ngIf=\"patient\">\n            <div class=\"col-lg-3\">\n                <h4 class=\"text-muted\">Dossier patient</h4>\n            </div>\n            <div class=\"col-lg-5 text-center\">\n                <div class=\"text-capitalized\"> <strong>{{patient.firstName+' '+patient.lastName}}</strong> - né(e) le\n                    {{patient.birthDate | date : 'dd/MM/yyy'}}\n                    <!--14 ans -->\n                </div>\n                <div>tel: {{patient.contact1}} - {{patient.profession}} - {{patient.numberOfChildren }} enfants</div>\n                <!-- <div>175cm, 71kg</div> -->\n            </div>\n            <div class=\"col-lg-4 text-center\">\n                <div><u>Correspondants</u></div>\n                <div>\n                    <div> {{patient.correspondant}}: {{patient.correspondantCellPhone}}</div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-3\">\n                <div class=\"nav flex-column nav-pills\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n                    <a class=\"nav-link active\" id=\"v-pills-antecedent-tab\" data-toggle=\"pill\" href=\"#v-pills-antecedent\"\n                        role=\"tab\" aria-controls=\"v-pills-antecedent\" aria-selected=\"true\">Antecedents & traitements\n                        <span class=\"badge badge-pill badge-warning\">0</span></a>\n                    <a class=\"nav-link\" id=\"v-pills-new-consultation-tab\" data-toggle=\"pill\"\n                        href=\"#v-pills-new-consultation\" role=\"tab\" aria-controls=\"v-pills-new-consultation\"\n                        aria-selected=\"false\">Nouvelle consultation</a>\n                    <a class=\"nav-link\" id=\"v-pills-consultation-follow-up-tab\" data-toggle=\"pill\"\n                        href=\"#v-pills-consultation-follow-up\" role=\"tab\" aria-controls=\"v-pills-consultation-follow-up\"\n                        aria-selected=\"false\" >Consultations <span\n                            class=\"badge badge-pill badge-warning\">0</span></a>\n                    <a class=\"nav-link\" id=\"v-pills-constant-follow-up-tab\" data-toggle=\"pill\"\n                        href=\"#v-pills-constant-follow-up\" role=\"tab\" aria-controls=\"v-pills-constant-follow-up\"\n                        aria-selected=\"false\"> Suivie des constantes <span\n                            class=\"badge badge-pill badge-warning\">0</span></a>\n                    <a class=\"nav-link\" id=\"v-pills-exam-follow-up-tab\" data-toggle=\"pill\"\n                        href=\"#v-pills-exam-follow-up\" role=\"tab\" aria-controls=\"v-pills-exam-follow-up\"\n                        aria-selected=\"false\">Bilans & examens <span class=\"badge badge-pill badge-warning\">0</span></a>\n                    <a class=\"nav-link\" id=\"v-pills-prescription-follow-up-tab\" data-toggle=\"pill\"\n                        href=\"#v-pills-prescription-follow-up\" role=\"tab\" aria-controls=\"v-pills-prescription-follow-up\"\n                        aria-selected=\"false\">Ordonances <span class=\"badge badge-pill badge-warning\">0</span></a>\n                    <a class=\"nav-link\" id=\"v-pills-certificate-follow-up-tab\" data-toggle=\"pill\"\n                        href=\"#v-pills-certificate-follow-up\" role=\"tab\" aria-controls=\"v-pills-certificate-follow-up\"\n                        aria-selected=\"false\">Certificats médicaux <span\n                            class=\"badge badge-pill badge-warning\">0</span></a>\n                    <a class=\"nav-link\" id=\"v-pills-cro-tab\" data-toggle=\"pill\" href=\"#v-pills-cro\" role=\"tab\"\n                        aria-controls=\"v-pills-cro\" aria-selected=\"false\">CRO<span\n                            class=\"badge badge-pill badge-warning\">0</span></a>\n                            <a class=\"nav-link\" id=\"v-pills-mail-tab\" data-toggle=\"pill\" href=\"#v-pills-mail\" role=\"tab\"\n                        aria-controls=\"v-pills-mail\" aria-selected=\"false\">Courier<span\n                            class=\"badge badge-pill badge-warning\">0</span></a>\n                    <a class=\"nav-link\" id=\"v-pills-attachment-tab\" data-toggle=\"pill\" href=\"#v-pills-attachment\"\n                        role=\"tab\" aria-controls=\"v-pills-attachment\" aria-selected=\"false\"> pièce joints <span\n                            class=\"badge badge-pill badge-warning\">0</span></a>\n                </div>\n            </div>\n            <div class=\"col-9\">\n                <div class=\"tab-content\" id=\"v-pills-tabContent\">\n                    <div class=\"tab-pane fade show active\" id=\"v-pills-antecedent\" role=\"tabpanel\"\n                        aria-labelledby=\"v-pills-antecedent-tab\">\n                        <app-antecedent [patientId]=\"patientId\"></app-antecedent>\n                    </div>\n                    <div class=\"tab-pane fade\" id=\"v-pills-new-consultation\" role=\"tabpanel\"\n                        aria-labelledby=\"v-pills-new-consultation-tab\">\n                        <app-new-consultation [patientId]='patientId'  [admissionId]='admissionId' [startDate]='startDate'></app-new-consultation>\n                    </div>\n                    <div class=\"tab-pane fade\" id=\"v-pills-consultation-follow-up\" role=\"tabpanel\"\n                        aria-labelledby=\"v-pills-consultation-follow-up-tab\">\n                        <app-consultation-follow-up [patientId]=\"patientId\" (activeTabEvent)=\"receiveActiveTab($event)\"></app-consultation-follow-up>\n                    </div>\n                    <div class=\"tab-pane fade\" id=\"v-pills-constant-follow-up\" role=\"tabpanel\"\n                        aria-labelledby=\"v-pills-constant-follow-up-tab\">\n                        <app-constant-follow-up [patientId]=\"patientId\"></app-constant-follow-up>\n                    </div>\n                    <div class=\"tab-pane fade\" id=\"v-pills-exam-follow-up\" role=\"tabpanel\"\n                        aria-labelledby=\"v-pills-exam-follow-up-tab\">\n                        <app-exam-follow-up [admissionId]='admissionId' [patientId]='patientId'></app-exam-follow-up>\n                    </div>\n                    <div class=\"tab-pane fade\" id=\"v-pills-prescription-follow-up\" role=\"tabpanel\"\n                        aria-labelledby=\"v-pills-prescription-follow-up-tab\">\n                        <app-prescription-follow-up [admissionId]='admissionId' [patientId]='patientId'></app-prescription-follow-up>\n                    </div>\n                    <div class=\"tab-pane fade\" id=\"v-pills-certificate-follow-up\" role=\"tabpanel\"\n                        aria-labelledby=\"v-pills-certificate-follow-up-tab\">\n                        <app-certificate-follow-up [patientId]='patientId'  [admissionId]='admissionId'></app-certificate-follow-up>\n                    </div>\n                    <div class=\"tab-pane fade\" id=\"v-pills-cro\" role=\"tabpanel\" aria-labelledby=\"v-pills-cro-tab\">\n                        <app-cro-follow-up [patientId]='patientId'  [admissionId]='admissionId'></app-cro-follow-up>\n                    </div>\n                    <div class=\"tab-pane fade\" id=\"v-pills-mail\" role=\"tabpanel\" aria-labelledby=\"v-pills-mail-tab\">\n                        <app-mail-follow-up [patientId]='patientId'  [admissionId]='admissionId'></app-mail-follow-up>\n                    </div>\n                    <div class=\"tab-pane fade\" id=\"v-pills-attachment\" role=\"tabpanel\"\n                        aria-labelledby=\"v-pills-attachment-tab\">\n                        <div class=\"float-right\">\n                            <!-- Button trigger modal -->\n                            <input type=\"file\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, } from \"@angular/forms\";\nimport { PatientHistory } from 'src/app/_models/patientHistory.model';\nimport { AntecedentService } from 'src/app/_services/antecedent.service';\nimport { PatientHistoryService } from 'src/app/_services/patient-history.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { AntecedentFamilyService } from 'src/app/_services/antecedent-family.service';\nimport { CurrentTreatmentService } from 'src/app/_services/current-treatment.service';\nimport { AllergyService } from 'src/app/_services/allergy.service';\n\n@Component({\n  selector: 'app-antecedent',\n  templateUrl: './antecedent.component.html',\n  styleUrls: ['./antecedent.component.css']\n})\nexport class AntecedentComponent implements OnInit {\n\n  /**\n   * \n   */\n  form: FormGroup;\n\n  /**\n   * \n   */\n  searchForm: FormGroup;\n\n  currentTreatmentForm : FormGroup;\n\n  allergyForm : FormGroup;\n\n\n  histories: object;\n\n  historyFamilies: object;\n\n  currentTreatment: object;\n\n  allergies: object;\n\n  // /**\n  //  * \n  //  */\n  // surgicalHistories: object;\n\n  \n  patientHistories = [];\n  medicalHistories = [];\n  surgicalHistories= [];\n  familyHistories = [];\n  medicalHistoriesIds = [];\n  surgicalHistoriesIds= [];\n  familyHistoriesIds = [];\n\n  @Input()\n  patientId: number;\n\n  historyType = 'medicalHistories';\n\n  selectedIds = [];\n  selectedNames = [];\n\n  /**\n  * selected  antecedent  */\n  selectedHistories = [];\n\n\n  constructor(\n    private historyService: PatientHistoryService,\n    private alertService: AlertService,\n    private antecedentService: AntecedentService,\n    private antecedentFamiltyService: AntecedentFamilyService,\n    private treatmentService : CurrentTreatmentService,\n    private allergyService : AllergyService\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n   \n    // set patient histories form data\n    this.historyService.findByPatientId(this.patientId).subscribe(res => {\n      if(res){\n        this.form.get(\"id\").setValue(res.id);\n        this.surgicalHistories = res.surgicalHistories.map(({ name }) => name);\n        this.surgicalHistoriesIds = res.surgicalHistories.map(({ id }) => id);\n        this.familyHistories = res.familyHistories.map(({ name }) => name);\n        this.familyHistoriesIds = res.familyHistories.map(({ id }) => id);\n        this.medicalHistories = res.medicalHistories.map(({ name }) => name);\n        this.medicalHistoriesIds = res.medicalHistories.map(({ id }) => id);\n      }\n    });\n\n    // set allergy form data \n    this.treatmentService.findByPatientId(this.patientId).subscribe(res => {\n      this.currentTreatmentForm.get(\"id\").setValue(res.id);\n      this.currentTreatmentForm.get(\"description\").setValue(res.description);\n    })\n\n     // set allergy form data \n     this.allergyService.findByPatientId(this.patientId).subscribe(res => {\n      this.allergyForm.get(\"id\").setValue(res.id);\n      this.allergyForm.get(\"description\").setValue(res.description);\n    })\n\n    this.antecedentFamiltyService.getIdAndName().subscribe(res => { this.historyFamilies = res; });\n  }\n\n\n  initForm() {\n    this.form = new FormGroup({\n      id: new FormControl(0),\n      medicalHistories: new FormControl(''),\n      surgicalHistories: new FormControl(''),\n      familyHistories: new FormControl(''),\n      patient: new FormControl(this.patientId),\n      description: new FormControl(''),\n      allergies: new FormControl('')\n    }); this.histories\n\n    this.searchForm = new FormGroup({\n      history: new FormControl(''),\n      historyFamily: new FormControl(null)\n    });\n\n    this.currentTreatmentForm = new FormGroup ({  \n        description: new FormControl(''),\n        id: new FormControl(0),\n        patient: new FormControl(this.patientId)\n    });\n\n    this.allergyForm = new FormGroup ({  \n      description: new FormControl(''),\n      id: new FormControl(0),\n      patient: new FormControl(this.patientId)\n  })\n  }\n\n  /**\n   * \n   */\n  save() {\n\n    let antecedantdata = this.form.value;\n    antecedantdata[\"medicalHistories\"] = this.medicalHistoriesIds.join(',');\n    antecedantdata[\"surgicalHistories\"] = this.surgicalHistoriesIds.join(',');\n    antecedantdata[\"familyHistories\"] = this.familyHistoriesIds.join(',');\n    this.historyService.save(antecedantdata).subscribe(res => { });\n\n    let treatmentData = this.currentTreatmentForm.value;\n    this.treatmentService.save(treatmentData).subscribe(res => {});\n\n    let allergyData = this.allergyForm.value;\n    this.allergyService.save(allergyData).subscribe(res => {});\n\n    this.alertService.success('Antécedents & traitements mis a jour!');\n  }\n\n  /**\n     * search function\n     */\n  search() {\n  }\n\n  /**\n   * insert or remove a item from the patient antedents array\n   * @param history \n   */\n  public getSelectedHistory(history) {\n\n    if (this.patientHistories.includes(history)) {\n      let index = this.patientHistories.indexOf(history);\n      this.patientHistories.splice(index, 1);\n    } else {\n      this.patientHistories.push(history);\n    }\n\n  }\n\n  /**\n   * \n   */\n  getHistories() {\n\n    let data = this.searchForm.value;\n    this.antecedentService.getIdAndNameByFamily(data).subscribe(res => { this.histories = res; });\n  }\n\n  resetHistories() {\n    this.histories = [];\n    this.selectedHistories = [];\n    this.searchForm.get(\"historyFamily\").setValue(null);\n  }\n\n  /**\n    * insert or remove an act from the selected act array\n    * @param selectedItem\n    */\n  public getSelectedHistories(selectedItem) {\n\n    if (this.selectedHistories.includes(selectedItem)) {\n\n      let index = this.selectedHistories.indexOf(selectedItem);\n      this.selectedHistories.splice(index, 1);\n\n    } else {\n\n      this.selectedHistories.push(selectedItem);\n    }\n\n  }\n\n  /**\n   * remove an act from seleted act list\n   * @param item \n   */\n  removeMedicalHistory(item) {\n    this.medicalHistories.splice(this.medicalHistories.indexOf(item), 1);\n    this.medicalHistoriesIds.splice(this.medicalHistoriesIds.indexOf(item), 1)\n  }\n\n  removeSurgicalHistory(item) {\n    this.surgicalHistories.splice(this.surgicalHistories.indexOf(item), 1);\n    this.surgicalHistoriesIds.splice(this.surgicalHistoriesIds.indexOf(item), 1);\n  }\n\n  removeFamilyHistory(item) {\n    this.familyHistories.splice(this.familyHistories.indexOf(item), 1);\n    this.familyHistoriesIds.splice(this.familyHistoriesIds.indexOf(item), 1)\n  }\n\n  removeSelectedHistory(item) {\n    let index = this.selectedHistories.indexOf(item);\n    this.selectedHistories.splice(index, 1);\n  }\n\n  setHistoriesType(type) {\n    this.historyType = type;\n  }\n\n  setHistories() {\n  this.selectedIds = this.selectedHistories.map(({ id }) => id);\n  this.selectedNames = this.selectedHistories.map(({ name }) => name);\n    switch (this.historyType) {\n      case \"surgicalHistories\":\n        this.surgicalHistories = this.selectedNames;\n        this.surgicalHistoriesIds = this.selectedIds;\n        break;\n\n      case \"familyHistories\":\n        this.familyHistories = this.selectedNames;\n        this.familyHistoriesIds = this.selectedIds;\n        break;\n\n      default:\n        this.medicalHistories = this.selectedNames;\n        this.medicalHistoriesIds = this.selectedIds;\n        break;\n    }\n  }\n\n\n  //   if(this.historyType == \"medicalHistory\" || this.historyType == \"familyHistory\"){\n  //     this.histories = [\n  //       { id:1, name: \"varicelle\"},\n  //       { id:2, name: \"rougeole\"},\n  //       { id:3, name: \"oreillons\"},\n  //       { id:4, name: \"rubéole\"},\n  //       { id:5, name: \"splénectomie\"},\n  //       { id:6, name: \"Grossesse en cours\"},\n  //       { id:7, name: \"Asthme (autre que sévère et sous traitement continu)\"},\n  //       { id:8, name: \"Asthme sévère sous traitement continu\"},\n  //       { id:9, name: \"Diabète ID ou non ID\"},\n  //       { id:10, name: \"Néoplasie - cancer\"},\n  //       { id:11, name: \"Lupus érythémateux aigu disséminé\"},\n  //       { id:12, name: \"Sclérose en plaques\"},\n  //       { id:13, name: \"Mucoviscidose\"}\n  //     ];\n  //   } else if ((this.historyType == 'surgicalHistory')){\n\n  //\n\n\n}\n","<form [formGroup]='form' (submit)='save()'>\n    <div class=\"row col-md-4 offset-md-8\">\n        <div class=\"col-md-6 mb-1\">\n            <button type=\"submit\" class=\"btn btn-success\">Valider</button>\n        </div>\n        <div class=\"col-md-6 mb-1\">\n            <button type=\"button\" class=\"btn btn-danger\">Annuler</button>\n        </div>\n    </div>\n    <div class=\"my-2\">\n        <h5 class=\"text-bold m-3 text-center\">Antécédents</h5>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-lg-4\">\n            <label for=\"medicalHistories\">\n                <h6 class=\"text-bold\"><u>Médicaux</u>\n                    <!-- trigger modal -->\n                    <span class=\"badge bg-success m-1 p-1\" (click)=\"resetHistories()\"\n                        (click)=\"setHistoriesType('medicalHistories')\" data-toggle=\"modal\" data-target=\"#history\"><i\n                            class=\"fa fa-plus\"></i></span>\n                </h6>\n            </label>\n            <div class=\"form-group border rounded\" style=\"min-height: 10rem;\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-sm table-hover \">\n                            <tr *ngFor=\"let mHistory of medicalHistories\">\n                                <td class=\"text-capitalize\">{{mHistory}}</td>\n                                <td>\n                                    <div class=\"badge badge-danger\" (click)=\"removeMedicalHistory(mHistory)\">X\n                                    </div>\n                                </td>\n                            </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-4\">\n            <label for=\"surgicalHistories\">\n                <h6 class=\"text-bold\"><u>Chirugicaux</u>\n                    <!-- trigger modal -->\n                    <span class=\"badge bg-success m-1 p-1\" (click)=\"resetHistories()\"\n                        (click)=\"setHistoriesType('surgicalHistories')\" data-toggle=\"modal\" data-target=\"#history\"><i\n                            class=\"fa fa-plus\"></i></span>\n                </h6>\n            </label>\n            <div class=\"form-group border rounded\" style=\"min-height: 10rem;\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-sm table-hover \">\n                            <tr *ngFor=\"let sHistory of surgicalHistories\">\n                                <td class=\"text-capitalize\">{{sHistory}}</td>\n                                <td>\n                                    <div class=\"badge badge-danger\" (click)=\"removeSurgicalHistory(sHistory)\">X\n                                    </div>\n                                </td>\n                            </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-4\">\n            <label for=\"familyHistories\">\n                <h6 class=\"text-bold\"><u>Familiaux</u>\n                    <!-- trigger modal -->\n                    <span class=\"badge bg-success m-1 p-1\" (click)=\"resetHistories()\"\n                        (click)=\"setHistoriesType('familyHistories')\" data-toggle=\"modal\" data-target=\"#history\"><i\n                            class=\"fa fa-plus\"></i></span>\n                </h6>\n            </label>\n            <div class=\"form-group border rounded\" style=\"min-height: 10rem;\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-sm table-hover \">\n                            <tr *ngFor=\"let fHistory of familyHistories\">\n                                <td class=\"text-capitalize\">{{fHistory}}</td>\n                                <td>\n                                    <div class=\"badge badge-danger\" (click)=\"removeFamilyHistory(fHistory)\">X\n                                    </div>\n                                </td>\n                            </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n    <div>\n        <div class=\"my-2\">\n            <h5 class=\"text-bold m-3 text-center\">Traitement Actuel & allergie</h5>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <form [formGroup] = \"currentTreatmentForm\">\n                <label for=\"description\">\n                    <h6 class=\"text-bold\"><u>Traitement actuel</u></h6>\n                </label>\n                <div class=\"form-group\">\n                    <textarea class=\"form-control\" formControlName=\"description\" rows=\"5\"\n                        placeholder=\"Traitement actuel\"></textarea>\n                </div>\n            </form>\n            </div>\n            <div class=\"col-md-6\">\n                <form [formGroup] = \"allergyForm\">\n                <label for=\"description\">\n                    <h6 class=\"text-bold\"><u>Allergies</u></h6>\n                </label>\n                <div class=\"form-group\">\n                    <textarea formControlName=\"description\" class=\"form-control\" rows=\"5\"\n                        placeholder=\"Allergies\"></textarea>\n                </div>\n            </form>\n            </div>\n        </div>\n    </div>\n\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"history\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\n    aria-labelledby=\"historyLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg modal-dialog-scrollable\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"historyLabel\">Choisir des Antecedents</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n              \n                <form [formGroup]=\"searchForm\" (submit)=\"search()\">\n                    <div class=\"row\">\n                        <div class=\"col-md-5\">\n                            <div class=\"form-group\">\n                                <div class=\"input-group input-group-sm\">\n                                    <input type=\"text\" formControlName=\"history\" class=\"form-control\"\n                                        placeholder=\"Antécédent\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-5\">\n                            <ng-select formControlName=\"historyFamily\" placeholder=\" Type d'antécédent\">\n                                <ng-option *ngFor=\"let type of historyFamilies\" [value]=\"type.id\"> {{type.name}}\n                                </ng-option>\n                            </ng-select>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <button class=\"btn btn-light px-3 py-1\" style=\"width:100%\" (click)=\"getHistories()\">\n                                <i class=\"fas fa-search\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-sm table-stripped table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th style=\"width: 35px;\"></th>\n                                        <th>Antécédents</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let history of histories\">\n                                        <td>\n                                            <div class=\"custom-control custom-checkbox\">\n                                                <input type=\"checkbox\" class=\"custom-control-input\"\n                                                    value=\"{{history.name}}\" id=\"{{history.name}}\"\n                                                    (change)=\"getSelectedHistories(history)\">\n                                                <label class=\"custom-control-label\" for=\"{{history.name}}\"></label>\n                                            </div>\n                                        </td>\n                                        <td>{{history.name}}</td>\n                                    </tr>\n                                </tbody>\n                                <tfoot></tfoot>\n                            </table>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-sm table-hover table-bordered \">\n                                <thead class=\"thead-light text-center\">\n                                    <tr>\n                                        <th scope=\"col\"> Liste des antecedents Selectionnés</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let selectedHistory of selectedHistories\">\n                                        <td class=\"text-capitalize\">{{selectedHistory.name}}</td>\n                                        <td>\n                                            <div class=\"badge badge-danger\" (click)=\"removeSelectedHistory(selectedHistory)\">X\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Annuler</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\n                    (click)=\"setHistories()\">Valider</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable, Type } from '@angular/core';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Admission } from '../_models/admission.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdmissionService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n    *  POST: add a new object to the database \r\n    */\r\n  save(admission: Admission): Observable<Admission> {\r\n    return this.http.post<Admission>(environment.baseUrl2 + '/admission/add', admission);\r\n  }\r\n\r\n  /** \r\n   * PUT: update the object on the server. Returns the updated objet upon success. \r\n   */\r\n  update(admission: Admission): Observable<Admission> {\r\n    return this.http.put<Admission>(environment.baseUrl2 + '/admission/update/' + admission.id, admission);\r\n  }\r\n\r\n  /** \r\n   * DELETE: delete the hero from the server \r\n   */\r\n  delete(id: number): Observable<any> {\r\n    return this.http.delete<any>(environment.baseUrl2 + '/admission/delete/' + id);\r\n  }\r\n\r\n  /**\r\n   * get a list of object\r\n   */\r\n  findAll(data: object): Observable<any[]> {\r\n\r\n    let queryParams = {};\r\n    data['practician']= (data['practician'] == null) ? '' : data['practician'];\r\n    data['service']= (data['service'] == null) ? '' : data['service'];\r\n    data['act']= (data['act'] == null) ? '' : data['act'];\r\n\r\n    queryParams = {\r\n      params: new HttpParams().set('admissionNumber', data['admissionNumber'])\r\n      .set('firstName', data['firstName'])\r\n      .set('lastName', data['lastName'])\r\n      .set('patientExternalId', data['patientExternalId'])\r\n      .set('cellPhone', data['cellPhone'])\r\n      .set('cnamNumber', data['cnamNumber'])\r\n      .set('idCardNumber', data['idCardNumber'])\r\n      .set('practician', data['practician'])\r\n      .set('service', data['service'])\r\n      .set('act', data['act'])\r\n      .set('fromDate', data['fromDate'])\r\n      .set('toDate', data['toDate'])\r\n      .set('admissionStatus', data['admissionStatus'])\r\n      .set('size', data['size'])\r\n      .set('page', data['page'])\r\n      .set('sort', data['sort'] + ',' + data['order'])\r\n    };\r\n\r\n    return this.http.get<any[]>(environment.baseUrl2 + '/admission/p_list', queryParams);\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * get object by id\r\n   * @param id \r\n   */\r\n  findById(id: number): Observable<any> {\r\n    return this.http.get<any>(environment.baseUrl2 + '/admission/detail/' + id);\r\n  }\r\n\r\n\r\n  /**\r\n  * add a invoice\r\n  */\r\n  saveInvoice(data: object) {\r\n    return this.http.post(environment.baseUrl + '/admission/invoice/add', data);\r\n  }\r\n\r\n\r\n   /**\r\n   * get a list of object\r\n   */\r\n  findAdmissionQueue(data: object): Observable<any[]> {\r\n\r\n    let queryParams = {};\r\n    data['practician']= (data['practician'] == null) ? '' : data['practician'];\r\n    data['service']= (data['service'] == null) ? '' : data['service'];\r\n    data['act']= (data['act'] == null) ? '' : data['act'];\r\n    data['waitingRoom']= (data['waitingRoom'] == null) ? '' : data['waitingRoom'];\r\n\r\n    queryParams = {\r\n      params: new HttpParams().set('admissionNumber', data['admissionNumber'])\r\n      .set('firstName', data['firstName'])\r\n      .set('lastName', data['lastName'])\r\n      .set('patientExternalId', data['patientExternalId'])\r\n      .set('cellPhone', data['cellPhone'])\r\n      .set('cnamNumber', data['cnamNumber'])\r\n      .set('idCardNumber', data['idCardNumber'])\r\n      .set('practician', data['practician'])\r\n      .set('service', data['service'])\r\n      .set('act', data['act'])\r\n      .set('fromDate', data['fromDate'])\r\n      .set('toDate', data['toDate'])\r\n      .set('waitingRoom', data['waitingRoom'])\r\n      .set('size', data['size'])\r\n      .set('page', data['page'])\r\n      .set('sort', data['sort'] + ',' + data['order'])\r\n    };\r\n\r\n    return this.http.get<any[]>(environment.baseUrl2 + '/admission/queue/p_list', queryParams);\r\n\r\n  }\r\n\r\n}","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport * as DecoupedEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport { TherapeuticClassService } from 'src/app/_services/therapeutic-class.service';\nimport { PharmacologicalFormService } from 'src/app/_services/pharmacological-form.service';\nimport { DciService } from 'src/app/_services/dci.service';\nimport { Form, FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { PatientPrescriptionService } from 'src/app/_services/patient-prescription.service';\nimport { TypePrescriptionService } from 'src/app/_services/type-prescription.service';\nimport { PrescribingMedicationComponent } from 'src/app/_shared/prescribing-medication/prescribing-medication.component';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n\n@Component({\n  selector: 'app-prescription-follow-up',\n  templateUrl: './prescription-follow-up.component.html',\n  styleUrls: ['./prescription-follow-up.component.css']\n})\nexport class PrescriptionFollowUpComponent implements OnInit {\n\n  @ViewChild(PrescribingMedicationComponent) pmComponent;\n\n  form: FormGroup;\n\n  prescriptionTypeForm: FormGroup;\n\n  /**\n  * init first page\n  */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  /**\n    * displays if success\n    */\n  message: string;\n\n  /**\n   * displays if error\n   * \n   */\n  error: string;\n\n  /**\n   * pdf src for ngx-extended-pdf-viewer\n   */\n  docSrc: any;\n\n  public prescribedDrugsArray = [];\n\n  @Input()\n  patientId: number;\n\n  @Input()\n  admissionId: number;\n\n  /**\n   * therapeutic classes options\n   */\n  therapeuticClasses: object;\n\n  pharmaForms: object;\n\n  /**\n   * DCI options\n   */\n  dcis: object;\n\n  patientPrescriptions: Object;\n\n  prescription: Object;\n\n  /**\n   * define drugs options\n   */\n  drugs = [];\n\n  prescriptionTypes: Object;\n\n  prescriptionCustomText = false;\n\n  selectedDrugs = [];\n\n  drugFormGroup = new FormArray([]);\n\n  prescriptionId = 0;\n\n  patient: object;\n\n  constructor(\n    private theraClassService: TherapeuticClassService,\n    private pharmaFormService: PharmacologicalFormService,\n    private dciService: DciService,\n    private patientPrescriptionService: PatientPrescriptionService,\n    private prescriptionTypeService: TypePrescriptionService,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.theraClassService.getIdAndName().subscribe(res => { this.therapeuticClasses = res; });\n    this.pharmaFormService.getIdAndName().subscribe(res => { this.pharmaForms = res; });\n    this.dciService.getIdAndName().subscribe(res => { this.dcis = res; });\n    this.prescriptionTypeService.getIdAndName().subscribe(res => { this.prescriptionTypes = res; });\n    this.getPrescriptions();\n  }\n\n  initForm() {\n    this.form = new FormGroup({\n      prescriptionType: new FormControl(null)\n    })\n  }\n\n  /**\n   * assign the editor to a public property to make it accessible from the template\n   */\n  public Editor = DecoupedEditor;\n\n  /**\n   * share a model in with the editor\n   */\n  public model = {\n    editorData: ''\n  };\n\n\n  /**\n   * add the toolbar to the DOM\n   */\n  public onReady(editor) {\n    editor.ui.getEditableElement().parentElement.insertBefore(\n      editor.ui.view.toolbar.element,\n      editor.ui.getEditableElement()\n    );\n  }\n\n\n  /**\n   * get all patient check ups by page\n   */\n  getPrescriptions() {\n    let data = {\n      patientId: this.patientId,\n      page: this.page,\n    }\n\n    this.patientPrescriptionService.findAllByPatientAndPage(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.patientPrescriptions = res['content'];\n          this.page = res['pageNumber'] + 1;\n\n        };\n      },\n      error => {\n        this.patientPrescriptions = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n\n  }\n\n  /**\n   * \n   */\n  save() {\n    this.message = null;\n    this.error = null;\n\n    let data = {\n      \"admission\": this.admissionId,\n      \"drugs\": JSON.stringify(this.drugFormGroup.value),\n      \"drugServed\":null,\n      \"id\": this.prescriptionId\n    }\n\n    if (this.prescriptionId == 0) {\n      this.patientPrescriptionService.save(data).subscribe(res => {\n        if (res) {\n          this.message = \"Ordonance creé avec succès!\";\n          this.prescription = res;\n          this.prescriptionId = res['id'];\n        }\n      })\n\n    } else {\n      this.error = 'Impossible de mofier une ordonnance qui a deja été crée, veillez creer une autre.';\n    }\n  }\n\n  setPrescriptionContent() {\n    let pTypeId = this.form.get(\"prescriptionType\").value;\n\n    this.prescriptionTypeService.findById(pTypeId).subscribe(res => {\n\n      this.drugs = res.drugs;\n\n      this.selectedDrugs = this.drugs.map(({ drug }) => drug);\n      this.drugFormGroup = new FormArray([]);\n      this.drugs.forEach(item => {\n        const group = new FormGroup({\n          id: new FormControl(item.id),\n          dosage: new FormControl(item.dosage),\n          drug: new FormControl(item.drug),\n          qty: new FormControl(item.qty),\n          duration: new FormControl(item.duration)\n        });\n\n        this.drugFormGroup.push(group);\n      })\n    })\n  }\n\n  /**\n  * generate precription document\n  */\n  generatePrescription(prescription) {\n    const patientTag = document.getElementsByClassName('barcode')[0].firstChild;\n    this.patient = prescription['patient'];\n    let doc = this.patientPrescriptionService.generatePdf(prescription, patientTag);\n    this.docSrc = doc.output('datauristring');\n  }\n\n  /**\n  * set the current page\n  * @param pageNum \n  */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = this.page - 1;\n    this.getPrescriptions();\n  }\n\n\n  /**\n   * \n   */\n  atModalshow() {\n    this.message = null;\n    this.error = null;\n  }\n\n  /**\n   * \n   */\n  atModalsClose() {\n    this.selectedDrugs = [];\n    this.prescriptionId = 0;\n    this.form.reset();\n    this.drugFormGroup = new FormArray([]);\n  }\n}\n","<ul class=\"nav nav-pills\" id=\"pills-tab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link active\" id=\"pills-prescription-list-tab\" data-toggle=\"pill\" href=\"#pills-prescription-list\"\n      role=\"tab\" aria-controls=\"pills-prescription-list\" aria-selected=\"true\">Liste des Ordonance</a>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link\" id=\"pills-new-prescription-tab\" data-toggle=\"pill\" href=\"#pills-new-prescription\" role=\"tab\"\n      aria-controls=\"pills-new-prescription\" aria-selected=\"false\">Ordonancier</a>\n  </li>\n</ul>\n<div class=\"tab-content mt-3\" id=\"pills-tabContent\">\n  <div class=\"tab-pane fade show active\" id=\"pills-prescription-list\" role=\"tabpanel\"\n    aria-labelledby=\"pills-prescription-list-tab\">\n    <div class=\"table-responsive\">\n      <table class=\"table table-sm table-hover table-striped\">\n        <thead>\n          <th>Date</th>\n          <th>ordonnance</th>\n          <th>Medecin</th>\n          <th>Etat</th>\n          <th>Centre Médical</th>\n          <th>PDF</th>\n        </thead>\n        <tr *ngFor=\"let prescription of patientPrescriptions \">\n          <td>{{ prescription.date | date: 'dd/MM/yyyy hh:mm:ss'}} </td>\n          <td><b>Ordonance médical</b></td>\n          <td>{{prescription.practician.firstName +\" \"+ prescription.practician.lastName}}</td>\n          <td class=\"text-capitalize text-center text-nowrap\">\n            <i class=\"fas fa-circle\" [ngClass]=\"{'text-green': prescription.state=='Y', 'text-red': prescription.state=='N'}\"\n              ngbTooltip=\"{{prescription.state=='Y'? 'Servi' : 'Non servi'}}\"></i>\n          </td>\n          <td>{{prescription.facility.name}}</td>\n          <td><button class=\"btn btm-sm btn-light\" style=\"width: 100%;\" (click)=\"generatePrescription(prescription)\"\n              data-toggle=\"modal\" data-target=\"#prescriptionPdfModal\"><i class=\"fa fa-file-pdf text-danger\"\n                aria-hidden=\"true\"></i></button></td>\n        </tr>\n      </table>\n      <div class=\"text-center mb-5 mt-4\">\n        <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n          <span class=\"sr-only\">Loading...</span>\n        </div>\n        <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n        <div *ngIf=\"hasNoData\" class=\"mt-3\">\n          <span class=\"text-muted ml-3 \">{{EmptyMessage}}</span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-7 offset-md-5\">\n          <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n            (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"tab-pane fade \" id=\"pills-new-prescription\" role=\"tabpanel\" aria-labelledby=\"pills-new-prescription-tab\">\n\n    <form [formGroup]=\"form\">\n      <div class=\"row\">\n        <div class=\"col-md-5\">\n          <div class=\"form-group\">\n            <label for=\"name\">Type d'ordonnance</label>\n            <span class=\"text-danger\">*</span>\n            <div class=\"input-group input-group-sm\">\n              <ng-select placeholder=\"Type d'ordonnance\" (change)=\"setPrescriptionContent()\"\n                formControlName=\"prescriptionType\" style=\"width: 100%;\">\n                <ng-option *ngFor=\"let type of prescriptionTypes\" [value]=\"type.id\">{{type.name}}\n                </ng-option>\n              </ng-select>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-4\">\n          <button type=\"button\" class=\"btn btn-success mt-4\" data-toggle=\"modal\" data-target=\"#prescription\"\n            (click)=\"atModalshow()\">\n            Nouvel ordonnance\n          </button>\n        </div>\n      </div>\n    </form>\n\n  </div>\n</div>\n\n<app-patient-tag [patient]=\"patient\"></app-patient-tag>\n\n<!-- prescription type modal -->\n<div class=\"modal fade\" id=\"prescription\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\n  aria-labelledby=\"prescriptionModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"atModalsClose()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"message\">\n          {{message}}\n        </div>\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"error\">\n          {{error}}\n        </div>\n        <app-prescribing-medication [drugFormGroup]=\"drugFormGroup\" [selectedDrugs]=\"selectedDrugs\">\n        </app-prescribing-medication>\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"atModalsClose()\">Annuler</button>\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"save()\">valider</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!--pdf  Modal -->\n<div class=\"modal fade\" id=\"prescriptionPdfModal\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\n  aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!-- ngx-extended-pdf-viewer -->\n        <ngx-extended-pdf-viewer *ngIf='docSrc' [src]=\"docSrc\" useBrowserLocale=\"true\" height=\"80vh\">\n        </ngx-extended-pdf-viewer>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">fermer</button>\n      </div>\n    </div>\n  </div>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PatientHistory } from './../_models/patientHistory.model'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientHistoryService {\n  \n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(history : PatientHistory): Observable<PatientHistory> {\n    return this.http.post<PatientHistory>(environment.baseUrl2 + '/antecedant/add', history);\n  }\n\n  /**\n   * get object by id\n   * @param patient_id \n   */\n  findByPatientId(patient_id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/antecedant/detail/' + patient_id);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MedicalFolderRoutingModule } from './medical-folder-routing.module';\nimport { FolderComponent } from './folder/folder.component';\nimport { AntecedentComponent } from './antecedent/antecedent.component';\nimport { NewConsultationComponent } from './new-consultation/new-consultation.component';\nimport { ConsultationFollowUpComponent } from './consultation-follow-up/consultation-follow-up.component';\nimport { ExamFollowUpComponent } from './exam-follow-up/exam-follow-up.component';\nimport { PrescriptionFollowUpComponent } from './prescription-follow-up/prescription-follow-up.component';\nimport { CertificateFollowUpComponent } from './certificate-follow-up/certificate-follow-up.component';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgbPaginationModule, NgbDatepickerModule, NgbTooltipModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { ConstantFollowUpComponent } from './constant-follow-up/constant-follow-up.component';\nimport { PatientConstantModule } from '../patient-constant/patient-constant.module';\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\nimport { CroFollowUpComponent } from './cro-follow-up/cro-follow-up.component';\nimport { CheckUpFollowUpComponent } from './check-up-follow-up/check-up-follow-up.component';\nimport { TypePrescriptionModule } from '../type-prescription/type-prescription.module';\nimport { PatientModule } from '../patient/patient.module';\nimport { MailFollowUpComponent } from './mail-follow-up/mail-follow-up.component';\n\n\n@NgModule({\n  declarations: [\n    FolderComponent, \n    AntecedentComponent, \n    NewConsultationComponent, \n    ConsultationFollowUpComponent, \n    ExamFollowUpComponent, \n    PrescriptionFollowUpComponent, \n    CertificateFollowUpComponent, \n    ConstantFollowUpComponent, \n    CroFollowUpComponent, \n    CheckUpFollowUpComponent,\n    MailFollowUpComponent,\n  ],\n  imports: [\n    CommonModule,\n    MedicalFolderRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbPaginationModule,\n    NgbDatepickerModule,\n    NgSelectModule,\n    CKEditorModule,\n    PatientConstantModule,\n    NgxExtendedPdfViewerModule,\n    TypePrescriptionModule,\n    NgbTooltipModule,\n    PatientModule\n  ]\n})\nexport class MedicalFolderModule { }\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Consultation } from 'src/app/_models/consultation.model';\nimport { ConsultationService } from 'src/app/_services/consultation.service';\nimport { PathologyService } from 'src/app/_services/pathology.service';\nimport { SymptomService } from 'src/app/_services/symptom.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { dateInputFormat } from 'src/app/_utility/date/date-input-format';\nimport { dateOutputFormat } from 'src/app/_utility/date/date-output-format';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\n\n@Component({\n  selector: 'app-new-consultation',\n  templateUrl: './new-consultation.component.html',\n  styleUrls: ['./new-consultation.component.css']\n})\nexport class NewConsultationComponent implements OnInit {\n\n  /**\n   * the form\n   */\n  form: FormGroup;\n\n  @Input()\n  patientId: number;\n \n  @Input()\n  admissionId: number;\n\n  @Input()\n  startDate: Date;\n\n  /**\n   * consultation object\n   */\n  consultation: Consultation;\n\n  pathologies : Object;\n  symptoms : Object;\n\n  /**\n   * define consultation type option\n   */\n  consultationTypes = [\n    { id: 'p', value: 'Prémière consultation' },\n    { id: 's', value: 'Consultation de surveillance' },\n  ];\n\n\n  /** \n   * invalid from controls\n   */\n  invalidFormControls: any;\n\n  constructor(\n    private alertService: AlertService,\n    private consultationService: ConsultationService,\n    private pathologyService : PathologyService,\n    private symptomService : SymptomService\n  ) { }\n\n  ngOnInit(): void {    \n    this.initForm(); \n    this.pathologyService.getIdAndName().subscribe( res => { this.pathologies = res;}); \n    this.symptomService.getIdAndName().subscribe (res => { this.symptoms = res; console.log(res);\n    });\n  }\n\n  /**\n   * init form\n   */\n  initForm() {\n    this.form = new FormGroup({\n      date: new FormControl(dateOutputFormat(new Date())), \n      conclusionExamResult: new FormControl(''),\n      admission: new FormControl(this.admissionId),\n      conclusion: new FormControl('', Validators.required),\n      examinationReasons: new FormControl('', Validators.required),\n      examinationType: new FormControl('', Validators.required),\n      history: new FormControl('', Validators.required),\n      id: new FormControl(0),\n      pathologies: new FormControl(null ),\n      symptoms: new FormControl(null ),\n      startDate: new FormControl(this.startDate)\n     \n    })\n  }\n\n  /**\n   * save \n   */\n  save() {\n\n    //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    this.alertService.clear();\n    let data = this.form.value; \n    \n    if (this.form.valid) {\n      if (!this.consultation) {\n        this.consultationService.save(data).subscribe(res => {\n          \n            this.alertService.success('Consultation ajoutée au dossier du patient avec succes ! ');\n            this.consultation = res;\n            this.form.get(\"conclusion\").disable();\n            this.form.get(\"examinationReasons\").disable();\n            this.form.get(\"examinationType\").disable();\n            this.form.get(\"history\").disable();\n            this.form.get(\"symptoms\").disable();\n\n        });\n      } else {\n        this.consultationService.update(data).subscribe(res => {\n            this.alertService.success('Consultation mis a jour avec succes ! ');\n            this.consultation = res;\n        })\n      }\n\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n  \n}\n","<form [formGroup]='form' (submit)='save()'>\n    <div class=\"row\">\n        <div class=\"row col-md-9\">\n            <div class=\"form-group\">\n                \n                <div class=\"input-group input-group-sm\">\n                    <label for=\"date\">Date : &nbsp;</label>\n                    <input type=\"text\" formControlName=\"date\"\n                        class=\"form-control\" disabled>\n                </div>\n            </div>\n            <div class=\"row input-group-sm col-md-7\">\n                <div class=\"col-md-5 float-right\"><label for=\"examinationType\" >Type de consult. <span class=\"text-danger\">*</span> :</label></div>\n                <div class=\"col-md-7\">\n                <ng-select formControlName=\"examinationType\" >\n                    <ng-option *ngFor=\"let type of consultationTypes\" [value]=\"type.id\"> {{type.value}}\n                    </ng-option>\n                </ng-select>\n                <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.examinationType\">\n                    ce champ doit être renseigné\n                </span>\n            </div>\n            </div>\n            \n        </div>\n\n        <div class=\" row col-md-3\">\n            <div class=\"col-md-6\">\n                <button type=\"submit\" class=\"btn btn-success\">Valider</button>\n            </div>\n            <!-- <div class=\"col-md-6\">\n                <button type=\"button\" class=\"btn btn-danger\">Annuler</button>\n            </div> -->\n        </div>\n    </div>\n   <hr>\n\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <label for=\"reason\">\n                <h6 class=\"text-bold\">\n                    <u>Motif de la consultation</u>\n                    <span class=\"text-danger\">*</span>\n                </h6>\n            </label>\n            <div class=\"form-group\">\n                <textarea class=\"form-control\" formControlName=\"examinationReasons\" rows=\"4\"\n                    placeholder=\"Motif de la consultation\"></textarea>\n            </div>\n            <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.examinationReasons\">\n                ce champ doit être renseigné\n            </span>\n\n            <div class=\"row input-group-sm mb-4\">\n                <label for=\"symptoms\" >\n                    <h6 class=\"text-bold mb-2\"><u>Choix de symptômes</u></h6></label>\n                <ng-select formControlName=\"symptoms\" style=\"width: 100%\" [multiple]=\"true\">\n                    <ng-option *ngFor=\"let symptom of symptoms\" [value]=\"symptom.id\" > {{symptom.name}}\n                    </ng-option>\n                </ng-select>\n            </div>\n        </div>\n        <div class=\"col-md-6\">\n            <label for=\"history\">\n                <h6 class=\"text-bold\">\n                    <u>Histoire de la maladie</u>\n                    <span class=\"text-danger\">*</span>\n                </h6>\n            </label>\n            <div class=\"form-group\">\n                <textarea class=\"form-control\" formControlName=\"history\" rows=\"8\"\n                    placeholder=\"Histoire de la maladie\"></textarea>\n            </div>\n            <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.history\">\n                ce champ doit être renseigné\n            </span>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <label for=\"conclusion\">\n                <h6 class=\"text-bold\">\n                    <u>Conclusion de l'Interrogatoire</u>\n                    <span class=\"text-danger\">*</span>\n                </h6>\n            </label>\n            <div class=\"form-group\">\n                <textarea class=\"form-control mt-3\" formControlName=\"conclusion\" rows=\"8\"\n                    placeholder=\"Conclusion l'Interrogatoire\"></textarea>\n            </div>\n            <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.conclusion\">\n                ce champ doit être renseigné\n            </span>\n        </div>\n        <div class=\"col-md-6\">\n            <div class=\"row input-group-sm\">\n                <label for=\"pathologies\" class=\"mb-4\">\n                    <h6 class=\"text-bold mb-2\"><u>Choix de pathologies</u></h6></label>\n                <ng-select formControlName=\"pathologies\" style=\"width: 100%\" [multiple]=\"true\">\n                    <ng-option *ngFor=\"let pathology of pathologies\" [value]=\"pathology.id\" > {{pathology.name}}\n                    </ng-option>\n                </ng-select>\n            </div>\n\n             <label for=\"conclusion\" class=\"mt-2\">\n                <h6 class=\"text-bold\"><u>Interpretation des résultat d'Examens</u>\n            </h6>\n            </label>\n            <div class=\"form-group\">\n                <textarea class=\"form-control\" formControlName=\"conclusionExamResult\" rows=\"5\"\n                    placeholder=\"Interpretation des résultat d'Examens\"></textarea>\n            </div>\n        </div>\n    </div>\n\n</form>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport jsPDF from 'jspdf';\nimport { CheckUpService } from 'src/app/_services/check-up.service';\nimport { PatientCheckUpService } from 'src/app/_services/patient-check-up.service';\n\n@Component({\n  selector: 'app-check-up-follow-up',\n  templateUrl: './check-up-follow-up.component.html',\n  styleUrls: ['./check-up-follow-up.component.css']\n})\nexport class CheckUpFollowUpComponent implements OnInit {\n\n  checkUpForm: FormGroup;\n\n  @Input()\n  patientId: number;\n\n  @Input()\n  admissionId: number;\n\n  /**\n  * init first page\n  */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  /**\n   * selected items\n   */\n  selectectedItems = [];\n\n  /**\n  * displays if success\n  */\n  message: string;\n\n  /**\n   * displays if error\n   * \n   */\n  error: string;\n\n  /**\n   * define checkups options\n   */\n  checkUps: object;\n\n  /**\n   * check-Uup object\n   */\n  checkUp: object;\n\n  /**\n   * patient all check-ups\n   */\n  patientCheckUps: Object;\n\n\n  /**\n   * pdf src for ngx-extended-pdf-viewer\n   */\n  docSrc: any;\n\n  patient: object;\n\n  constructor(\n    private checkUpService: CheckUpService,\n    private patientCheckUpService: PatientCheckUpService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.initForm()\n    this.checkUpService.getIdAndName().subscribe(res => { this.checkUps = res; });\n    this.getCheckUps();\n  }\n\n  /**\n   * \n   */\n  initForm() {\n\n    this.checkUpForm = new FormGroup({\n      checkUp: new FormControl(null)\n    });\n  }\n\n  /**\n  * set the current page\n  * @param pageNum \n  */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = this.page - 1;\n    this.getCheckUps();\n  }\n\n  /**\n   * \n   * @param target \n   * @param item \n   */\n  checked(target, item) {\n    target.classList.toggle('bg-dark');\n\n    if (this.selectectedItems.includes(item)) {\n      let index = this.selectectedItems.indexOf(item);\n      this.selectectedItems.splice(index, 1);\n    } else {\n      this.selectectedItems.push(item);\n    }\n  }\n\n  /**\n   * \n   */\n  atModalshow() {\n    this.message = null;\n    this.error = null;\n  }\n\n  /**\n   * \n   */\n  onCheckUpChange() {\n    let checkUpId = this.checkUpForm.get(\"checkUp\").value;\n    this.checkUpService.findById(checkUpId).subscribe(res => {\n      this.checkUp = res;\n    })\n  }\n\n  /**\n   * get all patient check ups by page\n   */\n  getCheckUps() {\n    let data = {\n      patientId: this.patientId,\n      page: this.page,\n    }\n\n    this.patientCheckUpService.findAllByPage(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.patientCheckUps = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        this.patientCheckUps = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n\n  }\n\n  /**\n   * \n   */\n  saveCheckUpRequest() {\n    let data = {\n      \"admission\": this.admissionId,\n      \"docId\": this.checkUp['id'],\n      \"custom_text\": null,\n      \"id\": 0\n    }\n\n    this.patientCheckUpService.save(data).subscribe(res => {\n      if (res) {\n        this.message = \"bilan creé avec succès!\";\n        this.page = this.page - 1;\n        this.getCheckUps();\n      }\n    })\n  }\n\n  generateCheckUpPdf(checkUp) {\n \n    const patientTag = document.getElementsByClassName('barcode')[0].firstChild;\n  \n    this.patient = checkUp['patient'];\n    \n      let doc = this.checkUpService.generatePdf(checkUp, patientTag);\n      this.docSrc = doc.output('datauristring');\n  }\n\n  reset() {}\n}\n","<div class=\"float-right\">\n    <!-- Button trigger modal -->\n    <button type=\"button\" class=\"btn btn-success m-2\" data-toggle=\"modal\" data-target=\"#checkUp\"\n      (click)=\"atModalshow()\"> \n      Demande de bilan\n    </button>\n  </div>\n  <div class=\"table-responsive\">\n    <table class=\"table table-hover table-striped\">\n      <thead>\n        <th>Date</th>\n        <th>Bilan</th>\n        <th>Medecin</th>\n        <th>Centre Médical</th>\n        <th>PDF</th>\n      </thead>\n      <tr *ngFor=\"let pc of patientCheckUps\">\n        <td>{{pc.date | date: 'dd/MM/yyyy hh:mm:ss'}} </td>\n        <td>{{pc.checkUp.name}}</td>\n        <td>{{pc.practician.firstName +\" \" + pc.practician.lastName}}</td>\n        <td>{{pc.facility.name}}</td>\n        <td><button class=\"btn btm-sm btn-light\" style=\"width: 100%;\" (click)=\"generateCheckUpPdf(pc)\" data-toggle=\"modal\" data-target=\"#checkUpPdf\"><i class=\"fa fa-file-pdf text-danger\" aria-hidden=\"true\" size:3x></i></button>\n        </td>\n      </tr>\n    </table>\n    <div class=\"text-center mb-5 mt-4\">\n      <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n      <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n      <div *ngIf=\"hasNoData\" class=\"mt-3\">\n        <span class=\"text-muted ml-3 \">{{EmptyMessage}}</span>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-7 offset-md-5\">\n        <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n          (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n      </div>\n    </div>\n  </div>\n  <app-patient-tag [patient]=\"patient\"></app-patient-tag>\n<div class=\"modal fade\" id=\"checkUpPdf\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\n  aria-labelledby=\"examLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\">\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n      <div class=\"modal-body\">\n        <!-- ngx-extended-pdf-viewer -->\n        <ngx-extended-pdf-viewer *ngIf='docSrc' [src]=\"docSrc\" useBrowserLocale=\"true\" height=\"80vh\">\n        </ngx-extended-pdf-viewer>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">fermer</button>\n      </div>\n    </div>\n  </div>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AnalysisDomain } from '../_models/analysisDomain.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalysisDomainService {\n\n  constructor( private http: HttpClient) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(analysisDomain: AnalysisDomain): Observable<AnalysisDomain> {\n    return this.http.post<AnalysisDomain>(environment.baseUrl2 + '/analysis-domain/add', analysisDomain);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<AnalysisDomain> {\n    return this.http.put<AnalysisDomain>(environment.baseUrl2 + '/analysis-domain/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<AnalysisDomain[]> {\n    return this.http.get<AnalysisDomain[]>(environment.baseUrl2 + '/analysis-domain/list');\n  }\n\n    /**\n   * get a paginated list of object\n   */\n  findAllByPage(data): Observable<AnalysisDomain[]> {\n      let queryParams = {};\n       data['active']= (data['active'] == null) ? '' : data['active'];\n\n       queryParams = { params: new HttpParams().set('page', data['page'])\n                                              .set('size', data['entries'])\n                                              .set('name', data['name'])\n                                              .set('active', data['active'])\n                                              .set('sort', data['sort']+','+data['order'])\n    };\n      return this.http.get<AnalysisDomain[]>(environment.baseUrl2 + '/analysis-domain/p_list', queryParams);\n    }\n    \n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<AnalysisDomain[]> {\n  return this.http.get<AnalysisDomain[]>(environment.baseUrl2 + '/analysis-domain/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id) : Observable<AnalysisDomain> {\n  return this.http.get<AnalysisDomain>(environment.baseUrl2 + '/analysis-domain/enable/' + id);\n \n  }\n\n  /**\n   * disable a object\n   */\n  disable(id) : Observable<AnalysisDomain> {\n    return this.http.get<AnalysisDomain>(environment.baseUrl2 + '/analysis-domain/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<AnalysisDomain> {\n    return this.http.get<AnalysisDomain>(environment.baseUrl2 + '/analysis-domain/detail/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n      return this.http.get<any>(environment.baseUrl2 + '/analysis-domain/active_name');\n    }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Consultation } from '../_models/consultation.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsultationService {\n\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(consultaion: Consultation): Observable<Consultation> {\n    return this.http.post<Consultation>(environment.baseUrl2 + '/examination/add', consultaion);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(consultation: Consultation): Observable<Consultation> {\n    return this.http.put<Consultation>(environment.baseUrl2 + '/examination/update/' + consultation.id, consultation);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAllPatientConsultations(data): Observable<any[]> {\n    let queryParams = {};\n  \n    queryParams = {\n      params: new HttpParams().set('page', data['page'])\n        .set('patient', data['patient'])\n        .set('size', data['size'])\n        .set('sort', data['sort'] + ',' + data['order'])\n    };\n    return this.http.get<any[]>(environment.baseUrl2 + '/examination/p_list/by_patient/', queryParams);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<Consultation> {\n    return this.http.get<Consultation>(environment.baseUrl2 + '/examination/detail/' + id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { patientDocument } from '../_models/patientDodument.model';\nimport jsPDF from 'jspdf';\nimport { dateOutputFormat } from '../_utility/date/date-output-format';\nimport { slugify } from '../_utility/string/slugify';\nimport { replaceDocVarialbles } from '../_utility/string/replaceDocParms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientCroService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(document: patientDocument): Observable<patientDocument> {\n    return this.http.post<patientDocument>(environment.baseUrl2 + '/patient-cro/add', document);\n  }\n\n  /**\n * get a paginated list of object\n */\n  findAllByPage(data): Observable<patientDocument[]> {\n    let queryParams = {};\n\n    queryParams = {\n      params: new HttpParams().set('patientId', data['patientId'])\n        .set('page', data['page'])\n    };\n\n    return this.http.get<patientDocument[]>(environment.baseUrl2 + '/patient-cro/p_list', queryParams);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<patientDocument> {\n    return this.http.get<patientDocument>(environment.baseUrl2 + '/patient-cro/detail/' + id);\n  }\n\n   /**\n   * generate cro document\n   */\n    generatePdf(cro: object, patientTag: any) {\n      var doc = new jsPDF('p', 'pt', 'a4');\n      var patient = cro['patient'];\n      var practician = cro['practician'];\n      var croType = cro['croType'];\n  \n      if (cro) {\n  \n        // doc variable\n        var date = dateOutputFormat(cro['date']);;\n        var patientNumber = patient['patientExternalId'];\n        var practicianFullName = practician['firstName'] + ' ' + practician['lastName'];\n        var footer = environment.documentFooter;\n  \n        //doc head\n        doc.addImage(environment.logo, \"JPEG\", 25, 15, 60, 60);\n        doc.setFontSize(10);\n        doc.setFont(\"bold\");\n        doc.addImage(patientTag['src'], 'JPEG', 380, 30, 170, 50);\n  \n        //information\n        doc.setFontSize(10);\n        doc.text(patientNumber, 430, 80);\n        doc.text(\"Date:\" + date, 25, 120)\n  \n        doc.setFontSize(12);\n        doc.setFont('times', 'bold')\n        doc.text(\"Compte rendu Opératoire: \", 200, 190);\n        doc.setLineWidth(1)\n        doc.line(340, 192, 200, 192)\n        doc.setFontSize(10);\n  \n        if (cro['custom_text']) {\n          var content = doc.splitTextToSize(cro['custom_text'], 540);\n          doc.text(content, 25, 210);\n        } else {\n          for (let index = 0; index < Object.keys(patient).length; index++) {\n            const element = '@@@-' + slugify(Object.keys(patient)[index]) + '-';\n            croType['content'] = replaceDocVarialbles(croType['content'], patient, practician);\n          }\n  \n          // doc.html(croType['content'], {\n          //     callback: function (doc) {\n          //       doc.output('dataurlnewwindow');\n          //     },\n          //     x: 25,\n          //     y: 210\n          //   });\n  \n          var content = doc.splitTextToSize(croType['content'], 540);\n          doc.text(content, 25, 210);\n        }\n  \n        doc.setFont('times', 'bold')\n        doc.text(\"Médécin: \", 350, 700);\n        doc.text(practicianFullName, 350, 720);\n        doc.setTextColor(150)\n        doc.setFontSize(8);\n        doc.setLineWidth(0.25)\n        doc.line(552, 770, 25, 770)\n        var splitFooter = doc.splitTextToSize(footer, 540);\n        doc.text(splitFooter, 25, 780);\n  \n      }\n  \n      return doc;\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport * as DecoupedEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport { PatientCroService } from 'src/app/_services/patient-cro.service';\nimport { PatientService } from 'src/app/_services/patient.service';\nimport { TypeCroService } from 'src/app/_services/type-cro.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { dateOutputFormat } from 'src/app/_utility/date/date-output-format';\nimport { replaceDocVarialbles } from 'src/app/_utility/string/replaceDocParms';\nimport { slugify } from 'src/app/_utility/string/slugify';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AppCookieService } from 'src/app/_services/app-cookie.service';\n\n@Component({\n  selector: 'app-cro-follow-up',\n  templateUrl: './cro-follow-up.component.html',\n  styleUrls: ['./cro-follow-up.component.css']\n})\nexport class CroFollowUpComponent implements OnInit {\n/**\n   * form\n   */\n  form: FormGroup;\n\n  @Input()\n  patientId: number;\n\n  @Input()\n  admissionId: number;\n\n  /**\n  * init first page\n  */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  /**\n   * \n   */\n  today = dateOutputFormat(new Date());\n\n  patient: Object;\n\n  practician: Object;\n\n  /**\n    * date picker model\n    */\n  datePicker: NgbDateStruct;\n\n  /**\n  * assign the editor to a public property to make it accessible from the template\n  */\n  public Editor = DecoupedEditor;\n\n  /**\n  * data to preview\n  */\n  previewData: SafeHtml;\n\n  /**\n   * share a model in with the editor\n   */\n  public model = {\n    editorData: ''\n  };\n\n  croTypes: Object;\n\n  croType: Object;\n\n  patientCros: Object;\n\n  croCustomText = false;\n\n  patientCroId = 0;\n\n  /**\n   * pdf src for ngx-extended-pdf-viewer\n   */\n  docSrc: any;\n\n  constructor(\n    private typeCroService: TypeCroService,\n    private patientCroService: PatientCroService,\n    private patientService: PatientService,\n    private sanitizer: DomSanitizer,\n    private alertService: AlertService,\n    private userService: UserService,\n    private cookieService: AppCookieService\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.typeCroService.getIdAndName().subscribe(res => { this.croTypes = res; });\n    this.userService.findByUsername(this.cookieService.get('username')).subscribe(res => { this.practician = res; });\n\n    this.patientService.findById(this.patientId).subscribe(res => {\n      this.patient = res;\n      this.getCros();\n    });\n\n  }\n\n  /**\n   * init form\n   */\n  initForm() {\n    this.form = new FormGroup({\n      date: new FormControl(dateOutputFormat(new Date())),\n      cro: new FormControl(null),\n    })\n  }\n\n  /**\n   * get a collection of the patient certificated\n   */\n  getCros() {\n\n    let data = {\n      patientId: this.patientId,\n      page: this.page,\n    }\n\n    this.patientCroService.findAllByPage(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.patientCros = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        this.patientCros = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n  }\n\n  /**\n   * add the toolbar to the DOM\n   * \n   */\n  public onReady(editor) {\n    editor.ui.getEditableElement().parentElement.insertBefore(\n      editor.ui.view.toolbar.element,\n      editor.ui.getEditableElement()\n    );\n  }\n\n\n  /**\n  * set the current page\n  * @param pageNum \n  */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = this.page - 1;\n    this.getCros();\n  }\n\n  /**\n   * set the content for the chosen cro type\n   * @param val \n   */\n  setCroText() {\n    let croTypeId = this.form.get(\"cro\").value;\n\n    this.typeCroService.findById(croTypeId).subscribe(res => {\n\n    this.model.editorData = res['content'];\n\n      for (let index = 0; index < Object.keys(this.patient).length; index++) {\n        const element = '@@@-' + slugify(Object.keys(this.patient)[index]) + '-';\n        this.model.editorData = replaceDocVarialbles(this.model.editorData, this.patient, this.practician)\n      }\n      this.previewData = this.sanitizer.bypassSecurityTrustHtml(this.model.editorData);\n    })\n\n  }\n\n  /**\n   *  tooble the hiden state of the editor\n   */\n  toggleEditorHidden() {\n    this.croCustomText = this.croCustomText ? false : true;\n  }\n\n  /**\n   * save data into the database\n   */\n  save() {\n\n    if (this.patientCroId == 0) {\n      let customText = !this.croCustomText ? null : this.model.editorData;\n      let data = {\n        \"admission\": this.admissionId,\n        \"docId\": this.form.get('cro').value,\n        \"custom_text\": customText,\n        \"id\": this.patientCroId\n      }\n\n      this.patientCroService.save(data).subscribe(res => {\n        if (res) {\n          this.alertService.success('CRO creé avec succès !');\n          this.page = this.page - 1;\n          this.patientCroId = res.id;\n          this.getCros();\n        }\n      });\n    } else {\n      this.alertService.error('Impossible de mofier un CRO qui a deja été crée, veillez creer un autre.')\n    }\n  }\n\n  /**\n   * generate pdf in the ngx-pdf-extended-viewer\n   */\n  generateCro(cro) {\n\n    const patientTag = document.getElementsByClassName('barcode')[0].firstChild;\n    this.patient = cro['patient'];\n    let doc = this.patientCroService.generatePdf(cro, patientTag);\n    this.docSrc = doc.output('datauristring');\n    // doc.html(data, {\n    //   callback: function (doc) {\n    //     doc.output('dataurlnewwindow');\n    //   },\n    //   x: 10,\n    //   y: 10\n    // });\n  }\n\n  /**\n   *  reset the datas and the form\n   */\n  reset() {\n   this.previewData = null;\n   this.patientCroId = 0;\n   this.form.get('cro').reset();\n  }\n\n}\n","<ul class=\"nav nav-pills\" id=\"pills-tab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link active\" id=\"pills-cro-list-tab\" data-toggle=\"pill\" href=\"#pills-cro-list\" role=\"tab\"\n      aria-controls=\"pills-cro-list\" aria-selected=\"true\">Liste des CRO</a>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <a class=\"nav-link\" id=\"pills-new-cro-tab\" data-toggle=\"pill\" href=\"#pills-new-cro\" role=\"tab\"\n      aria-controls=\"pills-new-cro\" aria-selected=\"false\">Nouveau CRO</a>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"pills-tabContent\">\n  <div class=\"tab-pane fade show active\" id=\"pills-cro-list\" role=\"tabpanel\" aria-labelledby=\"pills-cro-list-tab\">\n    <div class=\"table-responsive mt-3\">\n      <table class=\"table table-sm table-hover table-striped\">\n        <thead>\n          <th>Date</th>\n          <th>CRO</th>\n          <th>Medecin</th>\n          <th>Centre Médical</th>\n          <th>PDF</th>\n        </thead>\n        <tr *ngFor=\"let cro of patientCros\">\n          <td>{{cro.date | date: 'dd/MM/yyyy hh:mm:ss'}}</td>\n          <td><button class=\"btn btn-link text-dark\"><b>{{cro.croType.name}}</b></button>\n          </td>\n          <td>{{cro.practician.firstName +\" \" + cro.practician.lastName}}</td>\n          <td>{{cro.facility.name}}</td>\n          <td><button class=\"btn btm-sm btn-light\" style=\"width: 100%;\" (click)=\"generateCro(cro)\" \n            data-toggle=\"modal\" data-target=\"#croPdfModal\"><i\n                class=\"fa fa-file-pdf text-danger\" aria-hidden=\"true\"></i></button>\n          </td>\n        </tr>\n      </table>\n      <div class=\"text-center mb-5 mt-4\">\n        <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n          <span class=\"sr-only\">Loading...</span>\n        </div>\n        <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n        <div *ngIf=\"hasNoData\" class=\"mt-3\">\n          <span class=\"text-muted ml-3 \">{{EmptyMessage}}</span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-7 offset-md-5\">\n          <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n            (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"tab-pane fade show \" id=\"pills-new-cro\" role=\"tabpanel\" aria-labelledby=\"pills-new-cro-tab\">\n    <form [formGroup]=\"form\">\n      <div class=\"mt-3\">\n        <div class=\"row\">\n          <div class=\"col-md-4 input-group input-group-sm\">\n            <input formControlName=\"date\" class=\"form-control\" placeholder=\"jj-mm-AAAA\" ngbDatepicker #d=\"ngbDatepicker\"\n              value=\"{{today}}\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\" (click)=\"d.toggle()\">\n                <i class=\"far fa-calendar-alt\"></i>\n              </span>\n            </div>\n          </div>\n          <div class=\"col-md-8\">\n            <ng-select placeholder=\"Type de CRO\" (change)=\"setCroText()\" formControlName=\"cro\">\n              <ng-option *ngFor=\"let cro of croTypes\" [value]=\"cro.id\">{{cro.name}}\n              </ng-option>\n            </ng-select>\n          </div>\n        </div>\n        <div class=\"mt-3\">\n          <div *ngIf=\"previewData\" [hidden]=\"croCustomText\" class=\"mt-3\">\n            <div class=\"card\">\n              <div [innerHTML]=\"previewData\" class=\"card-body\" style=\"height: 20rem;\"></div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success mx-2\" (click)=\"save()\">Valider</button>\n            <button class=\"btn btn-sm btn-secondary  mx-2\" (click)=\"toggleEditorHidden()\"><i\n                class=\"fas fa-pen-alt mr-1\"></i>Modifier</button>\n            <button type=\"button\" class=\"btn btn-sm btn-danger mx-3\" (click)=\"reset()\">fermer</button>\n          </div>\n          <div [hidden]=\"!croCustomText\">\n            <div class=\"card\">\n              <div class=\"card-body\" [hidden]=\"!croCustomText\">\n                <ckeditor [(ngModel)]=\"model.editorData\" [ngModelOptions]=\"{standalone: true}\" [editor]=\"Editor\"\n                  (ready)=\"onReady($event)\" class=\"bg-light\"></ckeditor>\n              </div>\n            </div>\n            <div>\n              <button type=\"button\" class=\"btn btn-danger m-2\" (click)=\"toggleEditorHidden()\">Annuler</button>\n              <button type=\"button\" class=\"btn btn-success m-2\" (click)=\"save()\">Valider</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n\n<app-patient-tag [patient]=\"patient\"></app-patient-tag> \n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"croPdfModal\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\n  aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!-- ngx-extended-pdf-viewer -->\n        <ngx-extended-pdf-viewer *ngIf='docSrc' [src]=\"docSrc\" useBrowserLocale=\"true\" height=\"80vh\">\n        </ngx-extended-pdf-viewer>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">fermer</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n    ","import { Component, Input, OnInit } from '@angular/core';\nimport { PatientConstantService } from 'src/app/_services/patient-constant.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-constant-follow-up',\n  templateUrl: './constant-follow-up.component.html',\n  styleUrls: ['./constant-follow-up.component.css']\n})\nexport class ConstantFollowUpComponent implements OnInit {\n\n  @Input() \n  patientId: number;\n\n  title = '';\n\n  patientConstant : object;\n\n  constructor(\n    private patientConstantService : PatientConstantService,\n    private alertService : AlertService) { }\n\n  ngOnInit(): void { }\n\n  save(data){\n\n    let patientConstants = data.patientConstants;\n   \n    this.patientConstantService.save(patientConstants).subscribe(\n      res => {\n             this.patientConstant = res ;\n             this.alertService.success('Constantes ajoutées avec succès')\n             \n     },error => {\n       this.alertService.error(error);\n     });\n\n  }\n\n}\n","<ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n    <li class=\"nav-item\" role=\"presentation\">\n        <a class=\"nav-link active\" id=\"pills-constant-list-tab\" data-toggle=\"pill\" href=\"#pills-constant-list\"\n            role=\"tab\" aria-controls=\"pills-constant-list\" aria-selected=\"true\">Suivie des constantes</a>\n    </li>\n    <li class=\"nav-item\" role=\"presentation\">\n        <a class=\"nav-link\" id=\"pills-new-constant-tab\" data-toggle=\"pill\" href=\"#pills-new-constant\" role=\"tab\"\n            aria-controls=\"pills-new-constant\" aria-selected=\"false\">Nouvelles constantes</a>\n    </li>\n\n</ul>\n<div class=\"tab-content\" id=\"pills-tabContent\">\n    <div class=\"tab-pane fade show active\" id=\"pills-constant-list\" role=\"tabpanel\"\n        aria-labelledby=\"pills-constant-list-tab\">\n        <app-patient-constant-list [title]=\"title\" [patientId]=\"patientId\"></app-patient-constant-list>\n    </div>\n    <div class=\"tab-pane fade\" id=\"pills-new-constant\" role=\"tabpanel\" aria-labelledby=\"pills-new-constant-tab\">\n        <app-patient-constant-form [title]=\"title\"  [patientId]=\"patientId\" (objectEmitter)=\"save($event)\"></app-patient-constant-form>\n    </div>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport jsPDF from 'jspdf';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { patientDocument } from '../_models/patientDodument.model';\nimport { dateOutputFormat } from '../_utility/date/date-output-format';\nimport { replaceDocVarialbles } from '../_utility/string/replaceDocParms';\nimport { slugify } from '../_utility/string/slugify';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientCertificateService {\n\n  /**\n  * data to preview\n  */\n  content: SafeHtml;\n\n  constructor(\n    private http: HttpClient,\n    private sanitizer: DomSanitizer,) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(document: patientDocument): Observable<patientDocument> {\n    return this.http.post<patientDocument>(environment.baseUrl2 + '/patient-certificat/add', document);\n  }\n\n  /**\n * get a paginated list of object\n */\n  findAllByPage(data): Observable<patientDocument[]> {\n    let queryParams = {};\n\n    queryParams = {\n      params: new HttpParams().set('custom_text', data['custom_text'])\n        .set('patientId', data['patientId'])\n        .set('page', data['page'])\n    };\n\n    return this.http.get<patientDocument[]>(environment.baseUrl2 + '/patient-certificat/p_list', queryParams);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<patientDocument> {\n    return this.http.get<patientDocument>(environment.baseUrl2 + '/patient-certificat/detail/' + id);\n  }\n\n  /**\n   * generate certificate document\n   */\n  generatePdf(certificate: object, patientTag: any) {\n    var doc = new jsPDF('p', 'pt', 'a4');\n    var patient = certificate['patient'];\n    var practician = certificate['practician'];\n    var certificateType = certificate['certificatType'];\n\n    if (certificate) {\n\n      // doc variable\n      var date = dateOutputFormat(certificate['date']);;\n      var patientNumber = patient['patientExternalId'];\n      var practicianFullName = practician['firstName'] + ' ' + practician['lastName'];\n      var footer = environment.documentFooter;\n\n      //doc head\n      doc.addImage(environment.logo, \"JPEG\", 25, 15, 60, 60);\n      doc.setFontSize(10);\n      doc.setFont(\"bold\");\n      doc.addImage(patientTag['src'], 'JPEG', 380, 30, 170, 50);\n\n      //information\n      doc.setFontSize(10);\n      doc.text(patientNumber, 430, 80);\n      doc.text(\"Date:\" + date, 25, 120)\n\n      doc.setFontSize(12);\n      doc.setFont('times', 'bold')\n      doc.text(\"Certificat médical: \", 200, 190);\n      doc.setLineWidth(1)\n      doc.line(285, 192, 200, 192)\n      doc.setFontSize(10);\n\n      if (certificate['custom_text']) {\n        var content = doc.splitTextToSize(certificate['custom_text'], 540);\n        doc.text(content, 25, 210);\n      } else {\n        for (let index = 0; index < Object.keys(patient).length; index++) {\n          const element = '@@@-' + slugify(Object.keys(patient)[index]) + '-';\n          certificateType['content'] = replaceDocVarialbles(certificateType['content'], patient, practician)\n        }\n\n        // doc.html(certificateType['content'], {\n        //     callback: function (doc) {\n        //       doc.output('dataurlnewwindow');\n        //     },\n        //     x: 25,\n        //     y: 210\n        //   });\n\n        var content = doc.splitTextToSize(certificateType['content'], 540);\n        doc.text(content, 25, 210);\n      }\n\n      doc.setFont('times', 'bold')\n      doc.text(\"Médécin: \", 350, 700);\n      doc.text(practicianFullName, 350, 720);\n      doc.setTextColor(150)\n      doc.setFontSize(8);\n      doc.setLineWidth(0.25)\n      doc.line(552, 770, 25, 770)\n      var splitFooter = doc.splitTextToSize(footer, 540);\n      doc.text(splitFooter, 25, 780);\n\n    }\n\n    return doc;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { AppCookieService } from 'src/app/_services/app-cookie.service';\nimport * as DecoupedEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport { PatientCourierService } from 'src/app/_services/patient-courier.service';\nimport { PatientService } from 'src/app/_services/patient.service';\nimport { TypeMailService } from 'src/app/_services/type-mail.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { dateOutputFormat } from 'src/app/_utility/date/date-output-format';\nimport { replaceDocVarialbles } from 'src/app/_utility/string/replaceDocParms';\nimport { slugify } from 'src/app/_utility/string/slugify';\n\n@Component({\n  selector: 'app-mail-follow-up',\n  templateUrl: './mail-follow-up.component.html',\n  styleUrls: ['./mail-follow-up.component.css']\n})\nexport class MailFollowUpComponent implements OnInit {\n\n  /**\n   * form\n   */\n   form: FormGroup;\n\n   @Input()\n   patientId: number;\n \n   @Input()\n   admissionId: number;\n \n   /**\n   * init first page\n   */\n   public page = 0;\n \n   /**\n    * number of item par page default 10\n    */\n   public perPage = 10;\n \n \n   /**\n    *  order direction\n    */\n   order = 'desc';\n \n   /**\n    * order column default id\n    */\n   sort = 'id';\n \n   /**\n    * total items\n    */\n   public totalItem: number;\n \n   /**\n    * number of page\n    */\n   public pages: number;\n \n   /**\n    * handle the spinner\n    */\n   public loading = true;\n \n   /**\n    * define if request result has datas or no\n    */\n   hasNoData: boolean;\n \n   /**\n    * Msg to display when request result is empty\n    */\n   EmptyMessage: String;\n \n   /**\n    * \n    */\n   today = dateOutputFormat(new Date());\n \n   patient: Object;\n \n   practician: Object;\n \n   /**\n     * date picker model\n     */\n   datePicker: NgbDateStruct;\n \n   /**\n   * assign the editor to a public property to make it accessible from the template\n   */\n   public Editor = DecoupedEditor;\n \n   /**\n   * data to preview\n   */\n   previewData: SafeHtml;\n \n   /**\n    * share a model in with the editor\n    */\n   public model = {\n     editorData: ''\n   };\n \n   mailTypes: Object;\n \n   mailType: Object;\n \n   patientMails: Object;\n \n   mailCustomText = false;\n \n   patientMailId = 0;\n \n   /**\n    * pdf src for ngx-extended-pdf-viewer\n    */\n   docSrc: any;\n \n   constructor(\n     private typeMailService: TypeMailService,\n     private patientMailService: PatientCourierService,\n     private patientService: PatientService,\n     private sanitizer: DomSanitizer,\n     private alertService: AlertService,\n     private userService: UserService,\n     private cookieService: AppCookieService\n   ) { }\n \n   ngOnInit(): void {\n     this.initForm();\n     this.typeMailService.getIdAndName().subscribe(res => { this.mailTypes = res; console.log(res); });\n     this.userService.findByUsername(this.cookieService.get('username')).subscribe(res => { this.practician = res;});\n \n     this.patientService.findById(this.patientId).subscribe(res => {\n       this.patient = res;\n       this.getMails();\n     });\n \n   }\n \n   /**\n    * init form\n    */\n   initForm() {\n     this.form = new FormGroup({\n       date: new FormControl(dateOutputFormat(new Date())),\n       mail: new FormControl(null),\n     })\n   }\n \n   /**\n    * get a collection of the patient certificated\n    */\n   getMails() {\n \n     let data = {\n       patientId: this.patientId,\n       page: this.page,\n     }\n \n     this.patientMailService.findAllByPage(data).subscribe(\n       res => {\n         if (res) {\n           this.loading = false;\n           this.hasNoData = false;\n           this.totalItem = res['totalElements'];\n           this.pages = res['totalPages'];\n           this.patientMails = res['content'];\n           this.page = res['pageNumber'] + 1;\n         };\n       },\n       error => {\n         this.patientMails = [];\n         this.loading = false;\n         this.hasNoData = true;\n         this.EmptyMessage = error;\n       })\n   }\n \n   /**\n    * add the toolbar to the DOM\n    * \n    */\n   public onReady(editor) {\n     editor.ui.getEditableElement().parentElement.insertBefore(\n       editor.ui.view.toolbar.element,\n       editor.ui.getEditableElement()\n     );\n   }\n \n \n   /**\n   * set the current page\n   * @param pageNum \n   */\n   public onPageChange(pageNum: number): void {\n     this.loading = true;\n     this.page = this.page - 1;\n     this.getMails();\n   }\n \n   /**\n    * set the content for the chosen cro type\n    * @param val \n    */\n   setMailText() {\n     let croTypeId = this.form.get(\"mail\").value;\n \n     this.typeMailService.findById(croTypeId).subscribe(res => {\n \n     this.model.editorData = res['content'];\n \n       for (let index = 0; index < Object.keys(this.patient).length; index++) {\n         const element = '@@@-' + slugify(Object.keys(this.patient)[index]) + '-';\n         this.model.editorData = replaceDocVarialbles(this.model.editorData, this.patient, this.practician)\n       }\n       this.previewData = this.sanitizer.bypassSecurityTrustHtml(this.model.editorData);\n     })\n \n   }\n \n   /**\n    *  tooble the hiden state of the editor\n    */\n   toggleEditorHidden() {\n     this.mailCustomText = this.mailCustomText ? false : true;\n   }\n \n   /**\n    * save data into the database\n    */\n   save() {\n \n     if (this.patientMailId == 0) {\n       let customText = !this.mailCustomText ? null : this.model.editorData;\n       let data = {\n         \"admission\": this.admissionId,\n         \"docId\": this.form.get('mail').value,\n         \"custom_text\": customText,\n         \"id\": this.patientMailId\n       }\n \n       this.patientMailService.save(data).subscribe(res => {\n         if (res) {\n           this.alertService.success('Courier creé avec succès !');\n           this.page = this.page - 1;\n           this.patientMailId = res.id;\n           this.getMails();\n         }\n       });\n     } else {\n       this.alertService.error('Impossible de mofier un  Courier qui a deja été crée, veillez creer un autre.')\n     }\n   }\n \n   /**\n    * generate pdf in the ngx-pdf-extended-viewer\n    */\n   generateMail(mail) {\n \n     const patientTag = document.getElementsByClassName('barcode')[0].firstChild;\n     this.patient = mail['patient'];\n     let doc = this.patientMailService.generatePdf(mail, patientTag);\n     this.docSrc = doc.output('datauristring');\n     // doc.html(data, {\n     //   callback: function (doc) {\n     //     doc.output('dataurlnewwindow');\n     //   },\n     //   x: 10,\n     //   y: 10\n     // });\n   }\n \n   /**\n    *  reset the datas and the form\n    */\n   reset() {\n    this.previewData = null;\n    this.patientMailId = 0;\n    this.form.get('mail').reset();\n   }\n \n\n}\n","<ul class=\"nav nav-pills\" id=\"pills-tab\" role=\"tablist\">\n    <li class=\"nav-item\" role=\"presentation\">\n      <a class=\"nav-link active\" id=\"pills-mail-list-tab\" data-toggle=\"pill\" href=\"#pills-mail-list\" role=\"tab\"\n        aria-controls=\"pills-mail-list\" aria-selected=\"true\">Liste des Couriers</a>\n    </li>\n    <li class=\"nav-item\" role=\"presentation\">\n      <a class=\"nav-link\" id=\"pills-new-mail-tab\" data-toggle=\"pill\" href=\"#pills-new-mail\" role=\"tab\"\n        aria-controls=\"pills-new-mail\" aria-selected=\"false\">Nouveau Courier</a>\n    </li>\n  </ul>\n  <div class=\"tab-content\" id=\"pills-tabContent\">\n    <div class=\"tab-pane fade show active\" id=\"pills-mail-list\" role=\"tabpanel\" aria-labelledby=\"pills-mail-list-tab\">\n      <div class=\"table-responsive mt-3\">\n        <table class=\"table table-sm table-hover table-striped\">\n          <thead>\n            <th>Date</th>\n            <th>Couriers</th>\n            <th>Medecin</th>\n            <th>Centre Médical</th>\n            <th>PDF</th>\n          </thead>\n          <tr *ngFor=\"let mail of patientMails\">\n            <td>{{mail.date | date: 'dd/MM/yyyy hh:mm:ss'}}</td>\n            <td><button class=\"btn btn-link text-dark\"><b>{{mail.courierType.name}}</b></button>\n            </td>\n            <td>{{mail.practician.firstName +\" \" + mail.practician.lastName}}</td>\n            <td>{{mail.facility.name}}</td>\n            <td><button class=\"btn btm-sm btn-light\" style=\"width: 100%;\" (click)=\"generateMail(mail)\" \n              data-toggle=\"modal\" data-target=\"#mailPdfModal\"><i\n                  class=\"fa fa-file-pdf text-danger\" aria-hidden=\"true\"></i></button>\n            </td>\n          </tr>\n        </table>\n        <div class=\"text-center mb-5 mt-4\">\n          <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n          <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n          <div *ngIf=\"hasNoData\" class=\"mt-3\">\n            <span class=\"text-muted ml-3 \">{{EmptyMessage}}</span>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-7 offset-md-5\">\n            <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n              (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"tab-pane fade show \" id=\"pills-new-mail\" role=\"tabpanel\" aria-labelledby=\"pills-new-mail-tab\">\n      <form [formGroup]=\"form\">\n        <div class=\"mt-3\">\n          <div class=\"row\">\n            <div class=\"col-md-4 input-group input-group-sm\">\n              <input formControlName=\"date\" class=\"form-control\" placeholder=\"jj-mm-AAAA\" ngbDatepicker #d=\"ngbDatepicker\"\n                value=\"{{today}}\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\" (click)=\"d.toggle()\">\n                  <i class=\"far fa-calendar-alt\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"col-md-8\">\n              <ng-select placeholder=\"Type de Couriers\" (change)=\"setMailText()\" formControlName=\"mail\">\n                <ng-option *ngFor=\"let mail of mailTypes\" [value]=\"mail.id\">{{mail.name}}\n                </ng-option>\n              </ng-select>\n            </div>\n          </div>\n          <div class=\"mt-3\">\n            <div *ngIf=\"previewData\" [hidden]=\"mailCustomText\" class=\"mt-3\">\n              <div class=\"card\">\n                <div [innerHTML]=\"previewData\" class=\"card-body\" style=\"height: 20rem;\"></div>\n              </div>\n              <button type=\"button\" class=\"btn btn-success mx-2\" (click)=\"save()\">Valider</button>\n              <button class=\"btn btn-sm btn-secondary  mx-2\" (click)=\"toggleEditorHidden()\"><i\n                  class=\"fas fa-pen-alt mr-1\"></i>Modifier</button>\n              <button type=\"button\" class=\"btn btn-sm btn-danger mx-3\" (click)=\"reset()\">fermer</button>\n            </div>\n            <div [hidden]=\"!mailCustomText\">\n              <div class=\"card\">\n                <div class=\"card-body\" [hidden]=\"!mailCustomText\">\n                  <ckeditor [(ngModel)]=\"model.editorData\" [ngModelOptions]=\"{standalone: true}\" [editor]=\"Editor\"\n                    (ready)=\"onReady($event)\" class=\"bg-light\"></ckeditor>\n                </div>\n              </div>\n              <div>\n                <button type=\"button\" class=\"btn btn-danger m-2\" (click)=\"toggleEditorHidden()\">Annuler</button>\n                <button type=\"button\" class=\"btn btn-success m-2\" (click)=\"save()\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n  \n  <app-patient-tag [patient]=\"patient\"></app-patient-tag> \n  \n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"mailPdfModal\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <!-- ngx-extended-pdf-viewer -->\n          <ngx-extended-pdf-viewer *ngIf='docSrc' [src]=\"docSrc\" useBrowserLocale=\"true\" height=\"80vh\">\n          </ngx-extended-pdf-viewer>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">fermer</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n      ","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Allergy } from '../_models/allergy.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllergyService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(allergy : Allergy): Observable<Allergy> {\n    return this.http.post<Allergy>(environment.baseUrl2 + '/allergy/add', allergy);\n  }\n\n  /**\n   * get object by id\n   * @param patient_id \n   */\n  findByPatientId(patient_id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/allergy/detail/' + patient_id);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FolderComponent } from \"./folder/folder.component\";\n\nconst routes: Routes = [\n  { path: ':patientId', component: FolderComponent },\n  { path: ':patientId/:admissionId', component: FolderComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MedicalFolderRoutingModule { }\n"],"sourceRoot":"webpack:///"}