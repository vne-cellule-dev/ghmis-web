{"version":3,"sources":["./src/app/_shared/admission/admission-list/admission-list.component.ts","./src/app/_shared/admission/admission-list/admission-list.component.html","./src/app/_services/payment-type.service.ts","./src/app/_services/admission-invoice.service.ts","./src/app/_services/waiting-room.service.ts","./src/app/admission/list-admission/list-admission.component.ts","./src/app/admission/list-admission/list-admission.component.html","./src/app/admission/update-admission/update-admission.component.ts","./src/app/admission/update-admission/update-admission.component.html","./src/app/_shared/admission/admission-form/admission-form.component.ts","./src/app/_shared/admission/admission-form/admission-form.component.html","./src/app/_services/convention.service.ts","./src/app/_services/admission.service.ts","./src/app/admission/add-admission/add-admission.component.ts","./src/app/admission/add-admission/add-admission.component.html","./src/app/admission/add-invoice/add-invoice.component.ts","./src/app/admission/add-invoice/add-invoice.component.html","./src/app/_services/act.service.ts","./src/app/_shared/admission/invoice-form/invoice-form.component.ts","./src/app/_shared/admission/invoice-form/invoice-form.component.html","./src/app/_services/medicalService.service.ts","./src/app/admission/admission-routing.module.ts","./src/app/admission/update-invoice/update-invoice.component.ts","./src/app/admission/update-invoice/update-invoice.component.html","./src/app/_services/practician.service.ts","./src/app/admission/list-invoice/list-invoice.component.ts","./src/app/admission/list-invoice/list-invoice.component.html","./src/app/_shared/admission/invoice-list/invoice-list.component.ts","./src/app/_shared/admission/invoice-list/invoice-list.component.html","./src/app/admission/admission.module.ts","./src/app/_services/cash-register.service.ts","./src/app/_utility/delete-row.ts"],"names":[],"mappings":"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","file":"default~admission-admission-module~cash-register-cash-register-module~waiting-room-waiting-room-module.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Admission } from 'src/app/_models/admission.model';\nimport { AdmissionService } from \"./../../../_services/admission.service\";\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { deleteRow } from \"./../../../_utility/delete-row\";\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { medicalServiceService } from \"./../../../_services/medicalService.service\";\nimport { NgbDate, NgbCalendar, NgbDateParserFormatter, NgbDateAdapter, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { I18n, CustomDatepickerI18n, CustomAdapter, CustomDateParserFormatter } from \"./../../../_utility/date/ngb-datepicker\";\nimport { Patient } from 'src/app/_models/patient.model';\nimport { PracticianService } from 'src/app/_services/practician.service';\nimport { environment } from 'src/environments/environment';\nimport { ActService } from 'src/app/_services/act.service';\nimport { AdmissionInvoiceService } from 'src/app/_services/admission-invoice.service';\nimport jsPDF from 'jspdf';\nimport { dateOutputFormat } from 'src/app/_utility/date/date-output-format';\nimport { WaitingRoomService } from 'src/app/_services/waiting-room.service';\n\n@Component({\n  selector: 'app-admission-list',\n  templateUrl: './admission-list.component.html',\n  styleUrls: ['./admission-list.component.css'],\n  providers: [\n    I18n,\n    { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n },\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter }\n  ] // define custom NgbDatepickerI18n provider\n})\nexport class AdmissionListComponent implements OnInit {\n\n  /**\n     * search formGroup\n     */\n  public form: FormGroup;\n\n  public waitingRoomForm : FormGroup;\n\n  /**\n   * entries formGroup\n   */\n  public entryForm: FormGroup;\n\n  /**\n   * init first page\n   */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * the selected item a action\n   */\n  public selectedItem: object;\n\n  /**\n   * the selected item id\n   */\n  public selectedItemId: number;\n\n  /**\n   * selected admission patient id\n   */\n  patientId: number;\n\n\n  /**\n   * collection of admissions\n   */\n  admissions: object;\n\n\n  /**\n   * Define entries options\n   */\n  entries = [\n    { id: 10, value: 10 },\n    { id: 25, value: 25 },\n    { id: 50, value: 50 },\n    { id: 100, value: 100 }\n  ];\n\n  /**\n   * Define practicians options\n   */\n  practicians: object;\n\n  /**\n   * Define services options\n   */\n  services: object;\n\n  /**\n   * Define acts options\n   */\n  acts: object;\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n  * admissions admissionStatus\n  */\n  admissionStatus = 'R';\n\n/**\n * get admission billed state\n */\n  isBilled = false ;\n\n  /**\n   * description of the order direction\n   */\n  orderDescription = 'decroissant';\n\n  hoveredDate: NgbDate | null = null;\n\n  /**\n   * date range start\n   */\n  fromDate: NgbDate | null;\n\n  /**\n   * date range end\n   */\n  toDate: NgbDate | null;\n  /**\n  * \n  */\n  @Input()\n  component: string;\n\n  /**\n   * \n   */\n  @Input()\n  title: string;\n\n  /**\n   * \n   */\n  waitingRoom: boolean;\n\n  /**\n   * \n   */\n  nonBilledAdmission: boolean;\n\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  /**\n   * colletion of bills\n   */\n  invoices : any;\n\n  /**\n   * set waiting rooms options\n   */\n  waitingRooms : any;\n\n  constructor(\n    private admissionService: AdmissionService,\n    private practicianService: PracticianService,\n    private medicalServices: medicalServiceService,\n    private actService: ActService,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter,\n    private invoiceService :  AdmissionInvoiceService,\n    private wrService : WaitingRoomService\n  ) {}\n\n  ngOnInit() {\n\n    this.initForm();\n    this.practicianService.getIdAndName().subscribe(res => {  this.practicians = res;  });\n    this.medicalServices.getIdAndName().subscribe(res => { this.services = res; });\n    this.actService.getIdAndName().subscribe(res => { this.acts = res });\n    this.wrService.getIdAndName().subscribe(res => { this.waitingRooms = res;});\n\n    if (this.component == \"PatientInWaintingRoomComponent\") {\n      this.waitingRoom = true;\n      this.order = 'asc';\n    } else {\n      this.nonBilledAdmission = true;\n    }\n\n    this.getAdmissions();\n  }\n\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      admissionNumber: new FormControl(''),\n      firstName: new FormControl(''),\n      lastName: new FormControl(''),\n      patientExternalId: new FormControl(''),\n      cellPhone: new FormControl(''),\n      cnamNumber: new FormControl(''),\n      idCardNumber: new FormControl(''),\n      practician: new FormControl(null),\n      service: new FormControl(null),\n      act: new FormControl(null),\n      dpFromDate: new FormControl(null),\n      dpToDate: new FormControl(null),\n      \n    })\n\n    this.entryForm = new FormGroup({\n      entries: new FormControl(10),\n    })\n\n    this.waitingRoomForm = new FormGroup({\n      waitingRoom: new FormControl(null),\n    })\n  }\n\n  /**\n   * get admission list\n   */\n  getAdmissions() {\n\n    if (this.component == \"PatientInWaintingRoomComponent\") {\n       this.getAdmmissionQueue(this.getRequestParams());\n    } else {\n      this.getAllAdmission(this.getRequestParams());\n    }\n   \n  }\ngetRequestParams(){\n  let data = this.form.value\n    data.size = this.entryForm.get('entries').value;\n    data.page = this.page;\n    data.order = this.order;\n    data.sort = this.sort;\n    data.fromDate = this.formatter.format(this.fromDate);\n    data.toDate = this.formatter.format(this.toDate);\n    data.admissionStatus = this.admissionStatus;\n    data.waitingRoom = this.waitingRoomForm.get('waitingRoom').value;\n  return data;\n}\n  getAllAdmission(data : Object){\n    this.admissionService.findAll(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.admissions = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        this.admissions = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n  }\n\n  getAdmmissionQueue(data : Object){\n    this.admissionService.findAdmissionQueue(data).subscribe(\n      res => {\n        if (res) {          \n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.admissions = res['content'];\n          this.page = res['pageNumber'] + 1;\n          this.waitingRoomForm.get('waitingRoom').setValue(res['waitingRoom'])\n        };\n      },\n      error => {\n        this.admissions = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n  }\n\n  onRoomChange(){\n    this.getAdmmissionQueue(this.getRequestParams());\n  }\n\n  /**\n    * search function\n    */\n  search() {\n    this.loading = true;\n    this.page = this.page > 0 ? this.page - 1 : 0;\n    this.getAdmissions();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n    this.loading = true;\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getAdmissions();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getAdmissions();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.loading = true;\n    this.perPage = this.entryForm.get('entries').value;\n    this.page = this.page - 1;\n    this.getAdmissions();\n  }\n\n  /**\n   * set the liste admissionStatus option\n   */\n  setAdmissionStatus(option) {\n    this.admissionStatus = option;\n  }\n\n  /**\n   * set the selected item \n   * @param item \n   */\n  onItemChange(item) {\n    this.selectedItem = item;\n    this.selectedItemId = item.id;\n    this.patientId = item.patientId;\n    this.isBilled = (item.admissionStatus == 'B') ? true : false;\n  }\n\n  deleteAdmission() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Supprimer cette admission?',\n      text: 'Cette action est est irréversible.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n      if (result.value) {\n        this.admissionService.delete(this.selectedItemId).subscribe(\n           res => {   },\n            error => {\n              if (error == \"OK\") {\n                deleteRow(this.admissions, this.selectedItemId);\n                Swal.fire(\n                  'Supprimé!',\n                  \"Admission supprimée avec succès!\",\n                  'success'\n                )\n              } else {\n                Swal.fire(\n                  'Erreur',\n                  error,\n                  'error'\n                )\n              }\n            });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'Admission encore en base.',\n          'error'\n        )\n      }\n    })\n  }\n\n/**\n * pdf src for ngx-extended-pdf-viewer\n */\ndocSrc: any;\ninvoicePreview(){\n  this.invoiceService.findNomCollectedBillByAdmission(this.selectedItemId).subscribe(res => {\n     this.invoices = res;\n     console.log(res);  \n  })\n\n}\n\ngenerateInvoicePdf(){\n\n      let doc = new jsPDF('p', 'pt', 'a4');\n\n      let patientType = this.invoices[0].patientType == \"a\" ? \"Patient assuré \": \"Client comptant\";\n\n      let discount = this.invoices[0].discountInCfa ? this.invoices[0].discountInCfa : this.invoices[0].discountInPercentage ;\n\n      let docHead = ' <table style=\"font-size: 14px\"><tr><td><img src=\"'+ environment.logo +'\" alt=\"Logo\" width=\"100\"></td>' +\n        '<td class=\"text-bold text-nowrap\"> Numero patient : ' + this.invoices[0].patientExternalId + '</td></tr></table>';\n\n       let info = '<table class=\"ml-2 mt-5\" style=\"width: 560px; font-size: 12px;\"><tr><td class=\"text-nowrap\"> <strong>Facture N°: </strong> ' +  this.invoices[0].billNumber + '</td>' +\n          '<td  class=\"text-nowrap pl-5\"> <strong>Date: </strong> ' + dateOutputFormat(this.invoices[0].billDate) + '</td>' +\n          '</tr><tr><td  class=\"text-nowrap text-uppercase\"> <strong>Patient:&nbsp; &nbsp;</strong>' + this.invoices[0].patientFirstName +\"&nbsp;&nbsp;\"+ this.invoices[0].patientMaidenName+\"&nbsp;&nbsp;\"+ this.invoices[0].patientLastName + '</td>' +\n          '<td  class=\"text-nowrap pl-5\"> <strong>contact: </strong>' +  this.invoices[0].patientContact + '</td>' +\n          '</tr><tr><td  class=\"text-nowrap\"> <strong>Type de client: </strong>' + patientType + '</td>' +\n          '<td  class=\"text-nowrap pl-5\"><strong>Etab.payeur '+ '' +' </strong></td></tr>' +\n          '<tr><td class=\"text-nowrap\"><strong>Matricule assuré: '+ '' +' </strong></td><td></td></tr></table>';\n\n      let data = '<table class=\"table table-bordered mt-2 ml-2 table-sm\" style=\"font-size: 12px; width:560px; border-bottom: none; border-left: none;\"><thead class=\"text-center\" style=\"background-color: #DCDCDC;\">' +\n          '<th>Date</th><th>Service</th><th>Medecin</th><th>Acte</th><th>Coût</th></thead>'+ \n          '<tbody>';\n      this.invoices[0].acts.forEach(element => {\n        let service = \"\";\n         let row = '<tr><td>' + dateOutputFormat(this.invoices[0].billDate )+'</td><td class=\"text-capitalized\">' +service+'</td>' +\n         '<td class=\"text-capitalized\">' + element.practicianFirstName +\"&nbsp;&nbsp;\"+ element.practicianLastName +'</td><td class=\"text-capitalized\">' + element.name +'</td><td class=\"text-nowrap\">' + element.actCost + ' fcfa</td></tr>';\n      data = data + row;\n        });    \n      let emptyRow=  '<tr style=\"height:10rem\"><td></td><td class=\"text-capitalized\"></td>' +\n        '<td class=\"text-capitalized\"></td><td class=\"text-capitalized\"></td><td class=\"text-nowrap\"></td></tr>';\n   \n     let datafoot= emptyRow + '<tr style=\"border-left: none;\"><td colspan=\"3\" style=\"border: none;\"></td><td colspan=\"1\">Part&nbsp;PEC</td><td colspan=\"1\">' + this.invoices[0].partTakenCareOf +' fcfa</td></tr>' +\n          '<tr style=\"border-left: none;\"><td colspan=\"3\" style=\"border: none;\"></td><td colspan=\"1\">Part&nbsp;consommable</td><td colspan=\"1\" class=\"text-danger text-bold\">' + this.invoices[0].patientPart + ' fcfa</td>' + '</td></tr>' +\n          '<tr style=\"border-left: none;\"><td colspan=\"3\" style=\"border: none;\"></td><td colspan=\"1\">Remise</td><td colspan=\"1\">' + discount + '</td></tr>' +\n          '<tr style=\"border-left: none;\"><td colspan=\"3\" style=\"border: none;\"></td><td colspan=\"1\">Total</td><td colspan=\"1\" class=\"text-bold\">' + this.invoices[0].totalAmount + ' fcfa </td></tr>' +\n          '</tbody></table>';\n\n     let docFoot = '<div style=\"width:540px; text-align:center; border-top:1px solid gray; padding-top:2px; font-size:10px; color:gray\">' + environment.documentFooter + '</div>';\n\n    //  let  invoiceInfo = '<div style=\"min-height: 750px;\">' + docHead + info + data +'</div>' +docFoot;\n\n     let  invoiceInfo = '<div style=\"min-height: 750px;\">' + docHead + info +data+ datafoot +'</div>' +  docFoot;\n\n      doc.html(invoiceInfo, {\n        callback: function (doc) {\n          doc.output('dataurlnewwindow');\n        },\n        x: 10,\n        y: 10\n      });\n\n\n\n  //  var doc = new jsPDF();\n  //   doc.html(data, {\n  //     callback: function (doc) {\n  //       doc.output('dataurlnewwindow');\n  //     },\n  //     x: 10,\n  //     y: 10\n  //   });\n  }\n\n  /**\n   * **********************************************************************************************************************\n   * \n   * date range functions\n   * \n   * **********************************************************************************************************************\n   */\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    <div class=\"row pl-3 pr-3\">\n      <div class=\"col-md-8\">\n        <form [formGroup]=\"form\">\n          <div class=\"row\">\n            <div class=\"row pt-2 m-0 col-md-12\">\n              <div class=\"col-lg-3 col-md-5 col-sm-12\">\n                <div class=\"form-group\">\n                  <div class=\"input-group-sm\">\n                    <input type=\"text\" formControlName=\"admissionNumber\" class=\"form-control\"\n                      placeholder=\"N° admission\">\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"input-group-sm\">\n                    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" placeholder=\"Nom\">\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-3 col-md-5 col-sm-12\">\n                <div class=\"form-group\">\n                  <div class=\"input-group-sm\">\n                    <input type=\"text\" formControlName=\"patientExternalId\" class=\"form-control\"\n                      placeholder=\"N° patient\">\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"input-group-sm\">\n                    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" placeholder=\"Prenom\">\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-3 col-md-5 col-sm-12\">\n                <div class=\"form-group\">\n                  <div class=\"input-group-sm\">\n                    <input type=\"text\" formControlName=\"idCardNumber\" class=\"form-control\" placeholder=\"N° CNI\">\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"input-group-sm\">\n                    <input type=\"text\" formControlName=\"cnamNumber\" class=\"form-control\" placeholder=\"N° CNAM\">\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-3 col-md-5 col-sm-12\">\n                <div class=\"input-group-sm\">\n                  <ng-select formControlName=\"practician\" placeholder=\"practicien\">\n                    <ng-option *ngFor=\"let practician of practicians\" [value]=\"practician.userId\">\n                      {{practician.userFirstName +\" \"+ practician.userLastName}}\n                    </ng-option>\n                  </ng-select>\n                </div>\n                <div class=\"input-group-sm mt-3\">\n                  <ng-select formControlName=\"service\" placeholder=\"service\">\n                    <ng-option *ngFor=\"let service of services\" [value]=\"service.id\">{{service.name}}\n                    </ng-option>\n                  </ng-select>\n                </div>\n              </div>\n\n              <div class=\"input-group-sm col-lg-3 col-md-5 col-sm-12  mb-3\">\n                <div class=\"form-group\">\n                  <div class=\"input-group-sm\">\n                    <input type=\"text\" formControlName=\"cellPhone\" class=\"form-control\" placeholder=\"N° tel\">\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group hidden\">\n                <div class=\"input-group ml-2 input-group-sm\">\n                  <input name=\"datepicker\" class=\"form-control\" ngbDatepicker #datepicker=\"ngbDatepicker\"\n                    [autoClose]=\"'outside'\" (dateSelect)=\"onDateSelection($event)\" [displayMonths]=\"2\" [dayTemplate]=\"t\"\n                    outsideDays=\"hidden\" [startDate]=\"fromDate!\">\n                  <ng-template #t let-date let-focused=\"focused\">\n                    <span class=\"custom-day\" [class.focused]=\"focused\" [class.range]=\"isRange(date)\"\n                      [class.faded]=\"isHovered(date) || isInside(date)\" (mouseenter)=\"hoveredDate = date\"\n                      (mouseleave)=\"hoveredDate = null\">\n                      {{ date.day }}\n                    </span>\n                  </ng-template>\n                </div>\n              </div>\n              <div class=\"col-lg-3 col-md-5 col-sm-12 \">\n                <div class=\"input-group input-group-sm\">\n                  <input #dpFromDate class=\"form-control\" placeholder=\"jj/mm/aaaa\" formControlName=\"dpFromDate\"\n                    [value]=\"formatter.format(fromDate)\" (input)=\"fromDate = validateInput(fromDate, dpFromDate.value)\"\n                    style=\"margin-left: -10px;\">\n                  <div class=\"input-group-append\">\n                    <span class=\"input-group-text\" (click)=\"datepicker.toggle()\"><i\n                        class=\"far fa-calendar-alt\"></i></span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-3 col-md-5 col-sm-12\">\n                <div class=\"input-group input-group-sm\">\n                  <input #dpToDate class=\"form-control\" placeholder=\"jj/mm/aaaa\" formControlName=\"dpToDate\"\n                    [value]=\"formatter.format(toDate)\" (input)=\"toDate = validateInput(toDate, dpToDate.value)\"\n                    style=\"margin-left: -10px;\">\n                  <div class=\"input-group-append\">\n                    <span class=\"input-group-text\" (click)=\"datepicker.toggle()\"><i\n                        class=\"far fa-calendar-alt\"></i></span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-3 col-md-2 col-sm-12\">\n                <ng-select formControlName=\"act\" placeholder=\"Admission act\">\n                  <ng-option *ngFor=\"let act of acts\" [value]=\"act.id\">{{act.name}}\n                  </ng-option>\n                </ng-select>\n              </div>\n\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"col-md-4\">\n        <div *ngIf='!waitingRoom'>\n          <div class=\"row\">\n            <div class=\"py-1 col-lg-4  col-md-6 col-sm-12 \">\n              <a routerLink=\"/patient/list\"\n                class=\"btn btn-block btn-info btn-sm font-weight-bold text-nowrap text-white\">\n                <i class=\"fas fa-list mr-1\"></i>\n                Patientèle\n              </a>\n            </div>\n            <div class=\"py-1 col-lg-4  col-md-6 col-sm-12 \">\n              <a routerLink=\"/admission/update/{{selectedItemId}}\"\n                class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"\n                [ngClass]=\"{'disabled': !selectedItemId || isbilled }\">\n                <i class=\"fas fa-pen-alt mr-1\"></i>\n                Modifier\n              </a>\n            </div>\n            <div class=\"py-1 col-lg-4  col-md-6 col-sm-12 \">\n              <a class=\"btn btn-block btn-danger btn-sm font-weight-bold text-nowrap text-white\"\n                [ngClass]=\"{'disabled': !selectedItemId , 'disabled': isbilled}\" (click)=\"deleteAdmission()\">\n                <i class=\"fas fa-trash\"></i>\n                suspprimer\n              </a>\n            </div>\n            <div class=\"py-1 col-lg-4  col-md-6 col-sm-12 \">\n              <a routerLink=\"/admission/add-invoice/{{selectedItemId}}\"\n                class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n                [ngClass]=\"{'disabled': !selectedItemId || isbilled }\">\n                <i class=\"fas fa-file-invoice-dollar mr-1\"></i>\n                Facture\n              </a>\n            </div>\n            <div class=\"py-1 col-lg-4  col-md-6 col-sm-12 \">\n              <a routerLink=\"/pharmacy/{{patientId}}\"\n                class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n                [ngClass]=\"{'disabled': !patientId }\">\n                <i class=\"fas fa-clinic-medical\"></i>\n                Pharmacie\n              </a>\n            </div>\n            <div class=\"py-1 col-lg-4  col-md-6 col-sm-12 \">\n              <a class=\"btn btn-block btn-dark btn-sm font-weight-bold text-nowrap text-white\"\n                [ngClass]=\"{'disabled': !selectedItemId }\" data-toggle=\"modal\" data-target=\".bd-example-modal-lg\"\n                (click)=\"invoicePreview()\">\n                <i class=\"fas fa-file-pdf\"></i>\n                Editer PDF\n              </a>\n            </div>\n\n          </div>\n        </div>\n        <div *ngIf='waitingRoom'>\n          <!-- <div class=\"row\"> -->\n          <div class=\"py-1 col-lg-5 col-md-6 col-sm-12\">\n            <a routerLink=\"/patient-constant/list/{{patientId}}\"\n              class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n              [ngClass]=\"{'disabled': !patientId }\">\n              <i class=\"fas fa-stethoscope mr-2\"></i>\n              constantes\n            </a>\n          </div>\n          <div class=\"py-1 col-lg-5 col-md-6 col-sm-12\">\n            <a routerLink=\"/medical-folder/{{patientId}}/{{selectedItemId}}\"\n              class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n              [ngClass]=\"{'disabled': !patientId }\">\n              <i class=\"fas fa-folder-plus mr-2\"></i>\n              Dossier\n            </a>\n          </div>\n          <!-- </div> -->\n        </div>\n        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12 \">\n          <span class=\"btn btn-light btn-sm \" (click)=\"search()\" style=\"width:100%\">\n            <i class=\"fas fa-search\"></i>\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-3 text-center text-muted\">\n        <h4>{{title}}</h4>\n      </div>\n      <div class=\"col-md-7\">\n        <!-- <div class=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"allAdmissions\" name=\"allAdmissions\" class=\"custom-control-input\" disabled =\"{{waitingRoom}}\" (click)=\"setAdmissionStatus(null)\">\n            <label class=\"custom-control-label\" for=\"allAdmissions\">Toutes les admissions</label>\n          </div> -->\n        <div class=\"custom-control custom-radio custom-control-inline\">\n          <input type=\"radio\" id=\"billedAdmissions\" name=\"allAdmissions\" class=\"custom-control-input\"\n            checked=\"{{waitingRoom}}\" (click)=\"setAdmissionStatus('B')\">\n          <label class=\"custom-control-label\" for=\"billedAdmissions\">Admission facturées</label>\n        </div>\n        <div class=\"custom-control custom-radio custom-control-inline\">\n          <input type=\"radio\" id=\"nonBilledAdmission\" name=\"allAdmissions\" class=\"custom-control-input\"\n            disabled=\"{{waitingRoom}}\" checked=\"{{nonBilledAdmission}}\" (click)=\"setAdmissionStatus('R')\">\n          <label class=\"custom-control-label\" for=\"nonBilledAdmission\">Admission non facturées</label>\n        </div>\n        <div class=\"col-md-6\" *ngIf='waitingRoom'>\n        <div class=\"input-group-sm \" [formGroup]=\"waitingRoomForm\">  \n          <ng-select formControlName=\"waitingRoom\" placeholder=\"salle d'attente\" (change)=\"onRoomChange()\">\n            <ng-option *ngFor=\"let waitingRoom of waitingRooms\" [value]=\"waitingRoom.id\">{{waitingRoom.name}}\n            </ng-option>\n          </ng-select>\n        </div>\n      </div>\n      </div>\n      <div class=\"col-md-2 text-right\">\n        <form [formGroup]=\"entryForm\">\n          <div class=\"row\">\n            <div for=\"entries\" class=\"col-sm-12 text-right mt-1\"> Afficher</div>\n            <div class=\"col-sm-12 mb-2\">\n              <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\" (change)=\"OnEntryChange()\">\n                <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\n              </ng-select>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n    <div class=\"table-responsive\">\n      <table class=\"table table-sm table-hover table-bordered \">\n        <thead class=\"thead-light text-center\">\n          <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\">N° admission</th>\n            <th scope=\"col\">Facturé</th>\n            <th scope=\"col\">N° patient</th>\n            <th scope=\"col\">Nom</th>\n            <th scope=\"col\">prenom</th>\n            <th scope=\"col\">Date d'admissio</th>\n            <th scope=\"col\">Acte</th>\n            <th scope=\"col\">Service</th>\n            <th scope=\"col\">Médecin</th>\n            <th scope=\"col\">Admis par</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let admission of admissions\">\n            <th class=\"text-center\" scope=\"row\">\n              <div class=\"custom-control custom-radio\">\n                <input type=\"radio\" class=\"custom-control-input\" id=\"{{admission.id}}\" name=\"radio-stacked\"\n                  value=\"{{admission.id}}\" (change)=\"onItemChange(admission)\">\n                <label class=\"custom-control-label\" for=\"{{admission.id}}\"></label>\n              </div>\n            </th>\n            <td class=\"text-center text-nowrap\">{{admission.admissionNumber}}</td>\n            <td class=\"text-center\"><i class=\"fas fa-circle\"\n                [ngClass]=\"{'text-green': admission.admissionStatus=='B', 'text-red': admission.admissionStatus=='R'}\"\n                ngbTooltip=\"{{admission.admissionStatus=='B'? 'Facturé' : 'Non facturé'}}\"></i></td>\n            <td class=\"text-capitalize text-nowrap\">{{admission.patientExternalId}}</td>\n            <td class=\"text-capitalize text-nowrap\">{{admission.patientFirstName}}</td>\n            <td class=\"text-center text-nowrap\">{{admission.patientMaidenName + \" \" + admission.patientLastName}}</td>\n            <td class=\"text-center text-nowrap\">{{admission.admissionDate | date:'dd/MM/yyyy H:mm:ss'}}</td>\n            <td class=\"text-capitalize text-nowrap\">{{admission.act}}</td>\n            <td class=\"text-capitalize text-nowrap\">{{admission.service}}</td>\n            <td class=\"text-nowraptext-capitalize text-nowrap\">{{admission.practicianFirstName + \" \"+\n              admission.practicianLastName }}</td>\n            <td class=\"text-nowrap text-capitalize text-nowrap\">{{admission.createdByFirstName+ ' '+\n              admission.createdByLastName}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"text-center mb-5 mt-4\">\n      <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n      <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n      <div *ngIf=\"hasNoData\" class=\"mt-3\">\n        <span class=\"text-muted ml-3 \">{{EmptyMessage}}</span>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-7 offset-md-5\">\n        <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n          (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n\n<!-- pdf viewer Modal -->\n<!-- <div  class=\"modal fade bd-example-modal-lg\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\"\naria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\" *ngIf=\"selectedItem\">\n  <div class=\"modal-dialog modal-xl\">\n    <div class=\"modal-content\">\n      <div class=\"modal-body\">\n        ngx-extended-pdf-viewer\n        <ngx-extended-pdf-viewer *ngIf='docSrc' [src]=\"docSrc\" useBrowserLocale=\"true\" height=\"80vh\">\n        </ngx-extended-pdf-viewer>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">fermer</button>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n<!--end pdf viewer Modal -->\n\n<div class=\"modal fade bd-example-modal-lg\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\"\n  aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-lg\">\n\n    <div class=\"modal-content\" *ngIf=\"invoices\">\n      <span type=\"button\" class=\"text-right mr-2\" data-dismiss=\"modal\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </span>\n      <div class=\"modal-body\">\n        <table>\n          <tr>\n            <td><img src=\"assets/img/medical-logo-design.jpeg\" alt=\"Logo\" width=\"100\"></td>\n            <td class=\"text-bold text-nowrap text-right\"> Numero patient : {{invoices[0].patientExternalId}}</td>\n          </tr>\n        </table>\n\n        <table>\n          <tr>\n            <td class=\"text-nowrap\"> <strong>Facture N°: {{invoices[0].billNumber}} </strong> </td>\n            <td class=\"text-nowrap pl-5\"> <strong>Date: </strong> {{invoices[0].billDate}} </td>\n          </tr>\n          <tr>\n            <td class=\"text-nowrap text-capitalize\"> <strong>Patient:</strong> {{ invoices[0].patientFirstName +\"\n              \"+invoices[0].patientLastName}}</td>\n            <td class=\"text-nowrap pl-5\"> <strong>contact: </strong>{{invoices[0].patientContact}} </td>\n          </tr>\n          <tr>\n            <td class=\"text-nowrap\"> <strong>Type de client: {{(invoices[0].paymentType == 'C') ? 'Client comptant' :\n                'Patient assuré'}}</strong> </td>\n            <td class=\"text-nowrap pl-5\"><strong>Etab.payeur/Sociétaire: </strong> {{invoices[0].insuranceSuscriber}}\n            </td>\n\n          </tr>\n          <tr>\n            <td class=\"text-nowrap\"><strong>Matricule assuré: </strong> {{invoices[0].insuranceCardNumber}}</td>\n            <td></td>\n          </tr>\n        </table>\n\n        <table class=\"table table-bordered mt-4 table-sm\">\n          <thead class=\"text-center\" style=\"background-color: #DCDCDC;\">\n            <th>Date</th>\n            <th>Service</th>\n            <th>Medecin</th>\n            <th>Acte</th>\n            <th class=\"text-nowrap\">Coût</th>\n          </thead>\n          <tbody style=\"min-height: 40rem !important\">\n            <tr *ngFor='let act of invoices[0].acts'>\n              <td>{{invoices[0].billDate}}</td>\n              <td class=\"text-capitalized\"></td>\n              <td class=\"text-capitalized\">{{act.practicianFirstName +\" \"+ act.practicianLastName}}</td>\n              <td class=\"text-capitalized\">{{act.name}}</td>\n              <td class=\"text-nowrap\">{{act.actCost}}</td>\n            </tr>\n            <tr>\n              <td colspan=\"3\"></td>\n              <td colspan=\"1\">Part PEC</td>\n              <td colspan=\"1\">{{invoices[0].partTakenCareOf ? invoices[0].partTakenCareOf : 0}}</td>\n            </tr>\n            <tr>\n              <td colspan=\"3\"></td>\n              <td colspan=\"1\">Part consommable</td>\n              <td colspan=\"1\" class=\"text-danger text-bold\">{{invoices[0].patientPart ? invoices[0].patientPart : 0}}\n              </td>\n            </tr>\n            <tr>\n              <td colspan=\"3\"></td>\n              <td colspan=\"1\">Remise</td>\n              <td colspan=\"1\"></td>\n            </tr>\n            <tr>\n              <td colspan=\"3\"></td>\n              <td colspan=\"1\">Total</td>\n              <td colspan=\"1\" class=\"text-bold\">{{invoices[0].totalAmount}}</td>\n            </tr>\n          </tbody>\n          <tfoot>\n          </tfoot>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Annuler</button>\n        <button type=\"button\" class=\"btn btn-dark\" (click)=\"generateInvoicePdf()\">Exporter PDF</button>\n      </div>\n    </div>\n  </div>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PaymentType } from '../_models/paymentType.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentTypeService {\n\n  constructor( private http: HttpClient) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(paymentType: PaymentType): Observable<PaymentType> {\n    return this.http.post<PaymentType>(environment.baseUrl2 + '/payment-type/add', paymentType);\n    \n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<PaymentType> {\n    return this.http.put<PaymentType>(environment.baseUrl2 + '/payment-type/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<any[]> {\n    return this.http.get<any[]>(environment.baseUrl2 + '/payment-type/list');\n  }\n\n    /**\n   * get a paginated list of object\n   */\n  findAllByPage(data): Observable<any[]> {\n      let queryParams = {};\n       data['active']= (data['active'] == null) ? '' : data['active'];\n\n       queryParams = { params: new HttpParams().set('page', data['page'])\n                                              .set('size', data['entries'])\n                                              .set('name', data['name'])\n                                              .set('active', data['active'])\n                                              .set('sort', data['sort']+','+data['order'])\n    };\n      return this.http.get<any[]>(environment.baseUrl2 + '/payment-type/p_list', queryParams);\n    }\n    \n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<any[]> {\n  return this.http.get<any[]>(environment.baseUrl2 + '/payment-type/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id) : Observable<any> {\n  return this.http.get<any>(environment.baseUrl2 + '/payment-type/enable/' + id);\n \n  }\n\n  /**\n   * disable a object\n   */\n  disable(id) : Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/payment-type/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/payment-type/detail/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n      return this.http.get<any>(environment.baseUrl2 + '/payment-type/active_payment_types_name');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { AdmissionInvoice } from \"./../_models/admissionInvoice.model\";\nimport jsPDF from 'jspdf';\nimport { dateOutputFormat } from '../_utility/date/date-output-format';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdmissionInvoiceService {\n\n  constructor (\n    private http: HttpClient\n  ) { }\n\n\n  /**\n  *  POST: add a new object to the database \n  */\n  save(invoice: AdmissionInvoice): Observable<AdmissionInvoice> {\n    return this.http.post<AdmissionInvoice>(environment.baseUrl2 + '/bill/add', invoice);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(invoice: AdmissionInvoice): Observable<AdmissionInvoice> {\n\n    return this.http.put<AdmissionInvoice>(environment.baseUrl2 + '/bill/update/' + invoice.id, invoice);\n  }\n\n  /**\n    *  POST: get the bill cost \n    */\n  getCost(invoice: any): Observable<any> {\n    return this.http.post<any>(environment.baseUrl2 + '/bill/get_cost', invoice);\n  }\n\n  /** \n   * DELETE: delete the hero from the server \n   */\n  delete(id: number): Observable<any> {\n    return this.http.delete(environment.baseUrl2 + '/bill/delete/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(data: object): Observable<any[]> {\n\n    let queryParams = {};\n\n    data['practician'] = (data['practician'] == null) ? '' : data['practician'];\n    data['insurance'] = (data['insurance'] == null) ? '' : data['insurance'];\n    data['subscriber'] = (data['subscriber'] == null) ? '' : data['subscriber'];\n    data['convention'] = (data['convention'] == null) ? '' : data['convention'];\n    data['patientType'] = (data['patientType'] == null) ? '' : data['patientType'];\n    data['act'] = (data['act'] == null) ? '' : data['act'];\n\n    queryParams = {\n      params: new HttpParams().set('billNumber', data['billNumber'])\n        .set('admissionNumber', data['admissionNumber'])\n        .set('firstName', data['firstName'])\n        .set('lastName', data['lastName'])\n        .set('patientExternalId', data['patientExternalId'])\n        .set('cellPhone', data['cellPhone'])\n        .set('cnamNumber', data['cnamNumber'])\n        .set('idCardNumber', data['idCardNumber'])\n        .set('convention', data['convention'])\n        .set('patientType', data['patientType'])\n        .set('insurance', data['insurance'])\n        .set('subscriber', data['subscriber'])\n        .set('act', data['act'])\n        .set('fromDate', data['fromDate'])\n        .set('toDate', data['toDate'])\n        .set('size', data['size'])\n        .set('page', data['page'])\n        .set('billStatus', data['invoiceStatus'])\n        .set('sort', data['sort'] + ',' + data['order'])\n    };\n\n    return this.http.get<any[]>(environment.baseUrl2 + '/bill/p_list', queryParams);\n\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/bill/detail/' + id);\n  }\n\n  /**\n  *  POST: collect the bill amount \n  */\n  collectAmount(payment: Object): Observable<any> {\n    return this.http.post<any>(environment.baseUrl2 + '/bill/collect/', payment);\n  }\n\n  /**\n     * get object by id\n     * @param id \n     */\n  findNomCollectedBillByAdmission(admission_id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/bill/non-collected/' + admission_id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getActCost(data: object): Observable<any[]> {\n\n    let queryParams = {};\n    data['convention'] = (data['convention'] == null) ? '' : data['convention'];\n\n    queryParams = {\n      params: new HttpParams()\n        .set('conventionId', data['convention'])\n        .set('actId', data['act'])\n    };\n\n    return this.http.get<any[]>(environment.baseUrl2 + '/bill/get-act-cost', queryParams);\n\n  }\n\n  /**\n   * generate invoice document\n   */\n  generatePdf(invoice: object, patientTag: any) {\n    var doc = new jsPDF('p', 'pt', 'a4');\n    var patient = invoice['patient'];\n    var insured = invoice['insured'];\n    var insurance = invoice['insurance'] ? invoice['insurance']['name'] : '';\n    var subscriber = invoice['subscriber'] ? invoice['subscriber']['name'] : '';\n    var patientAddress = patient['patientAddresses'].find(e => e.currentAddress === 'Y');\n    var acts = invoice['billActs'];\n    var discount = invoice['discountInCfa'] ? invoice['discountInCfa'] : invoice['discountInPercentage'] + ' %';\n    var principalInsured = insured ? insured['principalInsuredName'] : '';\nvar coverage = insured ? insured['coverage'] : 0;\n\n    if (invoice) {\n\n      // doc variable\n      var date = dateOutputFormat(invoice['date']);;\n      var patientNumber = patient['patientExternalId'];\n      var footer = environment.documentFooter;\n\n      //doc head\n      doc.addImage(environment.logo, \"JPEG\", 25, 15, 60, 60);\n      doc.setFontSize(10);\n      doc.setFont(\"bold\");\n      // doc.addImage(patientTag['src'], 'JPEG', 380, 30, 170, 50);\n\n      //information\n      doc.setFontSize(10);\n      doc.text(patientNumber, 430, 80);\n\n      doc.setFontSize(14);\n      doc.setFont(\"times\", \"bold\");\n      doc.text(\"FACTURE N°: \" + invoice['billNumber'], 160, 120)\n      doc.text(\"Date: \" + dateOutputFormat(invoice['createdAt']), 450, 120)\n\n      doc.setFontSize(12);\n      doc.setFont(\"times\", \"normal\");\n     \n      doc.text(\"Etab. payeur / Sociétaire : \", 25, 150);\n      doc.setFillColor(245, 245, 245)\n      doc.rect(160, 138, 400, 20, 'F')\n      doc.text(subscriber, 170, 150);\n\n      doc.text(\"Patient: \", 25, 175);\n      doc.setFillColor(245, 245, 245)\n      doc.rect(160, 162, 400, 20, 'F')\n      doc.text(patient['firstName'] + \" \" + patient['maidenName'] + patient['lastName'], 170, 175);\n\n      doc.text(\"Adresse: \", 25, 200);\n      doc.setFillColor(245, 245, 245)\n      doc.rect(160, 185, 400, 20, 'F')\n      doc.text(patientAddress['address'], 170, 200);\n\n      doc.text(\"Assuré: \", 25, 225);\n      doc.setFillColor(245, 245, 245)\n      doc.rect(160, 210, 400, 20, 'F')\n      doc.text(principalInsured , 170, 225);\n\n      doc.text(\"Nº PEC: \", 25, 250);\n      doc.setFillColor(245, 245, 245)\n      doc.rect(160, 235, 400, 20, 'F')\n      doc.text(\" \", 170, 250);\n     \n       doc.text(\"Matricule Assuré: \", 25, 275);\n      doc.setFillColor(245, 245, 245);\n      doc.rect(160, 260, 400, 20, 'F');\n      doc.text(insured['cardNumber'], 170, 275);\n\n      doc.rect(25, 290, 535, 300);\n      doc.setDrawColor(0, 0, 0);\n      doc.setFillColor(245, 245, 245);\n      doc.rect(25, 290 , 535, 25, 'F')\n      doc.text(\"Libellé de l'acte\", 75, 310);\n      doc.text(\"Nbr/jr\", 205, 310);\n      doc.text(\"PU\", 252, 310);\n      doc.text(\"Montant\", 295, 310);\n      doc.text(\"Praticien\", 430, 310);\n\n  //table horizontal line\n     for (let index = 0; index < acts.length ; index++) {\n       const act = acts[index];\n       const actName = act['act']['name'];\n       const practician = act['practician']['firstName'] +\" \"+ act['practician']['lastName'];\n        doc.setDrawColor(0, 0, 0);\n        doc.setFillColor(0, 0, 0);\n        doc.rect(25, 290 + index * 25, 535, 25)\n        \n        var splitActName = doc.splitTextToSize(actName, 150);\n        doc.text(splitActName, 30, 335 + index * 25);\n        doc.text(\" \", 205, 335 + index * 25);\n        doc.text(act['actCost'].toString(), 252, 335 + index * 25);\n        doc.text(act['actCost'].toString(), 295, 335 + index * 25);\n        var splitPracticianName = doc.splitTextToSize(practician, 150);\n        doc.text(splitPracticianName, 360, 335 + index * 25);\n      }\n      \n     // vetical line\n      doc.setDrawColor(0, 0, 0);\n      doc.line(200, 590, 200, 290);\n      doc.line(240, 590, 240, 290);\n      doc.line(285, 710, 285, 290);\n      doc.line(355, 590, 355, 290);\n\n      doc.setFont(\"times\", \"bold\");\n      doc.rect(25, 590, 330, 20);\n      doc.setTextColor(0, 0, 0)\n      doc.text(\"Total facture\", 35, 605);\n      doc.setTextColor(255, 0, 0)\n      doc.text(invoice['totalAmount'].toString(), 290, 605);\n\n      doc.rect(25, 610, 330, 20);\n      doc.setTextColor(0, 0, 0)\n      doc.text(\"Taux de couverture\", 35, 625);\n      doc.setTextColor(255, 0, 0)\n      doc.text(coverage.toString() + ' %', 290, 625);\n\n      doc.rect(25, 630, 330, 20);\n      doc.setTextColor(0, 0, 0)\n      doc.text(\"Part prise en charge (PEC\", 35, 645);\n      doc.setTextColor(255, 0, 0)\n      doc.text(invoice['partTakenCareOf'].toString(), 290, 645);\n\n      doc.rect(25, 650, 330, 20);\n      doc.setTextColor(0, 0, 0)\n      doc.text(\"Remise\", 35, 665);\n      doc.setTextColor(255, 0, 0)\n      doc.text(discount.toString(), 290, 665);\n\n      doc.rect(25, 670, 330, 20);\n      doc.setTextColor(0, 0, 0)\n      doc.text(\"Part adhérent\", 35, 685);\n      doc.setTextColor(255, 0, 0)\n      doc.text(invoice['patientPart'].toString(), 290, 685);\n\n      doc.rect(25, 690, 330, 20);\n      doc.setTextColor(0, 0, 0)\n      doc.text(\"Net à payer\", 35, 705);\n      doc.setTextColor(255, 0, 0)\n      doc.text(invoice['patientPart'].toString(), 290, 705);\n\n      doc.setTextColor(0, 0, 0)\n      doc.text(\"Arrêté la présente facture à la somme de : \" + invoice['patientPart'].toString() + \" \" + environment.devise, 25, 730);\n      \n      doc.setFont(\"times\", \"normal\");\n      doc.setTextColor(150)\n      doc.setFontSize(8);\n      doc.setLineWidth(0.25)\n      doc.line(552, 800, 25, 800)\n      var splitFooter = doc.splitTextToSize(footer, 540);\n      doc.text(splitFooter, 25, 810);\n\n    }\n\n    return doc;\n  }\n\n\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { WaitingRoom } from '../_models/waitingRoom.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WaitingRoomService {\n\n  constructor( private http: HttpClient) { }\n   \n  /**\n   *  POST: add a new object to the database \n   */\n  save(waitingRoom: WaitingRoom): Observable<WaitingRoom> {\n    return this.http.post<WaitingRoom>(environment.baseUrl2 + '/waiting-room/add', waitingRoom);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<WaitingRoom> {\n    return this.http.put<WaitingRoom>(environment.baseUrl2 + '/waiting-room/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<WaitingRoom[]> {\n    return this.http.get<WaitingRoom[]>(environment.baseUrl2 + '/waiting-room/list');\n  }\n\n    /**\n   * get a paginated list of object\n   */\n  findAllByPage(data): Observable<WaitingRoom[]> {\n      let queryParams = {};\n       data['active']= (data['active'] == null) ? '' : data['active'];\n      //  data['deleted']= (data['deleted'] == null) ? '' : data['deleted'];\n  \n      queryParams = { params: new HttpParams().set('page', data['page'])\n                                              .set('size', data['entries'])\n                                              .set('name', data['name'])\n                                              .set('active', data['active'])\n                                              .set('sort', data['sort']+','+data['order'])\n    };\n      return this.http.get<WaitingRoom[]>(environment.baseUrl2 + '/waiting-room/p_list', queryParams);\n    }\n    \n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<WaitingRoom[]> {\n  return this.http.get<WaitingRoom[]>(environment.baseUrl2 + '/waiting-room/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id) : Observable<any> {\n  return this.http.get<any>(environment.baseUrl2 + '/waiting-room/enable/' + id);\n \n  }\n\n  /**\n   * disable a object\n   */\n  disable(id) : Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/waiting-room/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/waiting-room/detail/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n      return this.http.get<any>(environment.baseUrl2 + '/waiting-room/active_waitingRooms_name');\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-admission',\n  templateUrl: './list-admission.component.html',\n  styleUrls: ['./list-admission.component.css']\n})\nexport class ListAdmissionComponent implements OnInit {\n\n  /**\n   * title to display\n   */\n  title='Liste des admissions';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-admission-list [title]='title'></app-admission-list>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AdmissionService } from \"./../../_services/admission.service\";\nimport { AlertService } from \"./../../_utility/alert/alert.service\"; \n\n@Component({\n  selector: 'app-update-admission',\n  templateUrl: './update-admission.component.html',\n  styleUrls: ['./update-admission.component.css']\n})\nexport class UpdateAdmissionComponent implements OnInit {\n \n  /**\n  * admission id \n  */\n  admissionId :  number;\n  \n  /**\n   * title to display\n   */\n  title = \"Modification d'admission\";\n  \n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private admissionService: AdmissionService,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params=>{\n       this.admissionId = params.id;\n    })\n  }\n\n  /**\n   * update existing admission\n   * @param data object\n   */\n  save(data) {\n   \n    let admission = data.admission;\n    let action = data.action;\n    \n    this.admissionService.update(admission).subscribe(res => {\n          this.router.navigate(['/admission/list']);\n          this.alertService.success('Admission modifiée avec succès')\n    });\n\n  }\n\n}\n","<app-admission-form [admissionId]=\"admissionId\"  [title]=\"title\" (admissionEmitter)=\"save($event)\"></app-admission-form>\n","import { Component, Input, OnInit, Output, EventEmitter, Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Admission } from 'src/app/_models/admission.model';\nimport { medicalServiceService } from 'src/app/_services/medicalService.service';\nimport { PatientService } from 'src/app/_services/patient.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { dateInputFormat } from 'src/app/_utility/date/date-input-format';\nimport { dateOutputFormat } from 'src/app/_utility/date/date-output-format';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\nimport { AdmissionService } from \"./../../../_services/admission.service\";\nimport { Router } from \"@angular/router\";\nimport { NgbCalendar, NgbDateAdapter, NgbDateParserFormatter, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { I18n, CustomDatepickerI18n, CustomAdapter, CustomDateParserFormatter } from \"./../../../_utility/date/ngb-datepicker\";\nimport { PracticianService } from 'src/app/_services/practician.service';\nimport { environment } from 'src/environments/environment';\nimport { ActService } from 'src/app/_services/act.service';\n\n\n@Component({\n  selector: 'app-admission-form',\n  templateUrl: './admission-form.component.html',\n  styleUrls: ['./admission-form.component.css'],\n  providers: [\n    I18n,\n    { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n },\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter }\n  ] // define custom NgbDatepickerI18n provider\n\n})\n\nexport class AdmissionFormComponent implements OnInit {\n\n  /**\n   *   form Group\n   */\n  form: FormGroup;\n\n  /**\n  * form submission action, it will get the value of the action to do\n  */\n  formAction = '';\n\n  /**\n   * invalid from controls\n   */\n  invalidFormControls: any;\n\n  /**\n   * Define service options\n   */\n  services: object;\n\n  /**\n   * Define act options\n   */\n  acts: object;\n\n  /**\n   * Define doctor options\n   */\n  practicians: object;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  patientId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  admissionId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * child component output\n   */\n  @Output()\n  admissionEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * the component model\n   */\n  admission: Admission\n\n  /**\n   * the admission billed state\n   */\n  isBilled = false;\n\n  /**\n    * date picker model\n    */\n  datePicker: NgbDateStruct;\n\n  /**\n   * time picker model\n   */\n  timePicker = { hour: 0, minute: 0, second: 0 };\n\n  /**\n   * time piker second\n   */\n  seconds = true;\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n\n  constructor(\n    private patientService: PatientService,\n    private medicalService: medicalServiceService,\n    private actService: ActService,\n    private practicianService: PracticianService,\n    private alertService: AlertService,\n    private admissionService: AdmissionService,\n    private router: Router,\n    private ngbCalendar: NgbCalendar, private dateAdapter: NgbDateAdapter<string>,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.initForm();\n    this.initAddAction();\n    this.initUpdateAction();\n    this.medicalService.getIdAndName().subscribe(res => { this.services = res; });\n    this.actService.getIdAndName().subscribe(acts => { this.acts = acts });\n    this.patientId = 1; //TODO : delete later\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      id: new FormControl(0),\n      patientExternalId: new FormControl({ value: '', disabled: true }, /*Validators.required*/),\n      patient: new FormControl(''),\n      name: new FormControl({ value: '', disabled: true }, Validators.required),\n      date: new FormControl('', [Validators.required]),\n      time: new FormControl(''),\n      service: new FormControl('', Validators.required),\n      act: new FormControl('', Validators.required),\n      practician: new FormControl('', Validators.required),\n    });\n  }\n\n  /**\n   * init the form value when adding\n   */\n  initAddAction() {\n\n    if (this.patientId) {\n\n      this.patientService.findById(this.patientId).subscribe(\n        patient => {\n          if (patient) {\n            let currentDate = new Date();\n            this.timePicker = { hour: currentDate.getHours(), minute: currentDate.getMinutes(), second: currentDate.getSeconds() };\n            let admission = {\n              'patientExternalId': patient.patientExternalId,\n              'name': patient.firstName + \" \" + patient.lastName,\n              'date': dateOutputFormat(new Date()),\n              'time': this.timePicker,\n              'patient': patient.id\n            };\n            this.form.patchValue(admission);\n\n          } else {\n            this.errorAction(\"Admission impossible car le patient n'existe pas\", '/patient/list');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de l'ajout\", '/patient/list')\n          \n        })\n    }\n\n  }\n\n  /**\n   * init ths form value when updating\n   */\n  initUpdateAction() {\n\n    if (this.admissionId) {\n\n      this.admissionService.findById(this.admissionId).subscribe(\n        admission => {\n          if (admission) { \n            console.log(admission.admissionStatus);\n            \n            if(admission.admissionStatus == 'B') this.isBilled = true;\n            let time = new Date(admission.date);\n            this.timePicker = { hour: time.getHours(), minute: time.getMinutes(), second: time.getSeconds() };\n            this.practicianService.findByService(admission.service).subscribe(practicians => { this.practicians = practicians;});\n            this.form.patchValue(admission);\n            this.form.get('name').setValue(admission.patientFirstName + \" \" + admission.patientLastName);\n            this.form.get('date').setValue( dateOutputFormat(time));\n            this.form.get('time').setValue(this.timePicker);\n            \n          } else {\n            this.errorAction(\"Modification impossible car l'admission n'existe pas\", '/admission/list');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de la modification\", '/admission/list');\n          \n        })\n    }\n  }\n\n  /**\n   * fetch practicians according to the selected services\n   * @param selectedOption \n   */\n  onServiceChange(selectedOption) {\n    this.form.get('practician').reset();\n    this.practicianService.findByService(selectedOption).subscribe(practicians => {\n      this.practicians = practicians;\n    });\n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the patient\n    */\n  save() {\n    // reset alerts on submit\n    this.alertService.clear();\n\n    //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    this.admission = this.form.value;\n    this.admission.date = dateInputFormat(this.form.get('date').value);\n    let time = this.form.get('time').value;\n    this.admission.date.setHours(time.hour);\n    this.admission.date.setMinutes(time.minute);\n    this.admission.date.setSeconds(time.second);\n\n    if (this.form.valid) {\n      this.admissionEmitter.emit({ admission: this.admission, action: this.formAction })\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n  /**\n   * get the form submission action\n   * @param action : string\n   */\n  actionToDo(action) {\n    this.formAction = action;\n  }\n\n  /**\n   * action to Do when  ckick on cancel button\n   */\n  cancelAction() {\n    this.errorAction('Action annulée', '/admission/list');\n  }\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"mr-auto p-2 col-md-6\">\n                    <h3>{{title}}</h3>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-4 col-md-6 col-sm-12 text-nowrap\" *ngIf=\"!isBilled\">\n                            <button (click)=\"actionToDo('save')\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold\" value=\"save\">\n                                Enregistrer\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4 col-md-6 col-sm-12 text-nowrap\">\n                            <span (click)=\"cancelAction()\" class=\"btn btn-block btn-danger btn-sm font-weight-bold\"\n                                value=\"cancel\">\n                                Annuler\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <p class=\"text-muted\"> NB: les champs marqués d'un astérisque ( <span class=\"text-danger\">*</span> ) sont\n                obligatoire pour la validation du formulare</p>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label for=\"patientExternalId\">Numero Patient</label>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"patientExternalId\" class=\"form-control\">\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"name\">Nom du Patient</label>\n                        <div class=\"input-group input-group-sm \">\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control text-capitalize\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"row\">\n                        <div class=\" col-lg-6 col-md-12\">\n                            <div class=\"form-group\">\n                                <label for=\"date\">Date d'admission:</label>\n                                <span class=\"text-danger\">*</span>\n                                <div class=\"input-group  input-group-sm\">\n                                    <input class=\"form-control\" placeholder=\"jj-mm-AAAA\" formControlName=\"date\"\n                                        ngbDatepicker #d=\"ngbDatepicker\">\n                                    <div class=\"input-group-append\">\n                                        <span class=\"input-group-text\" (click)=\"d.toggle()\">\n                                            <i class=\"far fa-calendar-alt\"></i>\n                                        </span>\n                                    </div>\n                                </div>\n                                <span class=\"text-danger\"\n                                    *ngIf=\"invalidFormControls && invalidFormControls.date\">\n                                    ce champ doit renseigné au format jj/mm/aaaa\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\" col-lg-6 col-md-12\" style=\"margin-top: -0.70rem;\">\n                            <ngb-timepicker [seconds]=\"seconds\" formControlName=\"time\"></ngb-timepicker>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\" style=\"margin-top: -1.35rem;\">\n                        <div class=\"input-group-sm\">\n                            <label for=\"service\">Service</label>\n                            <span class=\"text-danger\">*</span>\n                            <ng-select formControlName=\"service\" (change)=\"onServiceChange($event)\">\n                                <ng-option *ngFor=\"let service of services\" [value]=\"service.id\">{{service.name}}\n                                </ng-option>\n                            </ng-select>\n                            <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.service\">ce\n                                champ doit être renseigné\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <div class=\"input-group-sm\">\n                            <label for=\"admissionAct\">Acte d'admission</label>\n                            <span class=\"text-danger\">*</span>\n                            <ng-select formControlName=\"act\">\n                                <ng-option *ngFor=\"let act of acts\" [value]=\"act.id\">{{act.name}}</ng-option>\n                            </ng-select>\n                            <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.act\">\n                                ce champ doit être renseigné\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"input-group-sm\">\n                            <label for=\"practician\">Medecin</label>\n                            <span class=\"text-danger\">*</span>\n                            <ng-select formControlName=\"practician\">\n                                <ng-option *ngFor=\"let practician of practicians\" [value]=\"practician.userId\">{{practician.userFirstName + ' ' + practician.userLastName}}\n                                </ng-option>\n                            </ng-select>\n                            <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.practician\">\n                                ce champ doit être renseigné\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- hidden -->\n            <input type=\"hidden\" formControlName=\"patient\">\n            <input type=\"hidden\" formControlName=\"id\">\n        </div>\n    </div>\n</form>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Convention } from '../_models/convention.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConventionService {\n\n  constructor( private http: HttpClient) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(convention: Convention): Observable<Convention> {\n    return this.http.post<Convention>(environment.baseUrl2 + '/convention/add', convention);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<Convention> {\n    return this.http.put<Convention>(environment.baseUrl2 + '/convention/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<any[]> {\n    return this.http.get<any[]>(environment.baseUrl2 + '/convention/list');\n  }\n\n    /**\n   * get a paginated list of object\n   */\n  findAllByPage(data): Observable<any[]> {\n      let queryParams = {};\n       data['active']= (data['active'] == null) ? '' : data['active'];\n  \n      queryParams = { params: new HttpParams().set('page', data['page'])\n                                              .set('size', data['entries'])\n                                              .set('name', data['name'])\n                                              .set('active', data['active'])\n                                              .set('sort', data['sort']+','+data['order'])\n    };\n      return this.http.get<any[]>(environment.baseUrl2 + '/convention/p_list', queryParams);\n    }\n    \n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<any[]> {\n  return this.http.get<any[]>(environment.baseUrl2 + '/convention/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id) : Observable<any> {\n  return this.http.get<any>(environment.baseUrl2 + '/convention/enable/' + id);\n \n  }\n\n  /**\n   * disable a object\n   */\n  disable(id) : Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/convention/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/convention/detail/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n      return this.http.get<any>(environment.baseUrl2 + '/convention/active_name');\n    }\n}\n","import { Injectable, Type } from '@angular/core';\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Admission } from '../_models/admission.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdmissionService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n    *  POST: add a new object to the database \r\n    */\r\n  save(admission: Admission): Observable<Admission> {\r\n    return this.http.post<Admission>(environment.baseUrl2 + '/admission/add', admission);\r\n  }\r\n\r\n  /** \r\n   * PUT: update the object on the server. Returns the updated objet upon success. \r\n   */\r\n  update(admission: Admission): Observable<Admission> {\r\n    return this.http.put<Admission>(environment.baseUrl2 + '/admission/update/' + admission.id, admission);\r\n  }\r\n\r\n  /** \r\n   * DELETE: delete the hero from the server \r\n   */\r\n  delete(id: number): Observable<any> {\r\n    return this.http.delete<any>(environment.baseUrl2 + '/admission/delete/' + id);\r\n  }\r\n\r\n  /**\r\n   * get a list of object\r\n   */\r\n  findAll(data: object): Observable<any[]> {\r\n\r\n    let queryParams = {};\r\n    data['practician']= (data['practician'] == null) ? '' : data['practician'];\r\n    data['service']= (data['service'] == null) ? '' : data['service'];\r\n    data['act']= (data['act'] == null) ? '' : data['act'];\r\n\r\n    queryParams = {\r\n      params: new HttpParams().set('admissionNumber', data['admissionNumber'])\r\n      .set('firstName', data['firstName'])\r\n      .set('lastName', data['lastName'])\r\n      .set('patientExternalId', data['patientExternalId'])\r\n      .set('cellPhone', data['cellPhone'])\r\n      .set('cnamNumber', data['cnamNumber'])\r\n      .set('idCardNumber', data['idCardNumber'])\r\n      .set('practician', data['practician'])\r\n      .set('service', data['service'])\r\n      .set('act', data['act'])\r\n      .set('fromDate', data['fromDate'])\r\n      .set('toDate', data['toDate'])\r\n      .set('admissionStatus', data['admissionStatus'])\r\n      .set('size', data['size'])\r\n      .set('page', data['page'])\r\n      .set('sort', data['sort'] + ',' + data['order'])\r\n    };\r\n\r\n    return this.http.get<any[]>(environment.baseUrl2 + '/admission/p_list', queryParams);\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * get object by id\r\n   * @param id \r\n   */\r\n  findById(id: number): Observable<any> {\r\n    return this.http.get<any>(environment.baseUrl2 + '/admission/detail/' + id);\r\n  }\r\n\r\n\r\n  /**\r\n  * add a invoice\r\n  */\r\n  saveInvoice(data: object) {\r\n    return this.http.post(environment.baseUrl + '/admission/invoice/add', data);\r\n  }\r\n\r\n\r\n   /**\r\n   * get a list of object\r\n   */\r\n  findAdmissionQueue(data: object): Observable<any[]> {\r\n\r\n    let queryParams = {};\r\n    data['practician']= (data['practician'] == null) ? '' : data['practician'];\r\n    data['service']= (data['service'] == null) ? '' : data['service'];\r\n    data['act']= (data['act'] == null) ? '' : data['act'];\r\n    data['waitingRoom']= (data['waitingRoom'] == null) ? '' : data['waitingRoom'];\r\n\r\n    queryParams = {\r\n      params: new HttpParams().set('admissionNumber', data['admissionNumber'])\r\n      .set('firstName', data['firstName'])\r\n      .set('lastName', data['lastName'])\r\n      .set('patientExternalId', data['patientExternalId'])\r\n      .set('cellPhone', data['cellPhone'])\r\n      .set('cnamNumber', data['cnamNumber'])\r\n      .set('idCardNumber', data['idCardNumber'])\r\n      .set('practician', data['practician'])\r\n      .set('service', data['service'])\r\n      .set('act', data['act'])\r\n      .set('fromDate', data['fromDate'])\r\n      .set('toDate', data['toDate'])\r\n      .set('waitingRoom', data['waitingRoom'])\r\n      .set('size', data['size'])\r\n      .set('page', data['page'])\r\n      .set('sort', data['sort'] + ',' + data['order'])\r\n    };\r\n\r\n    return this.http.get<any[]>(environment.baseUrl2 + '/admission/queue/p_list', queryParams);\r\n\r\n  }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AdmissionService } from \"./../../_services/admission.service\";\nimport { Router } from \"@angular/router\";\nimport { AlertService } from \"./../../_utility/alert/alert.service\";\nimport { exit } from 'process';\n\n@Component({\n  selector: 'app-add-admission',\n  templateUrl: './add-admission.component.html',\n  styleUrls: ['./add-admission.component.css']\n})\nexport class AddAdmissionComponent implements OnInit {\n\n  /**\n   * patient id\n   */\n  patientId: number;\n\n  /**\n   * title to display\n   */\n  title = 'Nouvelle admission';\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private admissionService: AdmissionService,\n    private router: Router,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    \n    this.activatedRoute.params.subscribe(params => {\n      this.patientId = params.patientId;\n    })\n  }\n\n  /**\n   * add a new admission\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let admission = data.admission;\n    let action = data.action;\n\n    this.admissionService.save(admission).subscribe(admission => {\n          this.router.navigate(['/admission/list']);\n          this.alertService.success('Admission effectuée avec succès');\n    });\n  }\n}\n","<app-admission-form [patientId]=\"patientId\" [title]=\"title\"  (admissionEmitter)=\"save($event)\"></app-admission-form>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdmissionInvoice } from 'src/app/_models/admissionInvoice.model';\nimport { AdmissionInvoiceService } from 'src/app/_services/admission-invoice.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { AdmissionService } from \"./../../_services/admission.service\";\n\n@Component({\n  selector: 'app-add-invoice',\n  templateUrl: './add-invoice.component.html',\n  styleUrls: ['./add-invoice.component.css']\n})\nexport class AddInvoiceComponent implements OnInit {\n  \n  /**\n   * patient id\n   */\n  admissionId: number;\n\n  /**\n   * title to display\n   */\n  title = \"Nouvelle facture d'admission\";\n\n/**\n * the component name \n */\n  component: string;\n\n  /**\n   * \n   */\n  createdInvoice : AdmissionInvoice;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private alertService: AlertService,\n    private admissionInvoiceService: AdmissionInvoiceService\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n\n      this.admissionId = Number(params.admissionId);\n\n      if (isNaN(this.admissionId)) {\n        this.router.navigate(['/patient/list']);\n        this.alertService.error(\"Admission impossible car le patient n'existe pas\")\n      }\n\n    })\n\n    this.component=this.activatedRoute.snapshot.component['name'];\n\n  }\n\n  /**\n   * add a new admission\n   * @param data object\n   * \n   */\n  save(data) {\n    \n    let invoice = data.invoice;\n    let action = data.action;\n    \n    this.admissionInvoiceService.save(invoice).subscribe(invoice => {\n      this.router.navigate(['/admission/invoice/list']);\n      this.alertService.success('Facturation effectuée avec succès');\n    },\n    eroor => {\n      this.alertService.error('Une erreur est survenue, veillez recommenceer cette action!')\n    });\n\n  }\n\n}\n","<app-invoice-form [admissionId]=\"admissionId\" [title]=\"title\" [component]='component'  (invoiceEmitter)=\"save($event)\" [createdInvoice]=\"createdInvoice\"></app-invoice-form>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Act } from '../_models/act.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActService {\n\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(act: Act): Observable<Act> {\n    return this.http.post<Act>(environment.baseUrl2 + '/act/add', act);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<Act> {\n    return this.http.put<Act>(environment.baseUrl2 + '/act/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<any[]> {\n    return this.http.get<any[]>(environment.baseUrl2 + '/act/list');\n  }\n\n  /**\n * get a paginated list of object\n */\n  findAllByPage(data): Observable<any[]> {\n    let queryParams = {};\n    data['active'] = (data['active'] == null) ? '' : data['active'];\n\n    queryParams = {\n      params: new HttpParams().set('page', data['page'])\n        .set('size', data['entries'])\n        .set('name', data['name'])\n        .set('coding', data['coding'])\n        .set('coefficient', data['coefficient'])\n        .set('codeActe', data['codeActe'])\n        .set('category', data['category'])\n        .set('family', data['family'])\n        .set('active', data['active'])\n        .set('sort', data['sort'] + ',' + data['order'])\n    };\n    return this.http.get<any[]>(environment.baseUrl2 + '/act/p_list', queryParams);\n  }\n\n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<any[]> {\n    return this.http.get<any[]>(environment.baseUrl2 + '/act/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/act/enable/' + id);\n\n  }\n\n  /**\n   * disable a object\n   */\n  disable(id): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/act/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/act/detail/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/act/active_acts_name');\n  }\n\n  /**\n    * get object by criteria\n    * \n    */\n  findByCriteria(data): Observable<any[]> {\n    let queryParams = {};\n    data['category'] = (data['category'] == null) ? '' : data['category'];\n    data['family'] = (data['family'] == null) ? '' : data['family'];\n\n    queryParams = {\n      params: new HttpParams().set('name', data['name'])\n        .set('category', data['category'])\n        .set('group', data['family'])\n    };\n\n    return this.http.get<any[]>(environment.baseUrl2 + '/act/active_by_criteria', queryParams);\n  }\n\n  /**\n   * get object by bill id\n   * @param id \n   */\n  findByBill(id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/act/find-by-bill/' + id);\n  }\n\n}\n","import { Component, Input, OnInit, Output, EventEmitter, Injectable, ViewChild, ElementRef } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ValidateDate } from 'src/app/_utility/CustomValidators/date.validator';\nimport { PatientService } from 'src/app/_services/patient.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { dateInputFormat } from 'src/app/_utility/date/date-input-format';\nimport { dateOutputFormat } from 'src/app/_utility/date/date-output-format';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\nimport { AdmissionService } from \"./../../../_services/admission.service\";\nimport { Router } from \"@angular/router\";\nimport { NgbCalendar, NgbDateAdapter, NgbDateParserFormatter, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { I18n, CustomDatepickerI18n, CustomAdapter, CustomDateParserFormatter } from \"./../../../_utility/date/ngb-datepicker\";\nimport { InsuranceService } from \"./../../../_services/insurance.service\";\nimport { InsuranceSubscriberService } from \"./../../../_services/insurance-subscriber.service\";\nimport { InsuredService } from \"./../../../_services/insured.service\";\nimport { AdmissionInvoice } from 'src/app/_models/admissionInvoice.model';\nimport { Admission } from 'src/app/_models/admission.model';\nimport { AdmissionInvoiceService } from 'src/app/_services/admission-invoice.service';\nimport jsPDF from 'jspdf';\nimport { environment } from 'src/environments/environment';\nimport { ActService } from 'src/app/_services/act.service';\nimport { PracticianService } from 'src/app/_services/practician.service';\nimport { ConventionService } from 'src/app/_services/convention.service';\nimport { CashRegisterService } from 'src/app/_services/cash-register.service';\nimport { PaymentTypeService } from 'src/app/_services/payment-type.service';\n\n@Component({\n  selector: 'app-invoice-form',\n  templateUrl: './invoice-form.component.html',\n  styleUrls: ['./invoice-form.component.css'],\n  providers: [\n    I18n,\n    { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n },\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter }\n  ] // define custom NgbDatepickerI18n provider\n\n})\nexport class InvoiceFormComponent implements OnInit {\n\n  /**\n   *   form Group\n   */\n  form: FormGroup;\n\n  /**\n  * form submission action, it will get the value of the action to do\n  */\n  formAction = '';\n\n  /**\n   * invalid from controls\n   */\n  invalidFormControls: any;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  invoiceId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  admissionId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * child component output\n   */\n  @Output()\n  invoiceEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n    * date picker model\n    */\n  datePicker: NgbDateStruct;\n\n  /** \n   * the curent component\n  */\n  @Input()\n  component: string;\n\n  /**\n   * cash register compoenent  or not\n   */\n  cashRegisterComponent: boolean;\n\n  /**\n   * invoice component or not\n   */\n  invoiceComponent: boolean;\n\n  /**\n   * \n   */\n  updateInvoiceComponent: boolean;\n\n  /**\n   * define patient types options\n   */\n  patientTypes = [\n    { id: 'A', value: 'Assuré' },\n    { id: 'C', value: 'Comptant' },\n  ]\n\n  /**\n   * define patient insurances options\n   */\n  patientInsurances = [];\n\n  patient: Object;\n  acts: Object;\n  practicians: Object;\n  conventions: Object;\n  paymentTypes: Object;\n  cashRegisters: Object;\n\n  @Input()\n  invoice: AdmissionInvoice;\n\n  @Input()\n  createdInvoice: AdmissionInvoice;\n\n  admission: Admission;\n  partTakenCareOf: number;\n  patientPart: number = 0;\n  total: number;\n  discount: number = 0;\n  insured = null;\n  isCollected = false;\n\n  /**\n   * insurances form array\n   */\n  actFormGroup = new FormArray([]);\n\n  /**\n   * act inputs\n   */\n  actInputs = [];\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n\n  constructor(\n    private admissionService: AdmissionService,\n    private router: Router,\n    private alertService: AlertService,\n    private invoiceService: AdmissionInvoiceService,\n    private insuranceSubscriberService: InsuranceSubscriberService,\n    private patientService: PatientService,\n    private insuredService: InsuredService,\n    private actService: ActService,\n    private practicianService: PracticianService,\n    private conventionService: ConventionService,\n    private cashRegisterService: CashRegisterService,\n    private paymentTypeService: PaymentTypeService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.initForm();\n    this.actService.getIdAndName().subscribe(res => { this.acts = res; });\n    this.practicianService.getIdAndName().subscribe(res => { this.practicians = res; });\n    this.cashRegisterService.getIdAndName().subscribe(res => { this.cashRegisters = res; });\n    this.conventionService.getIdAndName().subscribe(res => { this.conventions = res; });\n    this.paymentTypeService.getIdAndName().subscribe(res => { this.paymentTypes = res; });\n    this.initAddAction();\n    this.initUpdateAction();\n    this.cashRegisterComponent = (this.component == 'AddCashOperationComponent') ? true : false;\n    this.invoiceComponent = (this.component == 'AddInvoiceComponent') ? true : false;\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      id: new FormControl(0),\n      admission: new FormControl(0),\n      admissionNumber: new FormControl({ value: '', disabled: true }),\n      patientExternalId: new FormControl({ value: '', disabled: true }),\n      patientName: new FormControl({ value: '', disabled: true }),\n      service: new FormControl({ value: '', disabled: true }),\n      invoiceDate: new FormControl(''),\n      patientType: new FormControl(null, Validators.required),\n      insurance: new FormControl(null),\n      subscriber: new FormControl({ value: '', disabled: true }),\n      coverRate: new FormControl(''),\n      consumableRate: new FormControl(0),\n      discountInPercentage: new FormControl(0),\n      discountInCfa: new FormControl(0),\n      total: new FormControl(0),\n      cashRegister: new FormControl(null),\n      // partTakenCareOfNumber: new FormControl(''),\n      patientPart: new FormControl(0),\n      partTakenCareOf: new FormControl(0),\n      // partTakenCareOfDate: new FormControl(''),\n      // accountNumber: new FormControl(''),\n      invoiceEdition: new FormControl(''),\n      convention: new FormControl(null),\n      paymentType: new FormControl(null)\n\n    });\n  }\n\n  /**\n   * init the form value when adding\n   */\n  initAddAction() {\n    if (this.admissionId) {\n\n      this.admissionService.findById(this.admissionId).subscribe(\n        admission => {\n          if (admission) {\n            this.form.get('admission').setValue(admission.id);\n            this.form.get('admissionNumber').setValue(admission.admissionNumber);\n            this.form.get('patientExternalId').setValue(admission.patientExternalId);\n            this.form.get('patientName').setValue(admission.patientFirstName + ' ' + admission.patientMaidenName + ' ' + admission.patientLastName);\n            this.form.get('service').setValue(admission.service);\n            this.form.get('invoiceDate').setValue(dateOutputFormat(new Date()));\n\n            this.insuredService.findByPatientId(admission.patient).subscribe(res => {\n              this.patientInsurances = res;\n            })\n\n          } else {\n            this.errorAction(\"facturation impossible car l'admission n'existe pas\", '/admission/list');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de l'ajout\", '/admission/list')\n        })\n    }\n\n  }\n\n  /**\n   * init this form value when updating\n   */\n  initUpdateAction() {\n\n    if (this.invoiceId) {\n\n      this.invoiceService.findById(this.invoiceId).subscribe(\n        invoice => {\n          if (invoice) {\n            if (invoice.billStatus == 'C') this.isCollected = true;\n            this.insuredService.findByPatientId(invoice.patientId).subscribe(res => {\n              this.patientInsurances = res;\n            });\n\n            this.form.get('id').setValue(invoice.id);\n            this.form.get('admission').setValue(invoice.admissionId);\n            this.form.get('admissionNumber').setValue(invoice.billNumber);\n            this.form.get('patientExternalId').setValue(invoice.patientExternalId);\n            this.form.get('patientName').setValue(invoice.patientFirstName + ' ' + invoice.patientMaidenName + ' ' + invoice.patientLastName);\n            this.form.get('service').setValue(invoice.serviceName);\n            this.form.get('invoiceDate').setValue(dateOutputFormat(invoice.billDate));\n\n            if (this.cashRegisterComponent) {\n              let pt = (invoice.patientType == 'C') ? 'Client comptant' : 'Assuré';\n              this.form.get('patientType').setValue(pt);\n              this.form.get('convention').setValue(invoice.convention);\n              this.form.get('insurance').setValue(invoice.insuranceName);\n            } else {\n              this.form.get('patientType').setValue(invoice.patientType);\n              this.form.get('convention').setValue(invoice.conventionId);\n              this.form.get('insurance').setValue(invoice.insuranceId);\n            }\n\n            \n            this.form.get('coverRate').setValue(invoice.coverage);\n            this.form.get('subscriber').setValue(invoice.subscriberName);\n            this.form.get('discountInCfa').setValue(invoice.discountInCfa);\n            this.form.get('discountInPercentage').setValue(invoice.discountInPercentage);\n            this.form.get('patientPart').setValue(invoice.patientPart);\n            this.form.get('partTakenCareOf').setValue(invoice.partTakenCareOf);\n            this.form.get('total').setValue(invoice.totalAmount);\n            this.form.get('cashRegister').setValue(invoice.cashRegister);\n\n            this.actService.findByBill(invoice.id).subscribe(res => {\n\n              if (res.length > 0) {\n                for (let index = 0; index < res.length; index++) {\n                  this.actRowAdd();\n\n                  if (this.cashRegisterComponent) {\n                    let practicianFullName = res[index].practicianFirstName + \" \" + res[index].practicianLastName;\n                    this.actFormGroup.controls[index].get('practician').setValue(practicianFullName);\n                    this.actFormGroup.controls[index].get('act').setValue(res[index].actName);\n                    this.actFormGroup.controls[index].get('cost').setValue(res[index].actCost);\n                  } else {\n                    this.actFormGroup.controls[index].get('practician').setValue(res[index].practician);\n                    this.actFormGroup.controls[index].get('act').setValue(res[index].act);\n                    this.onActSelect(index);\n                  }\n\n                  this.actFormGroup.controls[index].get('admission').setValue(invoice.admissionId);\n\n                }\n              }\n            });\n          } else {\n            this.errorAction(\"Modification impossible car la facture n'existe pas\", '/admission/invoice/list');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de la modification\", '/admission/invoice/list');\n        })\n    }\n  }\n\n  /**\n   * get the bill DTO\n   */\n  getBillDto() {\n\n    let admission = this.form.get('admission').value;\n    let data = {\n      \"id\": this.form.get(\"id\").value,\n      \"admission\": admission,\n      \"billStatus\": \"R\",\n      \"billType\": \"A\",\n      \"convention\": this.form.get(\"convention\").value,\n      \"discountInCfa\": this.form.get(\"discountInCfa\").value,\n      \"discountInPercentage\": this.form.get(\"discountInPercentage\").value,\n      \"insured\": this.insured,\n      \"patientType\": this.form.get(\"patientType\").value,\n      \"acts\": this.actFormGroup.value\n    }\n\n    return data;\n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the object\n    */\n  save() {\n    // reset alerts on submit\n    this.alertService.clear();\n    // //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    let validActs = true;\n    let acts = this.actFormGroup.value;\n\n    if (this.form.valid) {\n\n      if (acts.length > 0) {\n        if (this.actFormGroup.valid) {\n          this.invoiceEmitter.emit({ invoice: this.getBillDto(), action: this.formAction });\n        } else {\n          this.alertService.error(\"Veillez renseigner correctement les informations sur l'(les) act(s)\");\n         return null;\n        }\n      } else {\n        this.errorAction(\"Veillez selectionner des acts a facturer\", 'admission/add-invoice/' + this.admissionId);\n        return null;\n      }\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n\n  /**\n   * \n   * @param selectedOption \n   */\n  setInsuranceData() {\n    let insurance = this.form.get(\"insurance\").value;\n    let subscriber = this.patientInsurances.find(e => e.insuranceId === insurance)['subscriberName'];\n    let coverRate = this.patientInsurances.find(e => e.insuranceId === insurance)['coverage'];\n    this.insured = this.patientInsurances.find(e => e.insuranceId === insurance)['id'];\n    this.form.get('coverRate').setValue(coverRate);\n    this.form.get('subscriber').setValue(subscriber);\n  }\n\n  /**\n   * set the consumable rate\n   */\n  calculConsommableRate() {\n    let coverRate = this.form.get('coverRate').value;\n    let consumableRate = 100 - coverRate;\n    this.form.get('consumableRate').setValue(consumableRate);\n  }\n\n  /**\n   * get the bill total amount\n   */\n  calculInvoiceCost() {\n    let data = this.getBillDto();\n    this.invoiceService.getCost(data).subscribe(res => {\n      this.form.get(\"partTakenCareOf\").setValue(res.partTakenCareOf);\n      this.form.get(\"patientPart\").setValue(res.patientPart);\n      this.form.get(\"total\").setValue(res.totalAmount);\n    })\n  }\n\n  /**\n   * get the form submission action\n   * @param action : string\n   */\n  actionToDo(action) {\n    this.formAction = action;\n  }\n\n  /**\n   * action to Do when  ckick on cancel button\n   */\n  cancelAction() {\n    this.errorAction('Action annulée', '/admission/invoice/list');\n  }\n\n  /**\n   * create dynamic insured inputs\n   */\n  actRowAdd() {\n    const group = new FormGroup({\n      practician: new FormControl('', Validators.required),\n      act: new FormControl('', Validators.required),\n      cost: new FormControl({ value: 0, disabled: true }),\n      admission: new FormControl(this.admissionId)\n    });\n\n    this.actInputs.push('selectedInsurance' + this.actFormGroup.length);\n    this.actFormGroup.push(group);\n  }\n\n  /**\n   * \n   * @param row get act's information on act change\n   */\n  onActSelect(row) {\n    let data = {\n      \"act\" : this.actFormGroup.controls[row].get('act').value,\n      \"convention\" : this.form.get('convention').value\n    } \n\n      this.invoiceService.getActCost(data).subscribe(res => {\n        this.actFormGroup.controls[row].get('cost').setValue(res);\n    });\n\n  }\n\n  /**\n    * remove the correponding row from the FormGroup\n    * @param row remove an act row from the DOM\n    */\n  deleteActRow(row) {\n    this.actFormGroup.removeAt(row);\n  }\n\n  /**\n   * collect a bill\n   */\n  collectAmount() {\n\n    this.alertService.clear();\n\n    if (this.isCollected) {\n      this.errorAction('cette facture a deja ete encaisser', '/admission/bill/invoice')\n    } else {\n\n      this.form.get(\"cashRegister\").clearValidators();\n      this.form.get(\"paymentType\").clearValidators();\n      this.form.get(\"cashRegister\").setValidators([Validators.required]);\n      this.form.get(\"paymentType\").setValidators([Validators.required]);\n      this.form.get(\"cashRegister\").updateValueAndValidity();\n      this.form.get(\"paymentType\").updateValueAndValidity();\n\n      this.invalidFormControls = invalidformControls(this.form);\n\n      let cashRegister = this.form.get(\"cashRegister\").value\n      let paymentType = this.form.get(\"paymentType\").value\n\n      let data = {\n        \"cashRegister\": cashRegister,\n        \"bill\": this.form.get(\"id\").value,\n        \"paymentType\": paymentType,\n      }\n\n      if (this.form.valid) {\n        this.invoiceService.collectAmount(data).subscribe(res => {\n          this.alertService.success('Facture encaissé !');\n          this.router.navigate([\"/admission/invoice/list\"]);\n        });\n      } else {\n        this.alertService.error('Formulaire non valide');\n      }\n    }\n  }\n\n  /**\n   *  print the invoice in a jspdf doc \n   */\n  public generateInvoice(): void {\n\n    //   let doc = new jsPDF('p', 'pt', 'a4');\n\n    //   let patientType = this.createdInvoice.patientType == \"a\" ? \"Patient assuré \": \"Client comptant\";\n\n    //   let discount = this.createdInvoice.discountInCfa ? this.createdInvoice.discountInCfa : this.createdInvoice.discountInPercentage ;\n\n    //   let docHead = ' <table style=\"font-size: 14px\"><tr><td><img src=\"'+ environment.logo +'\" alt=\"Logo\" width=\"100\"></td>' +\n    //     '<td class=\"text-bold text-nowrap\"> Numero patient : ' + this.admission.patient.patientExternalId + '</td></tr></table>';\n\n    //    let info = '<table class=\"ml-2 mt-5\" style=\"width: 560px; font-size: 12px;\"><tr><td class=\"text-nowrap\"> <strong>Facture N°: </strong> ' + 'FA-012' + this.createdInvoice.invoiceNumber + '</td>' +\n    //       '<td  class=\"text-nowrap pl-5\"> <strong>Date: </strong> ' + dateOutputFormat(this. createdInvoice.date) + '</td>' +\n    //       '</tr><tr><td  class=\"text-nowrap text-uppercase\"> <strong>Patient:&nbsp; &nbsp;</strong>' + this.admission.patient.firstName +\"&nbsp;&nbsp;\"+ this.admission.patient.lastName + '</td>' +\n    //       '<td  class=\"text-nowrap pl-5\"> <strong>contact: </strong>' +  this.admission.patient.contact1 + '</td>' +\n    //       '</tr><tr><td  class=\"text-nowrap\"> <strong>Type de client: </strong>' + patientType + '</td>' +\n    //       '<td  class=\"text-nowrap pl-5\"><strong>Etab.payeur '+ '' +' </strong></td></tr>' +\n    //       '<tr><td class=\"text-nowrap\"><strong>Matricule assuré: '+ '' +' </strong></td><td></td></tr></table>';\n\n    //   let data = '<table class=\"table table-bordered mt-2 ml-2 table-sm\" style=\"font-size: 12px; width:560px; border-bottom: none; border-left: none;\"><thead class=\"text-center\" style=\"background-color: #DCDCDC;\">' +\n    //       '<th>Date</th><th>Service</th><th>Medecin</th><th>Acte</th><th>Coût</th></thead>' +\n    //       '<tbody><tr><td>' + dateOutputFormat(this.admission.admissionDate )+'</td><td class=\"text-capitalized\">' + this.admission.service.name +'</td>' +\n    //       '<td class=\"text-capitalized\">' + this.admission.doctor.name +'</td><td class=\"text-capitalized\">' + this.admission.act.name +'</td><td class=\"text-nowrap\">' + this.admission.act.price + ' fcfa</td></tr>'+\n    //       '<tr style=\"border-left: none;\"><td colspan=\"3\" style=\"border: none;\"></td><td colspan=\"1\">Part&nbsp;PEC</td><td colspan=\"1\">' + this.createdInvoice.partTakenCareOf +' fcfa</td></tr>' +\n    //       '<tr style=\"border-left: none;\"><td colspan=\"3\" style=\"border: none;\"></td><td colspan=\"1\">Part&nbsp;consommable</td><td colspan=\"1\" class=\"text-danger text-bold\">' + this.createdInvoice.patientPart + ' fcfa</td>' + '</td></tr>' +\n    //       '<tr style=\"border-left: none;\"><td colspan=\"3\" style=\"border: none;\"></td><td colspan=\"1\">Remise</td><td colspan=\"1\">' + discount + '</td></tr>' +\n    //       '<tr style=\"border-left: none;\"><td colspan=\"3\" style=\"border: none;\"></td><td colspan=\"1\">Total</td><td colspan=\"1\" class=\"text-bold\">' + this.createdInvoice.total + ' fcfa </td></tr>' +\n    //       '</tbody></table>';\n\n    //  let docFoot = '<div style=\"width:540px; text-align:center; border-top:1px solid gray; padding-top:2px; font-size:10px; color:gray\">' + environment.documentFooter + '</div>';\n\n    //  let  invoiceInfo = '<div style=\"min-height: 750px;\">' + docHead + info + data +'</div>' +docFoot;\n\n    //   doc.html(invoiceInfo, {\n    //     callback: function (doc) {\n    //       doc.output('dataurlnewwindow');\n    //     },\n    //     x: 10,\n    //     y: 10\n    //   });\n\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"save()\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"mr-auto p-2 col-md-4\">\n                    <h3>{{title}}</h3>\n                </div>\n                <div class=\"col-md-4\"  *ngIf=\"cashRegisterComponent\">\n                  <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <ng-select formControlName=\"cashRegister\"\n                                placeholder=\"Caisse\">\n                                <ng-option *ngFor=\"let cashRegister of cashRegisters\"\n                                    [value]=\"cashRegister.id\">\n                                    {{cashRegister.name}}\n                                </ng-option>\n                            </ng-select>\n                            <span class=\"text-danger\"\n                                    *ngIf=\"invalidFormControls && invalidFormControls.cashRegister\">\n                                    ce champ doit renseigné \n                                </span>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <ng-select formControlName=\"paymentType\"\n                                placeholder=\"Type de payement\">\n                                <ng-option *ngFor=\"let type of paymentTypes\"\n                                    [value]=\"type.id\">\n                                    {{type.name}}\n                                </ng-option>\n                            </ng-select>\n                            <span class=\"text-danger\"\n                                    *ngIf=\"invalidFormControls && invalidFormControls.paymentType\">\n                                    ce champ doit renseigné\n                                </span>\n                        </div>\n                      </div>\n                  </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-4 col-md-6 col-sm-12 \">\n                            <button class=\"btn btn-block btn-success btn-sm font-weight-bold text-white text-nowrap\"\n                                *ngIf=\"!cashRegisterComponent\" (click)=\"actionToDo('save')\">\n                                Valider\n                            </button>\n                            <div *ngIf=\"cashRegisterComponent\">\n                                <button *ngIf=\"!isCollected\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold text-white text-nowrap\"\n                                (click)=\"collectAmount()\">\n                                Encaisser\n                            </button>\n                            </div>\n                           \n                        </div>\n                        <div class=\"col-lg-4 col-md-6 col-sm-12\" *ngIf=\"updateInvoiceComponent\">\n                            <div class=\"btn btn-block btn-primary btn-sm font-weight-bold text-white text-nowrap\"\n                                data-toggle=\"modal\" data-target=\".bd-example-modal-lg\">\n                                Editer\n                            </div>\n                        </div>\n                        <div class=\" col-lg-4 col-md-6 col-sm-12\">\n                            <span class=\"btn btn-block btn-danger btn-sm font-weight-bold text-white text-nowrap\"\n                                (click)=\"cancelAction()\">Annuler</span>\n                        </div>\n                    </div>\n                    <div class=\"form-check form-check-inline \">\n                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"invoiceEdition\"\n                            id=\"invoiceEdition1\" value=\"courtier\" checked>\n                        <label class=\"form-check-label\" for=\"invoiceEdition1\">\n                            Edition courtier\n                        </label>\n                    </div>\n                    <div class=\"form-check form-check-inline\">\n                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"invoiceEdition\"\n                            id=\"invoiceEdition2\" value=\"adherant\">\n                        <label class=\"form-check-label\" for=\"invoiceEdition2\">\n                            Edition adherant\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"card card-outline card-secondary\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label for=\"invoiceDate\">Date Facture:</label>\n                                <div class=\"input-group  input-group-sm\">\n                                    <input formControlName=\"invoiceDate\" class=\"form-control\" placeholder=\"jj-mm-AAAA\"\n                                        ngbDatepicker #d=\"ngbDatepicker\" disabled=\"{{cashRegisterComponent}}\">\n                                    <div class=\"input-group-append\">\n                                        <span class=\"input-group-text\">\n                                            <i class=\"far fa-calendar-alt\" (click)=\"d.toggle()\"></i>\n                                        </span>\n                                    </div>\n                                </div>\n                                <span class=\"text-danger\"\n                                    *ngIf=\"invalidFormControls && invalidFormControls.invoiceDate\">\n                                    ce champ doit renseigné au format jj/mm/aaaa\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label for=\"admissionNumber\">N° Admission</label>\n                                <div class=\"input-group input-group-sm\">\n                                    <input type=\"text\" formControlName=\"admissionNumber\" class=\"form-control\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label for=\"patientExternalId\">N° Patient</label>\n                                <div class=\"input-group input-group-sm\">\n                                    <input type=\"text\" formControlName=\"patientExternalId\" class=\"form-control\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"patientName\">Nom du Patient</label>\n                                <div class=\"input-group input-group-sm\">\n                                    <input type=\"text\" formControlName=\"patientName\"\n                                        class=\"form-control text-capitalize\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\" col-md-3\">\n                            <div class=\"form-group\">\n                                <div class=\"input-group-sm\">\n                                    <label for=\"service\">Service</label>\n                                    <input type=\"text\" class=\"form-control text-capitalize\" formControlName=\"service\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-lg-2 col-md-3\">\n                            <div class=\"input-group-sm\">\n                                <label for=\"patientType\">Type de patient</label>\n                                <span class=\"text-danger\">*</span>\n                                <ng-select formControlName=\"patientType\" *ngIf=\"!cashRegisterComponent\">\n                                    <ng-option *ngFor=\"let type of patientTypes\" [value]=\"type.id\">\n                                        {{type.value}}\n                                    </ng-option>\n                                </ng-select>\n                                <div class=\"form-group\" *ngIf=\"cashRegisterComponent\">\n                                    <div class=\"input-group-sm\">\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"patientType\"\n                                            disabled=\"true\">\n                                    </div>\n                                </div>\n                                <span class=\"text-danger\"\n                                    *ngIf=\"invalidFormControls && invalidFormControls.patientType\">ce\n                                    champ doit être renseigné\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"input-group-sm\">\n                                <label for=\"insurance\">Assurance / mutuelle</label>\n                                <ng-select formControlName=\"insurance\" (change)=\"setInsuranceData()\"\n                                    *ngIf=\"!cashRegisterComponent\">\n                                    <ng-option *ngFor=\"let insurance of patientInsurances\"\n                                        [value]=\"insurance.insuranceId\">\n                                        {{insurance.insuranceName}}\n                                    </ng-option>\n                                </ng-select>\n                                <div class=\"form-group\" *ngIf=\"cashRegisterComponent\">\n                                    <div class=\"input-group-sm\">\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"insurance\"\n                                            disabled=\"true\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <div class=\"input-group-sm\">\n                                    <label for=\"subscriber\">Etablissement garant</label>\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"subscriber\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-1 col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"coverRate\">T. couv (%)</label>\n                                <div class=\"input-group input-group-sm\">\n                                    <input type=\"text\" formControlName=\"coverRate\" class=\"form-control\"\n                                        [attr.disabled]=\"cashRegisterComponent? true: null\">\n                                    <span class=\"text-danger\"\n                                        *ngIf=\"invalidFormControls && invalidFormControls.coverRate\">\n                                        le taux de couverture doit être un nombre entier <=100 </span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-1 col-md-3\">\n                            <div class=\"form-group\">\n                                <label for=\"consumableRate\">T. cons (%)</label>\n                                <div class=\"input-group input-group-sm\">\n                                    <input type=\"text\" formControlName=\"consumableRate\" class=\"form-control text-bold \"\n                                        disabled=\"true\" value=\"{{calculConsommableRate()}}\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\" *ngIf=\"!cashRegisterComponent\">\n                                <label for=\"convention\">Convention</label>\n                                <ng-select formControlName=\"convention\" data-placeholder=\"Selectionner une convention\">\n                                    <ng-option *ngFor=\"let convention of conventions\" [value]=\"convention.id\">\n                                        {{convention.name}}</ng-option>\n                                </ng-select>\n                            </div>\n\n                            <div class=\"form-group\" *ngIf=\"cashRegisterComponent\">\n                                <label for=\"convention\"> Convention </label>\n                                <div class=\"input-group-sm\">\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"convention\"\n                                        disabled=\"true\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-7\">\n                            <div *ngFor=\"let control of actFormGroup.controls; let index = index;\">\n                                <div class=\"items\" id=\"{{'item_'+ index}}\">\n                                    <ng-container [formGroup]=\"control\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-4\">\n                                                <div class=\"form-group\" *ngIf=\"!cashRegisterComponent\">\n                                                    <label for=\"act\"> Acte </label>\n                                                    <span class=\"text-danger\">*</span>\n                                                    <ng-select formControlName=\"act\"\n                                                        data-placeholder=\"Selectionner un acte\"\n                                                        (change)=\"onActSelect(index)\">\n                                                        <ng-option *ngFor=\"let act of acts\" [value]=\"act.id\">\n                                                            {{act.name}}</ng-option>\n                                                    </ng-select>\n                                                </div>\n                                                <div class=\"form-group\" *ngIf=\"cashRegisterComponent\">\n                                                   <label for=\"act\"> Acte </label>\n                                                    <div class=\"input-group-sm\">\n                                                        <input type=\"text\" class=\"form-control\" formControlName=\"act\"\n                                                            disabled=\"true\">\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md-4\">\n                                                <div class=\"form-group\" *ngIf=\"!cashRegisterComponent\">\n                                                    <label for=\"practician\"> Practicien </label>\n                                                    <span class=\"text-danger\">*</span>\n                                                    <ng-select formControlName=\"practician\"\n                                                        data-placeholder=\"Selectionner un practicien\">\n                                                        <ng-option *ngFor=\"let practician of practicians\"\n                                                            [value]=\"practician.userId\">\n                                                            {{practician.userFirstName+\" \"+ practician.userLastName}}\n                                                        </ng-option>\n                                                    </ng-select>\n                                                </div>\n                                                <div class=\"form-group\" *ngIf=\"cashRegisterComponent\">\n                                                    <label for=\"practician\"> Practicien </label>\n                                                    <div class=\"input-group-sm\">\n                                                        <input type=\"text\" class=\"form-control\" formControlName=\"practician\"\n                                                            disabled=\"true\">\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md-3\">\n                                                <div class=\"form-group\">\n                                                    <label for=\"cost\">Coût</label>\n                                                    <div class=\"input-group input-group-sm\">\n                                                        <input *ngIf=\"!invoiceId\" type=\"text\" formControlName=\"cost\"\n                                                            class=\"form-control text-bold \" disabled=\"true\">\n                                                        <input *ngIf=\"invoiceId\" type=\"text\" formControlName=\"cost\"\n                                                            class=\"form-control text-bold \" disabled=\"true\">\n                                                        <span class=\"ml-2\"></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md-1\" *ngIf=\"!cashRegisterComponent\">\n                                                <span class=\"btn btn-danger btn-md mt-4\" id=\"{{index}}\"\n                                                    (click)=\"deleteActRow(index)\"><i class=\"fa fa-trash\"></i></span>\n                                            </div>\n                                        </div>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class=\"row\" *ngIf=\"!cashRegisterComponent\">\n                                <div class=\"col-md-2\">\n                                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"actRowAdd()\">Ajouter act</button>\n                                </div>\n                                <div class=\"col-md-2\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"calculInvoiceCost()\">Calcul part</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-5\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-4 col-md-12\">\n                                    <div class=\"form-group\">\n                                        <label for=\"discountInPercentage\">Remise en %</label>\n                                        <div class=\"input-group input-group-sm\">\n                                            <input type=\"text\" formControlName=\"discountInPercentage\"\n                                                class=\"form-control\"\n                                                [attr.disabled]=\"cashRegisterComponent? true: null\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-4 col-md-12\">\n                                    <div class=\"form-group\">\n                                        <label for=\"discountInCfa\">Remise en fcfa</label>\n                                        <div class=\"input-group input-group-sm\">\n                                            <input type=\"text\" formControlName=\"discountInCfa\" class=\"form-control\"\n                                                [attr.disabled]=\"cashRegisterComponent? true: null\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"col-md-4\">\n                                    <div class=\"form-group\">\n                                        <label for=\"partTakenCareOfNumber\">N° PEC</label>\n                                        <div class=\"input-group input-group-sm\">\n                                            <input type=\"text\" formControlName=\"partTakenCareOfNumber\"\n                                                class=\"form-control\">\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <div class=\"col-md-4\">\n                                    <div class=\"form-group\">\n                                        <label for=\"partTakenCareOf\">Part PEC</label>\n                                        <div class=\"input-group input-group-sm\">\n                                            <input *ngIf=\"!invoiceId\" type=\"text\" formControlName=\"partTakenCareOf\"\n                                                class=\"form-control text-bold \" disabled=\"true\">\n                                            <input *ngIf=\"invoiceId\" type=\"text\" formControlName=\"partTakenCareOf\"\n                                                class=\"form-control text-bold \" disabled=\"true\">\n                                            <span class=\"ml-2\"></span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-4\">\n                                    <div class=\"form-group\">\n                                        <label for=\"patientPart\">Part adherant</label>\n                                        <div class=\"input-group input-group-sm\">\n                                            <input *ngIf=\"!invoiceId\" type=\"text\" formControlName=\"patientPart\"\n                                                class=\"form-control text-bold text-success \" disabled=\"true\">\n                                            <input *ngIf=\"invoiceId\" type=\"text\" formControlName=\"patientPart\"\n                                                class=\"form-control text-bold text-success \" disabled=\"true\">\n                                            <span class=\"ml-2\"></span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"col-md-4\">\n                                    <div class=\"form-group\">\n                                        <label for=\"partTakenCareOfDate\">Date PEC</label>\n                                        <div class=\"input-group  input-group-sm\">\n                                            <input formControlName=\"partTakenCareOfDate\" class=\"form-control\"\n                                                placeholder=\"jj-mm-AAAA\">\n                                            <div class=\"input-group-append\">\n                                                <span class=\"input-group-text\">\n                                                    <i class=\"far fa-calendar-alt\"></i>\n                                                </span>\n                                            </div>\n                                            <span class=\"text-danger\"\n                                                *ngIf=\"invalidFormControls && invalidFormControls.partTakenCareOfDate\">\n                                                ce champ doit renseigné au format jj/mm/aaaa\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <!-- <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"accountNumber\">N° compte comptable</label>\n                                        <div class=\"input-group input-group-sm\">\n                                            <input type=\"text\" formControlName=\"accountNumber\" class=\"form-control\">\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"total\">Total (fcfa)</label>\n                                        <div class=\"input-group input-group-sm\">\n                                            <input *ngIf=\"!invoiceId\" type=\"text\" formControlName=\"total\"\n                                                class=\"form-control text-bold text-danger\" disabled=\"true\">\n                                            <input *ngIf=\"invoiceId\" type=\"text\" formControlName=\"total\"\n                                                class=\"form-control text-bold text-danger\" disabled=\"true\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- hidden area -->\n    </div>\n</form>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams  } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\nimport {Service} from \"./../_models/service.model\";\r\nimport { Observable } from 'rxjs';\r\nimport { query } from '@angular/animations';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class medicalServiceService {\r\n\r\n  constructor( private http: HttpClient) { }\r\n\r\n  /**\r\n   *  POST: add a new object to the database \r\n   */\r\n  save(service: Service): Observable<Service> {\r\n    return this.http.post<Service>(environment.baseUrl2 + '/service/add', service);\r\n  }\r\n\r\n  /** \r\n   * PUT: update the object on the server. Returns the updated objet upon success. \r\n   */\r\n  update(data): Observable<Service> {\r\n    return this.http.put<Service>(environment.baseUrl2 + '/service/update/' + data.id, data);\r\n  }\r\n\r\n  /**\r\n   * get a list of object\r\n   */\r\n  findAll(): Observable<Service[]> {\r\n    return this.http.get<Service[]>(environment.baseUrl2 + '/service/list');\r\n  }\r\n\r\n    /**\r\n   * get a paginated list of object\r\n   */\r\n  findAllByPage(data): Observable<Service[]> {\r\n      let queryParams = {};\r\n       data['active']= (data['active'] == null) ? '' : data['active'];\r\n  \r\n      queryParams = { params: new HttpParams().set('page', data['page'])\r\n                                              .set('size', data['entries'])\r\n                                              .set('name', data['name'])\r\n                                              .set('active', data['active'])\r\n                                              .set('sort', data['sort']+','+data['order'])\r\n    };\r\n      return this.http.get<Service[]>(environment.baseUrl2 + '/service/p_list', queryParams);\r\n    }\r\n    \r\n  /**\r\n   * get a list of active object\r\n   */\r\n  findActive(): Observable<Service[]> {\r\n  return this.http.get<Service[]>(environment.baseUrl2 + '/service/active_list');\r\n\r\n  }\r\n\r\n  /**\r\n   * enable a object\r\n   */\r\n  enable(id) : Observable<Service> {\r\n  return this.http.get<Service>(environment.baseUrl2 + '/service/enable/' + id);\r\n \r\n  }\r\n\r\n  /**\r\n   * disable a object\r\n   */\r\n  disable(id) : Observable<Service> {\r\n    return this.http.get<Service>(environment.baseUrl2 + '/service/disable/' + id);\r\n  }\r\n\r\n  /**\r\n   * get object by id\r\n   * @param id \r\n   */\r\n  findById(id: number): Observable<Service> {\r\n    return this.http.get<Service>(environment.baseUrl2 + '/service/detail/' + id);\r\n  }\r\n\r\n  /**\r\n   * get a list of object\r\n   */\r\n  getIdAndName(): Observable<any> {\r\n      return this.http.get<any>(environment.baseUrl2 + '/service/active_services_name');\r\n    }\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddAdmissionComponent } from \"./add-admission/add-admission.component\";\nimport { UpdateAdmissionComponent } from \"./update-admission/update-admission.component\";\nimport { ListAdmissionComponent } from \"./list-admission/list-admission.component\";\nimport { AddInvoiceComponent } from \"./add-invoice/add-invoice.component\";\nimport { UpdateInvoiceComponent } from \"./update-invoice/update-invoice.component\";\nimport { ListInvoiceComponent } from \"./list-invoice/list-invoice.component\";\n\nconst routes: Routes = [\n  { path: 'add/:patientId', component:AddAdmissionComponent },\n  { path: 'update/:id', component:UpdateAdmissionComponent },\n  { path: 'list', component:ListAdmissionComponent },\n  { path: 'add-invoice/:admissionId', component:AddInvoiceComponent },\n  { path: 'update-invoice/:id', component:UpdateInvoiceComponent },\n  { path: 'invoice/list', component:ListInvoiceComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdmissionRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdmissionInvoiceService } from 'src/app/_services/admission-invoice.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-update-invoice',\n  templateUrl: './update-invoice.component.html',\n  styleUrls: ['./update-invoice.component.css']\n})\nexport class UpdateInvoiceComponent implements OnInit {\n\n  \n  /**\n  * admission id \n  */\n invoiceId :  number;\n  \n /**\n  * title to display\n  */\n title = \"Modification d'une facture\";\n \n\n constructor(\n   private router: Router,\n   private activatedRoute: ActivatedRoute,\n   private invoiceService: AdmissionInvoiceService,\n   private alertService: AlertService\n ) { }\n\n ngOnInit(): void {\n   this.activatedRoute.params.subscribe(params=>{\n      this.invoiceId = params.id;\n   })\n }\n\n /**\n  * update existing incoice\n  * @param data object\n  */\n save(data) {\n  \n   let invoice = data.invoice;\n   let action = data.action;\n   \n   this.invoiceService.update(invoice).subscribe(res => {\n         this.router.navigate(['/admission/invoice/list']);\n         this.alertService.success('Facture modifiée avec succès');\n   });\n\n }\n\n}\n","<app-invoice-form [invoiceId]=\"invoiceId\"  [title]=\"title\" (invoiceEmitter)=\"save($event)\"></app-invoice-form>\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Practician } from '../_models/practician.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PracticianService {\n\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(practician){\n    return this.http.post<any>(environment.baseUrl2 + '/practician/add',  practician  );\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<Practician> {\n\n    return this.http.put<Practician>(environment.baseUrl2 + '/practician/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll() {\n    return this.http.get<any[]>(environment.baseUrl2 + '/practician/list');\n  }\n\n  /**\n * get a paginated list of object\n */\n  findAllByPage(data) : Observable<any[]>{\n    let queryParams = {};\n\n    data['service'] = (data['service'] == null) ? '' : data['service'];\n    data['speciality'] = (data['speciality'] == null) ? '' : data['speciality'];\n    data['active'] = (data['active'] == null) ? '' : data['active'];\n\n    queryParams = {\n      params: new HttpParams().set('firstName', data['firstName'])\n        .set('lastName', data['lastName'])\n        .set('phoneContact', data['phoneContact'])\n        .set('practicianNumber', data['practicianNumber'])\n        .set('speciality', data['speciality'])\n        .set('service', data['service'])\n        .set('active', data['active'])\n        .set('sort', data['sort'] + ',' + data['order'])\n        .set('page', data['page'])\n        .set('size', data['entries'])\n    };\n    return this.http.get<any[]>(environment.baseUrl2 + '/practician/p_list', queryParams);\n  }\n\n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<any[]> {\n    return this.http.get<any[]>(environment.baseUrl2 + '/practician/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/practician/enable/' + id);\n\n  }\n\n  /**\n   * disable a object\n   */\n  disable(id): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/practician/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/practician/detail/' + id);\n  }\n\n/**\n   * get collection of practician  by service\n   * @param service \n   */\n  findByService(service: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/practician/find-by-service/' + service);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/practician/active_practicians_name');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-invoice',\n  templateUrl: './list-invoice.component.html',\n  styleUrls: ['./list-invoice.component.css']\n})\nexport class ListInvoiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-invoice-list></app-invoice-list>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { NgbDate, NgbCalendar, NgbDateParserFormatter, NgbDateAdapter, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { I18n, CustomDatepickerI18n, CustomAdapter, CustomDateParserFormatter } from \"./../../../_utility/date/ngb-datepicker\";\nimport { AdmissionInvoice} from \"./../../../_models/admissionInvoice.model\";\nimport { AdmissionInvoiceService } from \"./../../../_services/admission-invoice.service\";\nimport { deleteRow } from 'src/app/_utility/delete-row';\nimport { InsuranceService } from \"./../../../_services/insurance.service\";\nimport { InsuranceSubscriberService } from \"./../../../_services/insurance-subscriber.service\";\nimport { ActService } from 'src/app/_services/act.service';\nimport { PatientService } from 'src/app/_services/patient.service';\n\n@Component({\n  selector: 'app-invoice-list',\n  templateUrl: './invoice-list.component.html',\n  styleUrls: ['./invoice-list.component.css'],\n  providers: [\n    I18n,\n    { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n },\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter }\n  ] // define custom NgbDatepickerI18n provider\n})\nexport class InvoiceListComponent implements OnInit {\n\n  /**\n     * search formGroup\n     */\n    public form: FormGroup;\n\n    /**\n     * entries formGroup\n     */\n    public entryForm: FormGroup;\n  \n    /**\n     * init first page\n     */\n    public page = 0;\n  \n    /**\n     * number of item par page default 10\n     */\n    public perPage = 10;\n  \n    /**\n     * total items\n     */\n    public totalItem: number;\n  \n    /**\n     * number of page\n     */\n    public pages: number;\n  \n    /**\n     * handle the spinner\n     */\n    public loading = true;\n  \n    /**\n     * the selected item a action\n     */\n    public selectedItem: number;\n  \n    /**\n     * collection of admissions invoices\n     */\n    invoices: AdmissionInvoice[];\n\n    invoice : object;\n\n    patient: object;\n\n    /**\n    * pdf src for ngx-extended-pdf-viewer\n    */\n    docSrc: any;\n  \n    /**\n     * Define entries options\n     */\n    entries = [\n      { id: 10, value: 10 },\n      { id: 25, value: 25 },\n      { id: 50, value: 50 },\n      { id: 100, value: 100 }\n    ];\n  \n    /**\n     * Define insurance options\n     */\n    insurances: object;\n  \n    /**\n     * Define insurance subscriber options\n     */\n    insuranceSubscribers: object;\n\n    /**\n     * Define patient type options\n     */\n    patientTypes =  [\n      {id: 'a' , value: 'Assuré'},\n      {id: 'c' , value: 'Comptant'},\n    ]\n  \n    /**\n     * Define acts options\n     */\n    acts: object;\n  \n    /**\n     *  order direction\n     */\n    order = 'desc';\n  \n    /**\n     * order column default id\n     */\n    sort = 'id';\n  \n    /**\n    * admissions filter\n    */\n    invoiceStatus = 'R';\n\n    /**\n     * bill collected state\n     */\n    isCollected = false;\n  \n    /**\n     * description of the order direction\n     */\n    orderDescription = 'decroissant';\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n   /**\n    * Msg to display when request result is empty\n    */\n   EmptyMessage: String;\n  \n  \n    hoveredDate: NgbDate | null = null;\n  \n    /**\n     * date range start\n     */\n    fromDate: NgbDate | null;\n  \n    /**\n     * date range end\n     */\n    toDate: NgbDate | null;\n    \n\n    \n  constructor(   \n    private admissionInvoiceService: AdmissionInvoiceService,\n    private insuranceService: InsuranceService,\n    private insuranceSubscriberService : InsuranceSubscriberService,\n    private actService: ActService,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter,\n    private patientService : PatientService\n  ) {\n    // this.fromDate = calendar.getToday();\n    // this.toDate = calendar.getNext(calendar.getToday(), 'd', 10);\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.actService.getIdAndName().subscribe(res=>{this.acts=res});\n    this.insuranceService.findAll().subscribe(res=>{this.insurances=res});\n    this.insuranceSubscriberService.findAll().subscribe(res=>{this.insuranceSubscribers=res});\n\n    this.getInvoices();    \n  }\n\n  \n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      billNumber: new FormControl(''),\n      admissionNumber: new FormControl(''),\n      firstName: new FormControl(''),\n      lastName: new FormControl(''),\n      patientExternalId: new FormControl(''),\n      cellPhone: new FormControl(''),\n      cnamNumber: new FormControl(''),\n      idCardNumber: new FormControl(''),\n      subscriber: new FormControl(null),\n      insurance: new FormControl(null),\n      convention: new FormControl(null),\n      patientType: new FormControl(null),\n      act: new FormControl(null),\n      dpFromDate: new FormControl(null),\n      dpToDate: new FormControl(null),\n     \n    })\n\n    this.entryForm = new FormGroup({\n      entries: new FormControl(10),\n    })\n  }\n\n  /**\n   * get admission list\n   */\n  getInvoices() {\n    let data = this.form.value\n    data.size = this.entryForm.get('entries').value;\n    data.page = this.page;\n    data.order = this.order;\n    data.sort = this.sort;\n    data.invoiceStatus = this.invoiceStatus;\n\n    data.fromDate = this.formatter.format(this.fromDate);\n    data.toDate = this.formatter.format(this.toDate);\n\n    this.admissionInvoiceService.findAll(data).subscribe(\n      res => {\n        if (res) {\n          console.log(res['content']);\n          this.loading = false;\n          this.hasNoData=false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.invoices = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error =>{\n            this.invoices = [];\n            this.loading=false;\n            this.hasNoData=true;\n            this.EmptyMessage=error;\n      })\n  }\n\n  /**\n   * search function\n   */\n  search() {\n    this.loading = true;\n    this.page =this.page > 0 ? this.page - 1: 0;\n    this.getInvoices();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n    this.loading= true;\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getInvoices();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getInvoices();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.loading = true;\n    this.perPage = this.entryForm.get('entries').value;\n    this.page = this.page - 1;\n    this.getInvoices();\n  }\n\n  /**\n   * set the selected item \n   * @param item \n   */\n  onItemChange(item) {   \n    this.invoice = item;\n    this.selectedItem = item.id;\n    this.isCollected =  (item.billStatus == 'C' ) ? true : false;\n  }\n\n\n  /**\n   * set the liste invoiceStatus option\n   */\n  setInvoiceStatus(option) {\n    this.invoiceStatus = option;\n  }\n\n/**\n * \n */\n   deleteItem() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Supprimer cette facture?',\n      text: 'Cette action est est irréversible.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n      if (result.value) {\n        this.admissionInvoiceService.delete(this.selectedItem).subscribe(\n          result => {  },\n          error => {\n            if (error == \"OK\") {\n              deleteRow(this.invoices, this.selectedItem);\n              Swal.fire(\n                'Supprimé!',\n                \"Facture  avec succès!\",\n                'success'\n              )\n            } else {\n              Swal.fire(\n                'Erreur',\n                error,\n                'error'\n              )\n            }\n        });\n        \n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'Element encore en base.',\n          'error'\n        )\n      }\n    })\n  }\n\n  /**\n  * pgenerate pdf in the ngx-pdf-extended-viewer\n  */\n  generateInvoicePdf(invoice) {    \n    this.patientService.findById(1).subscribe(res => { this.patient = res;});\n\n    console.log(this.patient);\n    \n  //  this.patient = invoice['patient'];  \n  //  const patientTag = document.getElementsByClassName('barcode')[0].firstChild;\n  //  console.log(patientTag);\n   \n   const patientTag ='null'\n    let doc = this.admissionInvoiceService.generatePdf(invoice, patientTag);\n    this.docSrc = doc.output('datauristring');\n  }\n\n\n  /**\n   * **********************************************************************************************************************\n   * \n   * date range functions\n   * \n   * **********************************************************************************************************************\n   */\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\n  }\n}\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <div class=\"row pl-3 pr-3\">\r\n      <div class=\"col-md-8\">\r\n        <form [formGroup]=\"form\">\r\n          <div class=\"row mt-2 ml-1\">\r\n            <div class=\"form-group hidden \">\r\n              <div class=\"input-group input-group-sm\">\r\n                <input name=\"datepicker\"\r\n                       class=\"form-control\"\r\n                       ngbDatepicker\r\n                       #datepicker=\"ngbDatepicker\"\r\n                       [autoClose]=\"'outside'\"\r\n                       (dateSelect)=\"onDateSelection($event)\"\r\n                       [displayMonths]=\"2\"\r\n                       [dayTemplate]=\"t\"\r\n                       outsideDays=\"hidden\"\r\n                       [startDate]=\"fromDate!\">\r\n                <ng-template #t let-date let-focused=\"focused\">\r\n                  <span class=\"custom-day\"\r\n                        [class.focused]=\"focused\"\r\n                        [class.range]=\"isRange(date)\"\r\n                        [class.faded]=\"isHovered(date) || isInside(date)\"\r\n                        (mouseenter)=\"hoveredDate = date\"\r\n                        (mouseleave)=\"hoveredDate = null\">\r\n                    {{ date.day }}\r\n                  </span>\r\n                </ng-template>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group col-lg-2 col-md-6 col-sm-12\">\r\n              <div class=\"input-group input-group-sm\">\r\n                <input #dpFromDate\r\n                       class=\"form-control\" placeholder=\"jj/mm/aaaa\"\r\n                       formControlName=\"dpFromDate\"\r\n                       [value]=\"formatter.format(fromDate)\"\r\n                       (input)=\"fromDate = validateInput(fromDate, dpFromDate.value)\" style=\"margin-left: -10px;\">\r\n                <div class=\"input-group-append\">\r\n                  <span class=\"input-group-text\" (click)=\"datepicker.toggle()\"><i class=\"far fa-calendar-alt\"></i></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          <div class=\"form-group col-lg-2 col-md-6 col-sm-12\">\r\n            <div class=\"input-group input-group-sm\">\r\n              <input #dpToDate\r\n                     class=\"form-control\" placeholder=\"jj/mm/aaaa\"\r\n                     formControlName=\"dpToDate\"\r\n                     [value]=\"formatter.format(toDate)\"\r\n                     (input)=\"toDate = validateInput(toDate, dpToDate.value)\" style=\"margin-left: -10px;\">\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text\" (click)=\"datepicker.toggle()\"><i class=\"far fa-calendar-alt\"></i></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-2 col-md-6 col-sm-12\">\r\n            <div class=\"form-group\">\r\n              <div class=\"input-group input-group-sm\">\r\n                <input type=\"text\" formControlName=\"billNumber\" class=\"form-control\" placeholder=\"N° facture\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-2 col-md-6 col-sm-12\">\r\n            <div class=\"form-group\">\r\n              <div class=\"input-group input-group-sm\">\r\n                <input type=\"text\" formControlName=\"admissionNumber\" class=\"form-control\" placeholder=\"N° admission\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-2 col-md-6 col-sm-12\">\r\n            <div class=\"form-group\">\r\n              <div class=\"input-group input-group-sm\">\r\n                <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" placeholder=\"Nom\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n            <div class=\"col-lg-2 col-md-6 col-sm-12\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group input-group-sm\">\r\n                  <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" placeholder=\"Prenom\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-2 col-md-6 col-sm-12\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group input-group-sm\">\r\n                  <input type=\"text\" formControlName=\"patientExternalId\" class=\"form-control\" placeholder=\"N° patient\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-2 col-md-6 col-sm-12\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group input-group-sm\">\r\n                  <input type=\"text\" formControlName=\"cellPhone\" class=\"form-control\" placeholder=\"N° tel\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-2 col-md-6 col-sm-12\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group input-group-sm\">\r\n                  <input type=\"text\" formControlName=\"cnamNumber\" class=\"form-control\" placeholder=\"N° CNAM\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-2 col-md-6 col-sm-12\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group input-group-sm\">\r\n                  <input type=\"text\" formControlName=\"idCardNumber\" class=\"form-control\" placeholder=\"N° CNI\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-2 col-md-6 col-sm-12\">\r\n              <div class=\"input-group-sm\">\r\n                <ng-select formControlName=\"insurance\" placeholder=\"Assurance\">\r\n                    <ng-option *ngFor=\"let insurance of insurances\" [value]=\"insurance.id\">{{insurance.name}}\r\n                    </ng-option>\r\n                </ng-select>\r\n            </div>\r\n            </div>\r\n            <div class=\"col-lg-2 col-md-6 col-sm-12\">\r\n              <div class=\"input-group-sm\">\r\n                <ng-select formControlName=\"subscriber\" placeholder=\"societaire\">\r\n                    <ng-option *ngFor=\"let insuranceSubscriber of insuranceSubscribers\" [value]=\"insuranceSubscriber.id\">{{insuranceSubscriber.name}}\r\n                    </ng-option>\r\n                </ng-select>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n          <div class=\"col-lg-1 col-md-1 col-sm-12 mt-3\">\r\n            <span class=\"btn btn-light\" (click)=\"search()\" style=\"width: 100%;\">\r\n              <i class=\"fas fa-search\"></i>\r\n            </span>\r\n          </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"row\">\r\n          <div class=\"py-1 col-lg-6 col-md-12\">\r\n            <a routerLink=\"/admission/update-invoice/{{selectedItem}}\" class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"  [ngClass]=\"{'disabled': !selectedItem || isCollected  }\">\r\n                <i class=\"fas fa-pen-alt mr-2\"></i>\r\n                Modifier \r\n            </a>\r\n          </div>\r\n          <div class=\"py-1 col-lg-6 col-md-12\">\r\n            <a class=\"btn btn-block btn-danger btn-sm font-weight-bold text-nowrap text-white\"  (click)=\"deleteItem()\" [ngClass]=\"{'disabled': !selectedItem || isCollected  }\">\r\n                <i class=\"fas fa-trash mr-2\"></i>\r\n                suspprimer \r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"py-1 col-lg-6 col-md-12\">\r\n                <a  routerLink=\"/cash-register/add-operation/{{selectedItem}}\" class=\"btn btn-block btn-success btn-sm font-weight-bold text-nowrap text-white\" [ngClass]=\"{'disabled': !selectedItem || isCollected  }\" >\r\n                    <i class=\"fas fa-clinic-medical mr-2\"></i>\r\n                    Encaisser \r\n                </a>\r\n            </div>\r\n            <div class=\"py-1 col-lg-6 col-md-12\">\r\n              <a class=\"btn btn-block btn-dark btn-sm font-weight-bold text-nowrap text-white\" [ngClass]=\"{'disabled': !selectedItem }\" (click)=\"generateInvoicePdf(invoice)\" data-toggle=\"modal\" data-target=\"#invoicePdfModal\">\r\n                  <i class=\"fas fa-file-pdf mr-2\"></i>\r\n                  Impression \r\n              </a>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3 text-center text-muted\">\r\n          <h4>list des factures</h4>\r\n        </div>\r\n        <div class=\"col-md-7\">\r\n          <!-- <div class=\"custom-control custom-radio custom-control-inline\">\r\n            <input type=\"radio\" id=\"allAdmissions\" name=\"allAdmissions\" class=\"custom-control-input\" (click)=\"setInvoiceStatus(null)\">\r\n            <label class=\"custom-control-label\" for=\"allAdmissions\">Toutes les facture</label>\r\n          </div> -->\r\n          <div class=\"custom-control custom-radio custom-control-inline\">\r\n            <input type=\"radio\" id=\"nonBilledAdmission\" name=\"allAdmissions\" class=\"custom-control-input\"  (click)=\"setInvoiceStatus('C')\">\r\n            <label class=\"custom-control-label\" for=\"nonBilledAdmission\">Facture encaissées</label>\r\n          </div>\r\n          <div class=\"custom-control custom-radio custom-control-inline\">\r\n            <input type=\"radio\" id=\"billedAdmissions\" name=\"allAdmissions\" class=\"custom-control-input\" checked (click)=\"setInvoiceStatus('R')\">\r\n            <label class=\"custom-control-label\" for=\"billedAdmissions\">Facture non encaissées</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2 text-right\">\r\n          <form [formGroup]=\"entryForm\">\r\n            <div class=\"row\">\r\n              <div for=\"entries\" class=\"col-md-6 text-right mt-1\"> Afficher</div>\r\n              <div class=\"col-md-6 mb-2\">\r\n                <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\" (change)=\"OnEntryChange()\">\r\n                  <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\r\n                </ng-select>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table table-sm table-hover table-bordered \">\r\n            <thead class=\"thead-light text-center\">\r\n              <tr>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\">N° Facture</th>\r\n                <th scope=\"col\">Encaissé</th>\r\n                <th scope=\"col\">N° patient</th>\r\n                <th scope=\"col\">Patient </th>\r\n                <th scope=\"col\" class=\"text-nowrap\">Date d'admission </th>\r\n                <th scope=\"col\">N° d'admission</th>\r\n                <th scope=\"col\">Acte</th>\r\n                <th scope=\"col\">type de patient</th>\r\n                <th scope=\"col\">Assurance</th>\r\n                <th scope=\"col\">Etab. garant </th>\r\n                <th scope=\"col\">total facture</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"text-nowrap\">\r\n                <tr *ngFor=\"let invoice of invoices\">\r\n                    <th class=\"text-center\" scope=\"row\">\r\n                      <div class=\"custom-control custom-radio\">\r\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"{{invoice.id}}\" name=\"radio-stacked\"\r\n                          value=\"{{invoice.id}}\" (change)=\"onItemChange(invoice)\">\r\n                        <label class=\"custom-control-label\" for=\"{{invoice.id}}\"></label>\r\n                      </div>\r\n                    </th>\r\n                    <td class=\"text-nowrap text-capitalize\">{{invoice.billNumber}}</td>\r\n                    <td class=\"text-center\"><i class=\"fas fa-circle\"\r\n                      [ngClass]=\"{'text-green': invoice.billStatus=='C', 'text-red': invoice.billStatus=='R'}\"\r\n                      ngbTooltip=\"{{invoice.billStatus=='C'? 'Facturé' : 'Non facturé'}}\"></i></td>\r\n                    <td class=\"text-nowrap text-capitalize\">{{invoice.patient.patientExternalId}}</td>\r\n                    <td class=\"text-nowrap text-center\">{{invoice.patient.firstName + ' ' + invoice.patient.lastName}}</td>\r\n                    <td class=\"text-nowrap text-center\">{{invoice.createdAt | date:'dd/MM/yyyy H:mm:ss'}}</td>\r\n                    <td class=\"text-nowrap text-center\">{{invoice.admission.admissionNumber}}</td>\r\n                    <td class=\"text-nowrap\">{{invoice.admissionAct.name}}</td>\r\n                    <td class=\"text-nowrap\">{{ (invoice.patientType == 'a') ? 'Patient assuré' : 'Client Comptant' }}</td>\r\n                    <td class=\"text-nowrap\">{{ invoice.insurance ? invoice.insurance.name : ''}}</td>\r\n                    <td class=\"text-nowrap\">{{ invoice.subscriber ? invoice.subscriber.name : ''}}</td>\r\n                    <td class=\"text-nowrap text-center text-bold\">{{invoice.totalAmount}}</td>\r\n                  </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"text-center mb-5 mt-4\">\r\n        <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\r\n            <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n        <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\r\n        <div *ngIf=\"hasNoData\" class=\"mt-3\">\r\n            <span class=\"text-muted ml-3 \" >{{EmptyMessage}}</span>\r\n        </div>\r\n    </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-7 offset-md-5\">\r\n          <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\r\n            (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- <app-patient-tag [patient]=\"patient\"></app-patient-tag>  -->\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"invoicePdfModal\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\r\n  aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-xl\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <!-- ngx-extended-pdf-viewer -->\r\n        <ngx-extended-pdf-viewer *ngIf='docSrc' [src]=\"docSrc\" useBrowserLocale=\"true\" height=\"80vh\">\r\n        </ngx-extended-pdf-viewer>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">fermer</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdmissionRoutingModule } from './admission-routing.module';\nimport { AddAdmissionComponent } from './add-admission/add-admission.component';\nimport { UpdateAdmissionComponent } from './update-admission/update-admission.component';\nimport { ListAdmissionComponent } from './list-admission/list-admission.component';\nimport { AdmissionFormComponent } from \"./../_shared/admission/admission-form/admission-form.component\";\nimport { AdmissionListComponent } from './../_shared/admission/admission-list/admission-list.component';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { InvoiceFormComponent } from \"./../_shared/admission/invoice-form/invoice-form.component\";\nimport { AddInvoiceComponent } from './add-invoice/add-invoice.component';\nimport { UpdateInvoiceComponent } from './update-invoice/update-invoice.component';\nimport { ListInvoiceComponent } from './list-invoice/list-invoice.component';\nimport { InvoiceListComponent } from \"./../_shared/admission/invoice-list/invoice-list.component\";\nimport { NgbDatepickerModule, NgbTimepickerModule, NgbPaginationModule, NgbTooltipModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\nimport { PatientModule } from '../patient/patient.module';\n\n\n@NgModule({\n  declarations: [\n    AddAdmissionComponent, \n    UpdateAdmissionComponent, \n    ListAdmissionComponent,\n    AdmissionFormComponent, \n    AdmissionListComponent, \n    InvoiceFormComponent, \n    AddInvoiceComponent, \n    UpdateInvoiceComponent,\n    ListInvoiceComponent, \n    InvoiceListComponent\n   ],\n  imports: [\n    CommonModule,\n    AdmissionRoutingModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbDatepickerModule,\n    NgbTimepickerModule,\n    NgbPaginationModule,  \n    NgbTooltipModule,\n    NgxExtendedPdfViewerModule,\n    PatientModule\n  ],\n  exports: [\n    AdmissionListComponent,\n    InvoiceFormComponent\n  ]\n})\n    \n    export class AdmissionModule { }\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { CashRegister } from '../_models/cashRegister.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CashRegisterService {\n\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(cashRegister: CashRegister): Observable<CashRegister> {\n    return this.http.post<CashRegister>(environment.baseUrl2 + '/cash-register/add', cashRegister);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<CashRegister> {\n    return this.http.put<CashRegister>(environment.baseUrl2 + '/cash-register/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<CashRegister[]> {\n    return this.http.get<CashRegister[]>(environment.baseUrl2 + '/cash-register/list');\n  }\n\n  /**\n * get a paginated list of object\n */\n  findAllByPage(data): Observable<CashRegister[]> {\n    let queryParams = {};\n    data['active'] = (data['active'] == null) ? '' : data['active'];\n    //  data['deleted']= (data['deleted'] == null) ? '' : data['deleted'];\n\n    queryParams = {\n      params: new HttpParams().set('page', data['page'])\n        .set('size', data['entries'])\n        .set('name', data['name'])\n        .set('active', data['active'])\n        .set('sort', data['sort'] + ',' + data['order'])\n    };\n    return this.http.get<CashRegister[]>(environment.baseUrl2 + '/cash-register/p_list', queryParams);\n  }\n\n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<CashRegister[]> {\n    return this.http.get<CashRegister[]>(environment.baseUrl2 + '/cash-register/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id): Observable<CashRegister> {\n    return this.http.get<CashRegister>(environment.baseUrl2 + '/cash-register/enable/' + id);\n\n  }\n\n  /**\n   * disable a object\n   */\n  disable(id): Observable<CashRegister> {\n    return this.http.get<CashRegister>(environment.baseUrl2 + '/cash-register/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<CashRegister> {\n    return this.http.get<CashRegister>(environment.baseUrl2 + '/cash-register/detail/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/cash-register/active_cash_registers_name');\n  }\n\n}\n","/**\r\n * delete a row from the DOM whithout refresh the page  after  deleting from the database\r\n * @param array array of objects\r\n * @param rowId row to delete\r\n */\r\nexport function deleteRow( array : any, rowId : number){\r\n    for (let i = 0; i < array.length; ++i) {\r\n      \r\n        if (array[i].id === rowId) {\r\n            array.splice(i,1);\r\n        }\r\n    }\r\n}"],"sourceRoot":"webpack:///"}