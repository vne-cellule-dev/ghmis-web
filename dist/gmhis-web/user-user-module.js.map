{"version":3,"sources":["./src/app/user/list-user/list-user.component.ts","./src/app/user/list-user/list-user.component.html","./src/app/user/user.module.ts","./src/app/user/add-user/add-user.component.ts","./src/app/user/add-user/add-user.component.html","./src/app/common-component/common-component.module.ts","./src/app/_shared/user/user-information-form/user-information-form.component.ts","./src/app/_shared/user/user-information-form/user-information-form.component.html","./src/app/_shared/user/user-list/user-list.component.ts","./src/app/_shared/user/user-list/user-list.component.html","./src/app/_utility/disable-item.ts","./src/app/_services/permission.service.ts","./src/app/user/user-routing.module.ts","./src/app/_shared/alert/autorisation-alert/autorisation-alert.component.ts","./src/app/_shared/alert/autorisation-alert/autorisation-alert.component.html","./src/app/_shared/user/user-form/user-form.component.ts","./src/app/_shared/user/user-form/user-form.component.html","./src/app/_utility/enable-item.ts","./src/app/_utility/date/date-output-format.ts","./src/app/_utility/date/date-input-format.ts","./src/app/user/update-user/update-user.component.ts","./src/app/user/update-user/update-user.component.html","./src/app/_shared/user/user-role-form/user-role-form.component.ts","./src/app/_shared/user/user-role-form/user-role-form.component.html"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.css']\n})\nexport class ListUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-user-list></app-user-list>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { ListUserComponent } from './list-user/list-user.component';\nimport { UserFormComponent } from './../_shared/user/user-form/user-form.component';\nimport { UserListComponent } from './../_shared/user/user-list/user-list.component';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { UserRoleFormComponent } from './../_shared/user/user-role-form/user-role-form.component';\nimport { UserInformationFormComponent } from './../_shared/user/user-information-form/user-information-form.component';\nimport { NgbDatepickerModule, NgbPaginationModule, NgbTimepickerModule, NgbTooltipModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { CommonComponentModule } from '../common-component/common-component.module';\n\n@NgModule({\n  declarations: [\n    AddUserComponent,\n    UpdateUserComponent,\n    ListUserComponent,\n    UserFormComponent,\n    UserListComponent,\n    UserInformationFormComponent,\n    UserRoleFormComponent,\n    ChangePasswordComponent,\n  ],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    CommonComponentModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbDatepickerModule,\n    NgbTimepickerModule,\n    NgSelectModule,\n    NgbPaginationModule,\n    NgbTooltipModule,\n  ]\n})\nexport class UserModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  /**\n   * title to display\n   */\n  title = 'Nouvel utilisateur';\n\n  constructor(\n    private router : Router,\n    private alertService : AlertService,\n    private userService : UserService ) { }\n\n  ngOnInit(): void {}\n\n  /**\n   * add a new object\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let user = data.user;\n     \n    this.userService.save(user).subscribe(user => {\n      if(user){\n        this.router.navigate(['/user/list']);\n        this.alertService.success('Utilisateur ajouté avec succès')\n      }\n        \n    },\n    error => {\n      this.alertService.error(error)\n    },\n    () => {});\n\n  }\n}\n","<app-user-form [title]='title' (objectEmitter)=\"save($event)\"></app-user-form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutorisationAlertComponent } from '../_shared/alert/autorisation-alert/autorisation-alert.component';\n\n@NgModule({\n  declarations: [ AutorisationAlertComponent],\n  imports: [\n    CommonModule\n  ],\n  exports : [AutorisationAlertComponent],\n})\nexport class CommonComponentModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbCalendar, NgbDateAdapter, NgbDateParserFormatter, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { I18n, CustomDatepickerI18n, CustomAdapter, CustomDateParserFormatter } from \"./../../../_utility/date/ngb-datepicker\";\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { dateOutputFormat } from 'src/app/_utility/date/date-output-format';\n\n@Component({\n  selector: 'app-user-information-form',\n  templateUrl: './user-information-form.component.html',\n  styleUrls: ['./user-information-form.component.css'],\n  providers: [\n    I18n,\n    { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n },\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter }\n  ] // define custom NgbDatepickerI18n provider\n\n})\nexport class UserInformationFormComponent implements OnInit {\n\n  /**\n   *  form Group\n   */\n  form: FormGroup;\n\n  /**\n   * form submission action, it will get the value of the action to do\n   */\n  @Input()\n  formAction : string;\n\n  /**\n   * invalid from controls\n   */\n  @Input()\n  invalidFormControls: any;\n\n  \n  /**\n   * parent component input\n   */\n  @Input()\n  userId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n   /**\n   * Define active state options\n   */\n  active = [\n    { id: 'Y', value: 'Oui' },\n    { id: 'N', value: 'Non' }\n  ];\n\n  /**\n   * Define active locked options\n   */\n  locked  = [\n    { id: 'Y', value: 'Oui' },\n    { id: 'N', value: 'Non' }\n  ];\n\n  /**\n   * Define change password options\n   */\n  changePassword  = [\n    { id: 'Y', value: 'Oui' },\n    { id: 'N', value: 'Non' }\n  ];\n\n  /**\n    * date picker model\n    */\n  datePicker: NgbDateStruct;\n\n  /**\n   * time picker model\n   */\n  timePicker = { hour: 0, minute: 0};\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n  constructor(\n    private userService : UserService,\n    private alertService: AlertService,\n    private router: Router,\n    private ngbCalendar: NgbCalendar, private dateAdapter: NgbDateAdapter<string>\n  ) { }\n\n  ngOnInit(): void {\n    \n    this.initForm();\n    \n    if (this.userId) this.initUpdateForm();\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n        id : new FormControl(0),\n        email: new FormControl('', [Validators.required, Validators.email]),\n        firstName: new FormControl('', Validators.required),\n        lastName: new FormControl('', Validators.required),\n        active: new FormControl('Y', Validators.required),\n        // avatar: new FormControl(''),\n        locked : new FormControl('N', Validators.required),\n        login: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.required),\n        passwordExpireAt: new FormControl(null),\n        passwordExpireTime: new FormControl(null),\n        passwordMustChange: new FormControl('Y', Validators.required),\n        phoneContact: new FormControl('', Validators.required),\n        repassword: new FormControl('', Validators.required),\n        sessionLifeTime: new FormControl(''),     \n    });\n  }\n\n  /**\n   * init the form value when updating\n   */\n  initUpdateForm() {\n    this.form.get('password').clearValidators();\n    this.form.get('repassword').clearValidators();\n\n    if (this.userId) {\n      this.userService.findById(this.userId).subscribe(\n        \n        res => {\n          \n          if (res) {\n            let passwordExpireAt = new Date(res['passwordExpireAt']);\n            this.timePicker = { hour: passwordExpireAt.getHours(), minute: passwordExpireAt.getMinutes()};\n             res['password'] = '';\n             res['passwordExpireAt'] =  (res['passwordExpireAt']==null) ? '': dateOutputFormat(passwordExpireAt);\n             this.form.patchValue(res);\n\n          } else {\n            this.errorAction(\"Modification impossible car l'utilisateur n'existe pas\", '/user/list');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de la modification\", '/user/list');\n          \n        })\n    }\n  }\n\n}\n","<form [formGroup]='form'>\n    <div class=\"row\">\n        <div class=\"col-lg-4 col-md-6 col-sm-12\">\n            <div class=\"form-group\">\n                <label for=\"firstName\">Nom</label>\n                <span class=\"text-danger\">*</span>\n                <div class=\"input-group input-group-sm\">\n                    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" placeholder=\"Nom du patient\">\n                </div>\n                <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.firstName\">ce champ\n                    doit être renseigné\n                </span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lastName\">Prenom</label>\n                <span class=\"text-danger\">*</span>\n                <div class=\"input-group input-group-sm\">\n                    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" placeholder=\"prenom du patient\">\n                </div>\n                <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.lastName\">ce champ\n                    doit être renseigné\n                </span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"phoneContact\">Contact</label>\n                <span class=\"text-danger\">*</span>\n                <div class=\"input-group input-group-sm\">\n                    <input type=\"text\" formControlName=\"phoneContact\" class=\"form-control\" placeholder=\"Contact\">\n                </div>\n                <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.lastName\">ce champ\n                    doit être renseigné\n                </span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">E-mail</label>\n                <span class=\"text-danger\">*</span>\n                <div class=\"input-group input-group-sm\">\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"E-mail\">\n                </div>\n                <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.email\">\n                    ce champ doit être au format E-mail\n                </span>\n            </div>\n        </div>\n        <div class=\"col-lg-4 col-md-6 col-sm-12\">\n            <div class=\"form-group\">\n                <label for=\"login\">Identifiant</label>\n                <span class=\"text-danger\">*</span>\n                <div class=\"input-group input-group-sm\">\n                    <input type=\"text\" formControlName=\"login\" class=\"form-control\" placeholder=\"Identifiant\">\n                </div>\n                <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.login\">\n                    ce champ doit être renseigné\n                </span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Mot de passe</label>\n                <span class=\"text-danger\">*</span>\n                <div class=\"input-group input-group-sm\">\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Mot de passe\">\n                </div>\n                <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.password\">\n                    ce champ doit être renseigné\n                </span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"repassword\">Confirmation du mot de passe</label>\n                <span class=\"text-danger\">*</span>\n                <div class=\"input-group input-group-sm\">\n                    <input type=\"password\" formControlName=\"repassword\" class=\"form-control\"\n                        placeholder=\"Confirmation du mot de passe\">\n                </div>\n                <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.repassword\">\n                    ce champ doit être renseigné\n                </span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"passwordMustChange\">Changer le mot de passe à la prochaine connexion</label>\n                <ng-select formControlName=\"passwordMustChange\">\n                    <ng-option *ngFor=\"let change of changePassword\" [value]=\"change.id\">{{change.value}}</ng-option>\n                </ng-select>\n            </div>\n        </div>\n        <div class=\"col-lg-4 col-md-6 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label for=\"active\">Actif</label>\n                        <ng-select formControlName=\"active\">\n                            <ng-option *ngFor=\"let active of active\" [value]=\"active.id\">{{active.value}}</ng-option>\n                        </ng-select>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                        <label for=\"locked\">Verrouillé</label>\n                        <ng-select formControlName=\"locked\">\n                            <ng-option *ngFor=\"let locked of locked\" [value]=\"locked.id\">{{locked.value}}</ng-option>\n                        </ng-select>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-8\">\n                    <div class=\"form-group\">\n                        <label for=\"passwordExpireAt\">Date d'expiration du MP:</label>\n                        <div class=\"input-group  input-group-sm\">\n                            <input class=\"form-control\" placeholder=\"dd-mm-AAAA\" formControlName=\"passwordExpireAt\"\n                                ngbDatepicker #d=\"ngbDatepicker\">\n                            <div class=\"input-group-append\">\n                                <span class=\"input-group-text\" (click)=\"d.toggle()\">\n                                    <i class=\"far fa-calendar-alt\"></i>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\" col-lg-4 col-md-12\" style=\"margin-top: -0.70rem;\">\n                    <ngb-timepicker [(ngModel)]=\"timePicker\" formControlName=\"passwordExpireTime\"></ngb-timepicker>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AuthenticationRoutingModule } from 'src/app/authentication/authentication-routing.module';\nimport { User } from 'src/app/_models/user.model';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\nimport { PermissionService } from 'src/app/_services/permission.service';\nimport { RoleService } from 'src/app/_services/role.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { disableItem } from 'src/app/_utility/disable-item';\nimport { enableItem } from 'src/app/_utility/enable-item';\nimport { can } from 'src/app/_utility/permission/can';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  /**\n  * search formGroup\n  */\n  public form: FormGroup;\n\n  /**\n   * entries formGroup\n   */\n  public entryForm: FormGroup;\n\n  /**\n   * init first page\n   */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * the selected item id\n   */\n  public selectedItemId: number;\n\n  /**\n   * selected Item\n   */\n\n  public selectedItem: User;\n\n  /**\n   * collection of users\n   */\n  public users: User[];\n\n  /**\n   * Define entries options\n   */\n  entries = [\n    { id: 10, value: 10 },\n    { id: 25, value: 25 },\n    { id: 50, value: 50 },\n    { id: 100, value: 100 }\n  ]\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * description of the order direction\n   */\n  orderDescription = 'decroissant';\n\n  /**\n  * Define active state options\n  */\n  active = [\n    { id: 'Y', value: 'Oui' },\n    { id: 'N', value: 'Non' }\n  ];\n\n  /**\n   * Define locked options\n   */\n  locked = [\n    { id: 'Y', value: 'Oui' },\n    { id: 'N', value: 'Non' }\n  ];\n\n  /**\n   * Define role options\n   */\n  roles: Object;\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n   /**\n    * Msg to display when request result is empty\n    */\n   EmptyMessage: String;\n\n   /**\n   * permission service\n   */\n  permission : any;\n\n\n  /**\n   * define permissions\n   */\n  createUser: boolean;\n  listUser: boolean;\n  updateUser: boolean;\n  enableUser: boolean;\n  disableUser: boolean;\n  searchUser: boolean;\n\n  constructor(\n    private userService: UserService,\n    private roleService: RoleService,\n    private permissionService: PermissionService,\n    private authService : AuthenticationService\n    ) {\n  \n      this.permission = this.permissionService;\n    }\n    \n  ngOnInit() {\n    this.initForm();\n    this.getUsers();\n    this.roleService.getIdAndName().subscribe(res => { this.roles = res; });\n    this.setPermissions();\n  }\n\n  /**\n   * set Permissions to component ressources\n   */\n  setPermissions(){\n    this.userService.findByUsername(this.authService.getUsername()).subscribe(user => {\n      this.createUser = can(user, 'createUser');\n      this.listUser = can(user, 'listUser');\n      this.updateUser = can(user, 'updateUser');\n      this.enableUser = can(user, 'enableUser');\n      this.disableUser = can(user, 'disableUser');\n      this.searchUser = can(user, 'searchUser');\n    });\n  }\n\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      firstName: new FormControl(''),\n      lastName: new FormControl(''),\n      role: new FormControl(null),\n      phoneContact: new FormControl(''),\n      active: new FormControl(null),\n      locked: new FormControl(null),\n    })\n\n    this.entryForm = new FormGroup({\n      entries: new FormControl(10),\n    })\n  }\n\n  /**\n   * get patient list\n   */\n  getUsers() {\n    let data = this.form.value;\n    data.entries = this.entryForm.get('entries').value;\n    data.page = this.page;\n    data.order = this.order;\n    data.sort = this.sort;\n\n    this.userService.findAll(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.users = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        if (error == \"Liste des utilisateurs est vide\") {\n          this.users = [];\n          this.loading=false;\n          this.hasNoData=true;\n          this.EmptyMessage=error;\n        }\n      });\n  }\n\n  /**\n   * search function\n   */\n  search() {\n    this.loading = true;\n    this.page = this.page > 0 ? this.page - 1 : 0;\n    this.getUsers();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getUsers();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getUsers();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.perPage = this.entryForm.get('entries').value;\n    this.loading = true;\n    this.page = this.page - 1;\n    this.getUsers();\n  }\n\n  /**\n   * set the selected item value\n   * @param item \n   */\n  onItemChange(item) {\n    this.selectedItem = item;\n    this.selectedItemId = item.id;\n  }\n\n  /**\n  * disable an object\n  */\n  disable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment desactiver ce utilisateur?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n\n      if (result.value) {\n        this.userService.disable(this.selectedItem).subscribe(result => {\n          //disable row in the DOM\n          if (result) disableItem(this.users, result['id']);\n\n          Swal.fire(\n            'Desactivé!',\n            'utilisateur desactiver avec succès.',\n            'success'\n          )\n        });\n\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'l\\'utilisateur n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n\n  /**\n   * enable an object\n   */\n  enable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Activer cet utilisateur?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n\n      if (result.value) {\n        this.userService.enable(this.selectedItem).subscribe(result => {\n          //enable row in the DOM\n          if (result) enableItem(this.users, result['id']);\n\n          Swal.fire(\n            'Actvé!',\n            'utilisateur activé avec succès.',\n            'success'\n          )\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'L\\'utilisateur n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n\n}\n","<div class=\"card\"  *ngIf=\"listUser\">\n    <div class=\"card-header\">\n        <div class=\"row pl-3 pr-3\">\n            <div class=\"col-md-7\" *ngIf=\"searchUser\">\n                <form [formGroup]=\"form\">\n                    <div class=\"row\">\n                        <div class=\"row pt-1 m-0 col-md-12\">\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\n                                            placeholder=\"Nom\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\n                                            placeholder=\"prenom\">\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <ng-select formControlName=\"role\" placeholder='Rôle' class=\"col-12\">\n                                        <ng-option *ngFor=\"let role of roles\" [value]=\"role.id\">{{role.name}}\n                                        </ng-option>\n                                    </ng-select>\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"phoneContact\" class=\"form-control\"\n                                            placeholder=\"N° tel\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-2 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"active\" placeholder='actif' class=\"col-12\">\n                                            <ng-option *ngFor=\"let active of active\" [value]=\"active.id\">\n                                                {{active.value}}</ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"locked\" placeholder=\"locked\" class=\"col-12\">\n                                            <ng-option *ngFor=\"let locked of locked\" [value]=\"locked.id\">\n                                                {{locked.value}}</ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-2 col-md-6 col-sm-12\">\n                                <span class=\"btn btn-light\" (click)=\"search()\" style=\"width: 100%;\">\n                                    <i class=\"fas fa-search\"></i>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-5\">\n                <div class=\"row\">\n                    <div class=\"py-1 col-lg-3 col-md-6 col-sm-12 \" *ngIf=\"createUser\">\n                        <a routerLink=\"../add\"\n                            class=\"btn btn-block btn-success btn-sm font-weight-bold text-nowrap text-white\">\n                            <i class=\"fas fa-plus mr-2\"></i>\n                            Nouveau\n                        </a>\n                    </div>\n                    <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\" *ngIf=\"updateUser\">\n                        <a routerLink=\"../update/{{selectedItemId}}\"\n                            class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"\n                            [ngClass]=\"{'disabled': !selectedItemId }\">\n                            <i class=\"fas fa-pen-alt mr-2\"></i>\n                            Modifier\n                        </a>\n                    </div>\n                    <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\" *ngIf=\"enableUser\">\n                        <a (click)=\"enable()\"\n                            class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n                            [ngClass]=\"{'disabled': !selectedItemId }\">\n                            <i class=\"fas fa-toggle-on mr-2\"></i>\n                            Activer\n                        </a>\n                    </div>\n                    <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\" *ngIf=\"disableUser\">\n                        <a (click)=\"disable()\"\n                            class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n                            [ngClass]=\"{'disabled': !selectedItemId }\">\n                            <i class=\"fas fa-toggle-off mr-2\"></i>\n                            Desactiver\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-10 text-center text-muted\">\n                <h4>liste des utilisateurs</h4>\n            </div>\n            <div class=\"col-md-2 text-right\">\n                <form [formGroup]=\"entryForm\">\n                    <div class=\"row\">\n                        <div for=\"entries\" class=\"col-sm-12 text-right mt-1\"> Afficher</div>\n                        <div class=\"col-sm-12 mb-2\">\n                            <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\"\n                                (change)=\"OnEntryChange()\">\n                                <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\n                            </ng-select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-sm table-hover table-bordered \">\n                <thead class=\"thead-light text-center\">\n                    <th scope=\"col\"></th>\n                    <th class=\"text-nowrap\">ID<i class=\"fa fa-sort ml-2\" (click)=\"onSort('id')\"\n                            ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                    <th class=\"text-nowrap\" scope=\"col\">Nom <i class=\"fa fa-sort ml-2\" (click)=\"onSort('firstName')\"\n                            ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                    <th class=\"text-nowrap\" scope=\"col\">prenom <i class=\"fa fa-sort ml-2\" (click)=\"onSort('lastName')\"\n                            ngbTooltip=\"trier par ordre {{orderDescription }}\"></i>\n                    </th>\n                    <th class=\"text-nowrap\" scope=\"col\">Email</th>\n                    <th class=\"text-nowrap\" scope=\"col\">N° telephone</th>\n                    <th class=\"text-nowrap\">Actif <i class=\"fa fa-sort ml-2\" (click)=\"onSort('active')\"\n                            ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                    <th class=\"text-nowrap\">Verouillé <i class=\"fa fa-sort ml-2\" (click)=\"onSort('locked')\"\n                            ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                    <th class=\"text-nowrap\" scope=\"col\">Rôles</th>\n                    <th class=\"text-nowrap\">Dernière connexion</th>\n                    <th class=\"text-nowrap\" scope=\"col\">crée le <i class=\"fa fa-sort ml-2\" (click)=\"onSort('createdAt')\"\n                            ngbTooltip=\"trier par ordre {{orderDescription }}\"></i>\n                    </th>\n                    <th class=\"text-nowrap\" scope=\"col\">crée par</th>\n                    <th class=\"text-nowrap\" scope=\"col\">Dern. modif.</th>\n                    <th class=\"text-nowrap\" scope=\"col\">Modifié par</th>\n                    <!-- sessionLifeTime: 480 -->\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of users\">\n                        <th class=\"text-center\" scope=\"row\">\n                            <div class=\"custom-control custom-radio\">\n                                <input type=\"radio\" class=\"custom-control-input\" id=\"{{user.login}}\"\n                                    name=\"radio-stacked\" value=\"{{user.id}}\" (change)=\"onItemChange(user)\">\n                                <label class=\"custom-control-label\" for=\"{{user.login}}\"></label>\n                            </div>\n                        </th>\n                        <td class=\"text-center\">{{user.id}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{user.firstName}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{user.lastName}}</td>\n                        <td class=\"text-center text-capitalize text-nowrap\">{{user.email}}</td>\n                        <td class=\"text-center text-nowrap\">{{user.phoneContact}}</td>\n                        <td class=\"text-capitalize text-center\">\n                            <i class=\"fas fa-circle\"\n                                [ngClass]=\"{'text-green': user.active=='Y', 'text-red': user.active=='N'}\"\n                                ngbTooltip=\"{{user.active=='Y'? 'Actif' : 'Inactif'}}\"></i>\n                        </td>\n                        <td class=\"text-capitalize text-center\">\n                            {{ (user.locked == 'Y') ? 'Oui' :'Non'}}\n                        </td>\n                        <td class=\"text-nowrap\">{{user.roles}}</td>\n                        <td class=\"text-center text-nowrap\">{{user.lastLogin | date:'dd/MM/yyyy HH:mm:ss'}}</td>\n                        <td class=\"text-center text-nowrap\">{{user.createdAt | date:'dd/MM/yyyy'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{user.createdByFirstName ? user.createdByFirstName +'\n                            '+ user.createdByLastName : ''}}\n                        </td>\n                        <td class=\"text-center text-center text-nowrap\">\n                            {{user.updatedAt ? (user.updatedAt | date:'dd/MM/yyyy') : 'Jamais modifié'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">\n                            {{user.updatedByFirstName ? user.updatedByFirstName +' '+ user.updatedByLastName : ''}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"text-center mb-5 mt-4\">\n            <div *ngIf=\"loading\">\n                <div class=\"spinner-border text-info\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                </div>\n                <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n            </div>\n            <span class=\"text-muted ml-3 \" *ngIf=\"hasNoData\">Aucun élément correspondant au(x) critère(s) de\n                recherche</span>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-7 offset-md-5\">\n                <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n                    (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n            </div>\n        </div>\n    </div>\n</div>\n<app-autorisation-alert *ngIf=\"listUser == false\"></app-autorisation-alert>","/**\r\n * disable object from the DOM whithout refresh the page  after  disabling from the database\r\n * @param array array of objects\r\n * @param rowId row to disable\r\n */\r\nexport function disableItem( array : any, rowId : number){\r\n    for (let i = 0; i < array.length; ++i) {\r\n      \r\n        if (array[i].id === rowId) {\r\n            array[i].active = 'N'; \r\n        }\r\n    }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Permission } from '../_models/permission.model';\nimport { AuthenticationService } from './authentication.service';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissionService {\n\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n\n\n  /**\n    *  POST: add a new object to the database \n    */\n  save(permission: Permission): Observable<Permission> {\n    return this.http.post<Permission>(environment.baseUrl2 + '/permission/add', permission);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(permission: Permission): Observable<Permission> {\n    return this.http.put<Permission>(environment.baseUrl2 + '/permission/update/' + permission.id, permission);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/permission/list');\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<Permission> {\n    return this.http.get<Permission>(environment.baseUrl2 + '/permission/detail/' + id);\n  }\n\n  /**\n   * find permissions by menu id and role id\n   * @param menu_id \n   * @param role_id \n   */\n  findByRoleAndMenu(menu_id: number, role_id: number): Observable<Permission[]> {\n    return this.http.get<Permission[]>(environment.baseUrl2 + '/permission/list_menu_role/' + menu_id + '/' + role_id);\n  }\n\n  /**\n   * find permissions by menu id\n   * @param menu_id \n   */\n  findByMenu(menu_id: number): Observable<Permission[]> {\n    return this.http.get<Permission[]>(environment.baseUrl2 + '/permission/list_menu/' + menu_id);\n  }\n\n  /**\n   * find permissions by role id\n   * @param role_id \n   */\n  findByRole(role_id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/permission/list_role/' + role_id);\n  }\n\n  /**\n   * check if user's permissions includes  a specific permission\n   * @param menu \n   */\n  can(menu) {\n    return null\n\n  }\n\n}\n","import { Component, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddUserComponent } from \"./add-user/add-user.component\";\nimport { UpdateUserComponent } from \"./update-user/update-user.component\";\nimport { ListUserComponent } from \"./list-user/list-user.component\";\nimport { ChangePasswordComponent } from './change-password/change-password.component';\n\nconst routes: Routes = [\n  { path: 'add', component:AddUserComponent },\n  { path: 'list', component:ListUserComponent },\n  { path: 'update/:id', component:UpdateUserComponent },\n  { path: 'password-changing/:id', component:ChangePasswordComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-autorisation-alert',\n  templateUrl: './autorisation-alert.component.html',\n  styleUrls: ['./autorisation-alert.component.css']\n})\nexport class AutorisationAlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\"> \n    <div class=\"alert alert-danger\" >\n        Alert ! &nbsp;<i class=\"icon fas fa-ban\"></i>\n        Vous n'avez pas le droit d'acceder a cette ressource !!! Veillez contacter votre administrateur Web.\n   </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { dateInputFormat } from 'src/app/_utility/date/date-input-format';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\nimport { NgbCalendar, NgbDateAdapter, NgbDateParserFormatter, NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { I18n, CustomDatepickerI18n, CustomAdapter, CustomDateParserFormatter } from \"./../../../_utility/date/ngb-datepicker\";\nimport { UserInformationFormComponent } from '../user-information-form/user-information-form.component';\nimport { UserRoleFormComponent } from '../user-role-form/user-role-form.component';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { can } from 'src/app/_utility/permission/can';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n\n  @ViewChild(UserInformationFormComponent) userInfoComponent;\n  @ViewChild(UserRoleFormComponent) roleComponent;\n\n  /**\n   *  form Group\n   */\n  form: FormGroup;\n\n  /**\n  * invalid from controls\n  */\n  invalidFormControls: any;\n\n  /** \n   * model id\n   */\n  @Input()\n  id: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * user id\n   */\n  @Input()\n  userId: number;\n\n  /**\n   * child component output\n   */\n  @Output()\n  objectEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n    * date picker model\n    */\n  datePicker: NgbDateStruct;\n\n  /**\n   * define permissions\n   */\n  createUser: boolean;\n\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n  constructor(\n    private alertService: AlertService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private ngbCalendar: NgbCalendar, private dateAdapter: NgbDateAdapter<string>,\n    private authService : AuthenticationService,\n    private userService : UserService\n\n  ) { }\n\n\n  ngOnInit(): void { \n    this.setPermissions();\n  }\n  \n    /**\n   * set Permissions to component ressources\n   */\n  setPermissions(){\n    this.userService.findByUsername(this.authService.getUsername()).subscribe(user => {\n      this.createUser = can(user, 'createUser');\n    });\n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the object\n    */\n  save(action) {\n   \n    this.form = this.userInfoComponent.form;\n\n    // reset alerts on submit\n    this.alertService.clear();\n \n    //validate form '\n    \n    let data = this.form.value;\n    \n    if( ! data['passwordExpireAt'])  this.form.removeControl('passwordExpireAt');\n    \n    this.invalidFormControls = invalidformControls(this.form);\n\n    if (this.form.valid) {\n\n      data['roles'] = this.roleComponent.userRoles.join(',');\n\n      if (data['roles']) {\n        \n        data['passwordExpireAt'] = data['passwordExpireAt'] ? dateInputFormat(data['passwordExpireAt']): null;\n    \n        if(data['passwordExpireAt']) {\n          data['passwordExpireAt'].setHours(data['passwordExpireTime']['hour']);\n          data['passwordExpireAt'].setMinutes(data['passwordExpireTime']['minute']);\n        }\n        this.objectEmitter.emit({ user: data, action: action });\n      } else {\n        this.alertService.error('Veillez attribuer  au moin un rôle à cet utilisateur');\n        let activatedUrl = this.activatedRoute.snapshot['_routerState']['url'];\n        this.router.navigateByUrl(activatedUrl);\n      }\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n\n  /**\n  * action to Do when  ckick on cancel button\n  */\n  cancelAction() {\n    this.errorAction('Action annulée', '/user/list');\n  }\n\n}\n","<div class=\"card\" *ngIf = \"createUser\">\n    <div class=\"card-header\">\n        <div class=\"row\">\n            <div class=\"mr-auto p-2 col-md-4\">\n                <h3>{{title}}</h3>\n            </div>\n            <div class=\"col-md-7\">\n                <div class=\"row\">\n                    <div class=\"mt-3 col-sm-3 text-nowrap\">\n                        <button (click)=\"save('save')\" class=\"btn btn-block btn-success btn-sm font-weight-bold\">\n                            Enregistrer\n                        </button>\n                    </div>\n                    <div class=\"mt-3 col-sm-3 text-nowrap\">\n                        <span (click)=\"cancelAction()\" class=\"btn btn-block btn-danger btn-sm font-weight-bold\">\n                            Annuler\n                        </span>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- / .card-header -->\n    <div class=\"card-body\">\n        <p class=\"text-muted\"> NB: les champs marqués d'un astérisque ( <span class=\"text-danger\">*</span> ) sont\n            obligatoire pour la validation de la fiche</p>\n\n        <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n            <li class=\"nav-item\" role=\"presentation\">\n                <a class=\"nav-link text-bold active\" id=\"pills-user-information-tab\" data-toggle=\"pill\"\n                    href=\"#pills-user-information\" role=\"tab\" aria-controls=\"pills-user-information\"\n                    aria-selected=\"true\">Information utilisateur</a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n                <a class=\"nav-link text-bold\" id=\"pills-user-role-tab\" data-toggle=\"pill\" href=\"#pills-user-role\"\n                    role=\"tab\" aria-controls=\"pills-user-role\" aria-selected=\"false\">Attribution de roles</a>\n            </li>\n        </ul>\n        <hr>\n        <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div class=\"tab-pane fade show active\" id=\"pills-user-information\" role=\"tabpanel\"\n                aria-labelledby=\"pills-user-information-tab\">\n                <app-user-information-form  [invalidFormControls]=\"invalidFormControls\" [userId]='userId'>\n                </app-user-information-form>\n            </div>\n            <div class=\"tab-pane fade\" id=\"pills-user-role\" role=\"tabpanel\" aria-labelledby=\"pills-user-role-tab\">\n                <app-user-role-form [userId]='userId'></app-user-role-form>\n            </div>\n        </div>\n    </div>\n    <!-- / .card-body -->\n</div>\n<app-autorisation-alert *ngIf=\"createUser == false\"></app-autorisation-alert>","/**\r\n * enable object from the DOM whithout refresh the page  after  enabling from the database\r\n * @param array array of objects\r\n * @param rowId row to enable\r\n */\r\nexport function enableItem( array : any, rowId : number){\r\n    for (let i = 0; i < array.length; ++i) {\r\n      \r\n        if (array[i].id === rowId) {\r\n            array[i].active = 'Y'; \r\n        }\r\n    }\r\n}","/**\r\n * \r\n * @param date \r\n * @return string\r\n */\r\nexport function dateOutputFormat(date:  Date) : string {\r\n    \r\n    let newDate = new Date(date);\r\n    let day =  (\"0\"+ newDate.getDate()).slice(-2);\r\n    let month = (\"0\"+ (newDate.getMonth() + 1) ).slice(-2);\r\n    let year = newDate.getFullYear();\r\n   \r\n    return  day+'-'+ month+'-'+year;\r\n}","/**\r\n * convert a date from dd/mm/yyyy format in mm/dd/yyyy format\r\n * @param string\r\n * @return Date\r\n */\r\nexport function dateInputFormat( date: string)  {\r\n\r\n    let inputDate=  date.split(' ');  \r\n    let dateClains= inputDate[0].split(\"-\");\r\n    let day = dateClains[0];\r\n    let month = dateClains[1];\r\n    let year = dateClains[2];\r\n    \r\n    return new Date(month +\"/\"+day +\"/\"+ year );\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n\n  /**\n   * title to display\n   */\n  title = 'Modifier un utilisateur';\n\n  /**\n   * user id\n   */\n  userId: number;\n\n  constructor(\n    private activatedRoute : ActivatedRoute,\n    private userService : UserService,\n    private router: Router,\n    private alertService: AlertService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params=>{\n      this.userId = params.id;\n   })\n  }\n\n  /**\n   * add a new object\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let user = data.user;\n    if(user['password']==''){\n      user['password']= null;\n      // delete user['repassword'];\n    } \n    \n    this.userService.update(user).subscribe(user => {\n      if(user){\n        this.router.navigate(['/user/list']);\n        this.alertService.success('Utilisateur modifié avec succès')\n      }\n    },\n    error => {\n      this.alertService.error(error)\n    },\n    () => {});\n\n  }\n\n}\n","<app-user-form [title]='title' [userId]='userId' (objectEmitter)=\"save($event)\"></app-user-form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { RoleService } from 'src/app/_services/role.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-user-role-form',\n  templateUrl: './user-role-form.component.html',\n  styleUrls: ['./user-role-form.component.css']\n})\nexport class UserRoleFormComponent implements OnInit {\n\n  /**\n   * list of roles\n   */\n  roles: any;\n\n  /**\n   * user roles\n   */\n  userRoles = [];\n\n  /**\n   * parent component input\n   */\n  @Input()\n  userId: number\n\n  /**\n   * user object\n   */\n  user: object;\n\n  constructor(\n    private roleService: RoleService,\n    private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.roleService.findActive().subscribe(res => {\n      this.roles = res;\n    });\n\n    if (this.userId) {\n      this.userService.findById(this.userId).subscribe(res => {\n        this.userRoles = res['roles'].map(({ name }) => name);\n      })\n    }\n\n  }\n\n\n  /**\n   * insert or remove a role from the prescribed Drugs array\n   * @param selectedRole \n   */\n  public getSelectedRoles(selectedRole) {\n\n    if (this.userRoles.includes(selectedRole)) {\n\n      let index = this.userRoles.indexOf(selectedRole);\n      this.userRoles.splice(index, 1);\n\n    } else {\n\n      this.userRoles.push(selectedRole);\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"custom-control custom-checkbox col-md-2\" *ngFor=\"let role of roles\">\n        <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{role.id}}\" value=\"{{role.name}}\"\n            (click)=\"getSelectedRoles($event.target.value)\" [attr.checked]=\"userRoles.includes(role.name) ? true: null\">\n        <label class=\"custom-control-label text-capitalize\" for=\"{{role.id}}\">{{role.name}}</label>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}