{"version":3,"sources":["./src/app/cashier/add-cashier/add-cashier.component.ts","./src/app/cashier/add-cashier/add-cashier.component.html","./src/app/_shared/cashier/cashier-list/cashier-list.component.ts","./src/app/_shared/cashier/cashier-list/cashier-list.component.html","./src/app/_utility/disable-item.ts","./src/app/cashier/cashier.module.ts","./src/app/_shared/cashier/cashier-form/cashier-form.component.ts","./src/app/_shared/cashier/cashier-form/cashier-form.component.html","./src/app/cashier/list-cashier/list-cashier.component.ts","./src/app/cashier/list-cashier/list-cashier.component.html","./src/app/_utility/enable-item.ts","./src/app/cashier/update-cashier/update-cashier.component.ts","./src/app/cashier/update-cashier/update-cashier.component.html","./src/app/_services/cash-register.service.ts","./src/app/_services/cashier.service.ts","./src/app/cashier/cashier-routing.module.ts"],"names":[],"mappings":"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","file":"cashier-cashier-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CashierService } from 'src/app/_services/cashier.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-add-cashier',\n  templateUrl: './add-cashier.component.html',\n  styleUrls: ['./add-cashier.component.css']\n})\nexport class AddCashierComponent implements OnInit {\n\n   /**\n   * title to display\n   */\n  title = \"Ajouter un caissier\";\n\n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    private cashierService: CashierService\n  ) { }\n\n  ngOnInit(): void { }\n\n  /**\n   * add a new object\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let cashier = data.cashier;\n    let action = data.action;\n     \n    this.cashierService.save(cashier).subscribe(cashier => {\n\n      switch (action) {\n        case 'save':\n          this.router.navigate(['/cashier/list']);\n          this.alertService.success('Caissier ajouté avec succès')\n          break;\n\n        case 'save_and_new':\n          this.router.navigate(['/cashier/add']);\n          this.alertService.success('Caissier ajoutée avec succès')\n\n          break;\n\n        default: this.router.navigate(['/cashier/list']);\n          this.alertService.error('Ajout annulée')\n\n          break;\n      }\n    },\n    error => {\n      this.alertService.error(error)\n    }\n    );\n  }\n\n}\n","<app-cashier-form [title]='title' (objectEmitter)=\"save($event)\"></app-cashier-form>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Cashier } from 'src/app/_models/cahier.model';\nimport { CashRegisterService } from 'src/app/_services/cash-register.service';\nimport { CashierService } from 'src/app/_services/cashier.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { disableItem } from 'src/app/_utility/disable-item';\nimport { enableItem } from 'src/app/_utility/enable-item';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-cashier-list',\n  templateUrl: './cashier-list.component.html',\n  styleUrls: ['./cashier-list.component.css']\n})\nexport class CashierListComponent implements OnInit {\n   \n   /**\n     * search formGroup\n     */\n    public form: FormGroup;\n\n    /**\n     * entries formGroup\n     */\n    public entryForm: FormGroup;\n  \n    /**\n     * init first page\n     */\n    public page = 0;\n  \n    /**\n     * number of item par page default 10\n     */\n    public perPage = 10;\n  \n    /**\n     * total items\n     */\n    public totalItem: number;\n  \n    /**\n     * number of page\n     */\n    public pages: number;\n  \n    /**\n     * handle the spinner\n     */\n    public loading = true;\n  \n    /**\n     * the selected item a action\n     */\n    public selectedItem: number;\n  \n    /**\n     * collection of object\n     */\n    cashiers: Cashier[];\n\n\n    /**\n     * define the cash register options\n     */\n    cashRegisters: object;\n\n    /**\n     * define the user options\n     */\n    users: object;\n  \n    /**\n     * Define entries options\n     */\n    entries = [\n      { id: 10, value: 10 },\n      { id: 25, value: 25 },\n      { id: 50, value: 50 },\n      { id: 100, value: 100 }\n    ];\n  \n    /**\n    * define  states options\n    */\n    actives = [\n      { id: \"Y\", value: \"Actif\" },\n      { id: \"N\", value: \"Inactif\" },\n    ]\n  \n    /**\n     *  order direction\n     */\n    order = 'desc';\n  \n    /**\n     * order column default id\n     */\n    sort = 'id';\n  \n    /**\n     * description of the order direction\n     */\n    orderDescription = 'decroissant';\n\n   /**\n    * define if request result has datas or no\n    */\n   hasNoData: boolean;\n\n   /**\n    * Msg to display when request result is empty\n    */\n   EmptyMessage: String;\n  \n   /**\n    * page title\n    */\n    @Input()\n    title: string;\n  \n    constructor(\n      private cashierService: CashierService,\n      private userService: UserService,\n      private cashRegisterService: CashRegisterService\n    ) { }\n  \n    ngOnInit() {\n      this.initForm();\n      this.userService.getIdAndName().subscribe(res => { this.users = res;});\n      this.cashRegisterService.getIdAndName().subscribe( res => { this.cashRegisters = res});\n      this.getCashiers();\n    }\n  \n  \n    /**\n     *  init form \n     */\n    initForm() {\n      this.form = new FormGroup({\n        firstName: new FormControl(''),\n        lastName: new FormControl(''),\n        cashRegister: new FormControl(null),\n        phoneContact: new FormControl(''),\n        active: new FormControl(null),\n      })\n  \n      this.entryForm = new FormGroup({\n        entries: new FormControl(10),\n      })\n    }\n  \n    /**\n     * get list\n     */\n    getCashiers() {\n      let data = this.form.value\n      data.entries = this.entryForm.get('entries').value;\n      data.page = this.page;\n      data.order = this.order;\n      data.sort = this.sort;\n     \n      this.cashierService.findAllByPage(data).subscribe(\n        res => {\n          if (res) {\n            this.loading = false;\n            this.hasNoData=false;\n            this.totalItem = res['totalElements'];\n            this.pages = res['totalPages'];\n            this.cashiers = res['content'];\n            this.page = res['pageNumber'] + 1;\n          };\n        },\n        error =>{\n              this.cashiers = [];\n              this.loading=false;\n              this.hasNoData=true;\n              this.EmptyMessage=error;\n        })\n    }\n  \n   \n  /**\n   * search function\n   */\n  search() {\n    this.loading = true;\n    this.page =this.page > 0 ? this.page - 1: 0;\n    this.getCashiers();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n    this.loading= true;\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getCashiers();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getCashiers();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.loading = true;\n    this.perPage = this.entryForm.get('entries').value;\n    this.page = this.page - 1;\n    this.getCashiers();\n  }\n\n  /**\n   * set the selected item \n   * @param item \n   */\n  onItemChange(item) {\n    this.selectedItem = item;\n  }\n\n  /**\n   * disable an object\n   */\n  disable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment desactiver ce caissier?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n      if (result.value) {\n\n        this.cashierService.disable(this.selectedItem).subscribe(result => {\n          //disable item in the DOM\n          if (result) disableItem(this.cashiers, result['id']);\n\n          Swal.fire(\n            'Desactivé!',\n            'caissier desactiver avec succès.',\n            'success'\n          );\n\n        });\n\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'le caissier n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n\n  /**\n   * enable an object\n   */\n  enable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Activer ce caissier?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n\n      if (result.value) {\n        this.cashierService.enable(this.selectedItem).subscribe(result => {\n          //Enable item in the Dom\n          if (result) enableItem(this.cashiers, result['id']);\n\n          Swal.fire(\n            'Actvé!',\n            'caissier activé avec succès.',\n            'success'\n          );\n\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'Le caissier n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"row pl-3 pr-3\">\n            <div class=\"col-md-7\">\n                <form [formGroup]=\"form\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                            <div class=\"form-group\">\n                                <div class=\"input-group input-group-sm\">\n                                    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\n                                        placeholder=\"Nom\">\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"input-group input-group-sm\">\n                                    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\n                                        placeholder=\"prenom\">\n                                </div>\n                            </div>\n\n                        </div>\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"phoneContact\" class=\"form-control\"\n                                            placeholder=\"telephone\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"cashRegister\" placeholder=\" Caisse \" style=\"width: 100%;\">\n                                            <ng-option *ngFor=\"let cashRegister of cashRegisters\" [value]=\"cashRegister.id\">\n                                                {{cashRegister.name}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-3 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"active\" placeholder=\" Etat \" style=\"width: 100%;\">\n                                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">\n                                                {{active.value}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                            <div class=\"col-lg-12 col-md-12 col-sm-12 mb-1\">\n                                <span class=\"btn btn-light btn-sm\" (click)=\"search()\" style=\"width: 100%;\">\n                                    <i class=\"fas fa-search\"></i>\n                                </span>\n                            </div>\n                            </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-5\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/cashier/add\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold text-nowrap text-white\">\n                                <i class=\"fas fa-list mr-2\"></i>\n                                Nouveau\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/cashier/update/{{selectedItem}}\"\n                                class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-pen-alt mr-2\"></i>\n                                Modifier\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"enable()\"\n                                class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-on mr-2\"></i>\n                                Activer\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"disable()\"\n                                class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-off mr-2\"></i>\n                                Desactiver\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-10 text-center text-muted\">\n                <h4>{{title}}</h4>\n            </div>\n            <div class=\"col-md-2 text-right\">\n                <form [formGroup]=\"entryForm\">\n                     <div class=\"row\">\n                        <div for=\"entries\" class=\"col-sm-12 text-right mt-1\"> Afficher</div>\n                        <div class=\"col-sm-12 mb-2\">\n                            <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\"\n                                (change)=\"OnEntryChange()\">\n                                <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\n                            </ng-select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-sm table-hover table-bordered \">\n                <thead class=\"thead-light text-center\">\n                    <tr>\n                        <th scope=\"col\"></th>\n                        <th>ID</th>\n                        <th scope=\"col\">Nom</th>\n                        <th scope=\"col\">Prenom</th>\n                        <th scope=\"col\">Caisse</th>\n                        <th scope=\"col\">Talephone</th>\n                        <th scope=\"col\">Etat <i class=\"fa fa-sort ml-2\" (click)=\"onSort('active')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">crée le </th>\n                        <th scope=\"col\">crée par</th>\n                        <th scope=\"col\">Dernière modif.</th>\n                        <th scope=\"col\">Modifié par</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let cashier of cashiers\">\n                        <th class=\"text-center\" scope=\"row\">\n                            <div class=\"custom-control custom-radio\">\n                                <input type=\"radio\" class=\"custom-control-input\" id=\"{{cashier.id}}\"\n                                    name=\"radio-stacked\" value=\"{{cashier.id}}\"\n                                    (change)=\"onItemChange($event.target.value)\">\n                                <label class=\"custom-control-label\" for=\"{{cashier.id}}\"></label>\n                            </div>\n                        </th> \n                       <td>{{cashier.id}}</td>\n                        <td class=\"text-capitalize\">{{cashier.userFirstName}}</td>\n                        <td class=\"text-capitalize\">{{cashier.userLastName}}</td>\n                        <td class=\"text-capitalize\">{{cashier.cashRegister}}</td>\n                        <td class=\"text-capitalize\">{{cashier.userPhoneContact}}</td>\n                        <td class=\"text-capitalize text-center\">\n                            <i class=\"fas fa-circle\"\n                                [ngClass]=\"{'text-green': cashier.active=='Y', 'text-red': cashier.active=='N'}\"\n                                ngbTooltip=\"{{cashier.active=='Y'? 'Actif' : 'Inactif'}}\"></i>\n                        </td>\n                        <td class=\"text-center\">{{cashier.createdAt | date:'dd/MM/yyyy H:mm:ss'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{cashier.createdByFirstName +' '+ cashier.createdByLastName}}</td>\n                        <td class=\"text-center text-center text-nowrap\">{{cashier.updatedAt ? (cashier.updatedAt | date:'dd/MM/yyyy H:mm:ss') : 'Jamais modifié'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{cashier.UpdatedByFirstName ? cashier.UpdatedByFirstName +' '+ cashier.UpdatedByLastName : ''}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"text-center mb-5 mt-4\">\n            <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n            <div *ngIf=\"hasNoData\" class=\"mt-3\">\n                <span class=\"text-muted ml-3 \" >{{EmptyMessage}}</span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-7 offset-md-5\">\n                <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n                    (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n            </div>\n\n        </div>\n    </div>\n</div>","/**\r\n * disable object from the DOM whithout refresh the page  after  disabling from the database\r\n * @param array array of objects\r\n * @param rowId row to disable\r\n */\r\nexport function disableItem( array : any, rowId : number){\r\n    for (let i = 0; i < array.length; ++i) {\r\n      \r\n        if (array[i].id === rowId) {\r\n            array[i].active = 'N'; \r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CashierRoutingModule } from './cashier-routing.module';\nimport { AddCashierComponent } from './add-cashier/add-cashier.component';\nimport { UpdateCashierComponent } from './update-cashier/update-cashier.component';\nimport { ListCashierComponent } from './list-cashier/list-cashier.component';\nimport { CashierFormComponent } from '../_shared/cashier/cashier-form/cashier-form.component';\nimport { CashierListComponent } from '../_shared/cashier/cashier-list/cashier-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgbPaginationModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\n\n\n@NgModule({\n  declarations: [\n    AddCashierComponent, \n    UpdateCashierComponent, \n    ListCashierComponent,\n    CashierFormComponent,\n    CashierListComponent,\n  ],\n  imports: [\n    CommonModule,\n    CashierRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    NgbPaginationModule, \n    NgbTooltipModule\n  ]\n})\nexport class CashierModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Cashier } from 'src/app/_models/cahier.model';\nimport { CashRegisterService } from 'src/app/_services/cash-register.service';\nimport { CashierService } from 'src/app/_services/cashier.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\n\n@Component({\n  selector: 'app-cashier-form',\n  templateUrl: './cashier-form.component.html',\n  styleUrls: ['./cashier-form.component.css']\n})\nexport class CashierFormComponent implements OnInit {\n\n  /**\n   *   form Group\n   */\n  form: FormGroup;\n\n  /**\n  * form submission action, it will get the value of the action to do\n  */\n  formAction = '';\n\n  /** \n  * invalid from controls\n  */\n  invalidFormControls: any;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  cashierId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * child component output\n   */\n  @Output()\n  objectEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * the component model\n   */\n  cashier: Cashier\n\n  /**\n   * define user options;\n   */\n  users: object;\n\n  /**\n   * define cash register options\n   */\n  cashRegisters: object;\n\n  /**\n  * define  states options\n  */\n  actives = [\n    { id: \"Y\", value: \"Actif\" },\n    { id: \"N\", value: \"Inactif\" },\n  ]\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   * @param redirectTo \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n\n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    private cashierService: CashierService,\n    private cashRegisterService: CashRegisterService,\n    private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    if (this.cashierId) this.initUpdateAction();\n    this.cashRegisterService.getIdAndName().subscribe(res => { this.cashRegisters = res});\n    this.userService.getIdAndName().subscribe(res => { this.users = res});\n\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      id: new FormControl(0),\n      user: new FormControl(null, Validators.required),\n      cashRegister: new FormControl(null, Validators.required),\n      active: new FormControl('Y', Validators.required),\n    });\n  }\n\n  /**\n   * init the form value when updating\n   */\n  initUpdateAction() {\n\n    this.cashierService.findById(this.cashierId).subscribe(\n      res => {\n        if (res) {\n          this.cashier = res;\n           this.form.get(\"id\").setValue(this.cashier['id']);\n           this.form.get(\"user\").setValue(this.cashier['userId']);\n           this.form.get(\"cashRegister\").setValue(this.cashier['cashRegisterId']);\n           this.form.get('active').setValue(this.cashier['active']);\n        } else {\n          this.errorAction(\"Modification impossible car le caissier n'existe pas\", '/cashier/list');\n        }\n      },\n      error => {\n        this.errorAction(\"Erreur lors de la modification\", '/cashier/list');\n\n      })\n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the object\n    */\n  save() {\n    // reset alerts on submit\n    this.alertService.clear();\n\n    //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    this.cashier = this.form.value;\n\n    if (this.form.valid) {\n      this.objectEmitter.emit({ cashier: this.cashier, action: this.formAction })\n      if (this.formAction == \"save_and_new\") this.initForm();\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n  /**\n   * get the form submission action\n   * @param action : string\n   */\n  actionToDo(action) {\n    this.formAction = action;\n  }\n\n  /**\n   * action to Do when  ckick on cancel button\n   */\n  cancelAction() {\n    this.errorAction('Action annulée', '/cashier/list');\n  }\n\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"mr-auto p-2 col-md-6\">\n                    <h3>{{title}}</h3>\n                </div>\n                <div class=\"col-md-5\">\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <button type=\"submit\" (click)=\"actionToDo('save')\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold\" value=\"save\">\n                                Enregistrer\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\" *ngIf='!cashierId'>\n                            <button type=\"submit\" (click)=\"actionToDo('save_and_new')\"\n                                class=\"btn btn-block btn-info btn-sm font-weight-bold\" value=\"save_and_new\">\n                                Enreg. & nouveau\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <span (click)=\"cancelAction()\" class=\"btn btn-block btn-danger btn-sm font-weight-bold\"\n                                value=\"cancel\">\n                                Annuler\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <p class=\"text-muted\"> NB: les champs marqués d'un astérisque ( <span class=\"text-danger\">*</span> ) sont\n                obligatoire pour la validation du formulare</p>\n            <div class=\"row\">\n                <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                    <div class=\"form-group\">\n                        <label for=\"user\">Caissier</label>\n                        <span class=\"text-red\">*</span>\n                        <ng-select formControlName=\"user\" placeholder=\"Caissier\">\n                            <ng-option *ngFor=\"let user of users\" [value]=\"user.id\">{{user.lastName + \" \"+ user.firstName}}</ng-option>\n                        </ng-select>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.user\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-lg-2 col-md-6 col-sm-12\">\n                    <div class=\"form-group\">\n                        <label for=\"cashRegister\">Caisse</label>\n                        <span class=\"text-red\">*</span>\n                        <ng-select formControlName=\"cashRegister\" placeholder=\"Caisse\">\n                            <ng-option *ngFor=\"let cashRegister of cashRegisters\" [value]=\"cashRegister.id\">{{cashRegister.name}}</ng-option>\n                        </ng-select>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.cashRegister\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-lg-2 col-md-6 col-sm-12\">\n                    <div class=\"form-group\">\n                        <label for=\"typeactive\">Etat</label>\n                        <span class=\"text-red\">*</span>\n                        <ng-select formControlName=\"active\">\n                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">{{active.value}}</ng-option>\n                        </ng-select>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.active\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <!-- hidden -->\n            <input type=\"hidden\" formControlName=\"id\">\n        </div>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-cashier',\n  templateUrl: './list-cashier.component.html',\n  styleUrls: ['./list-cashier.component.css']\n})\nexport class ListCashierComponent implements OnInit {\n\n    /**\n   * title to display\n   */\n  title = 'Liste des caissiers'; \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-cashier-list [title]='title'></app-cashier-list>","/**\r\n * enable object from the DOM whithout refresh the page  after  enabling from the database\r\n * @param array array of objects\r\n * @param rowId row to enable\r\n */\r\nexport function enableItem( array : any, rowId : number){\r\n    for (let i = 0; i < array.length; ++i) {\r\n      \r\n        if (array[i].id === rowId) {\r\n            array[i].active = 'Y'; \r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CashierService } from 'src/app/_services/cashier.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-update-cashier',\n  templateUrl: './update-cashier.component.html',\n  styleUrls: ['./update-cashier.component.css']\n})\nexport class UpdateCashierComponent implements OnInit {\n\n /**\n  * object id \n  */\n cashierId :  number;\n  \n /**\n  * title to display\n  */\n title = \"Modification d'un caissier\";\n \n constructor(\n   private router: Router,\n   private activatedRoute: ActivatedRoute,\n   private cashierService: CashierService,\n   private alertService: AlertService\n ) { }\n\n ngOnInit(): void {\n   this.activatedRoute.params.subscribe(params=>{\n      this.cashierId = params.id;\n   })\n }\n\n /**\n  * update existing object\n  * @param data object\n  */\n save(data) {\n  \n   let cashier = data.cashier;\n   let action = data.action;\n   \n   this.cashierService.update(cashier).subscribe(res => {\n        this.router.navigate(['/cashier/list']);\n        this.alertService.success('Caissier modifié avec succès')\n   });\n }\n\n}\n","<app-cashier-form [cashierId]=\"cashierId\" [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-cashier-form>\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { CashRegister } from '../_models/cashRegister.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CashRegisterService {\n\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(cashRegister: CashRegister): Observable<CashRegister> {\n    return this.http.post<CashRegister>(environment.baseUrl2 + '/cash-register/add', cashRegister);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<CashRegister> {\n    return this.http.put<CashRegister>(environment.baseUrl2 + '/cash-register/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<CashRegister[]> {\n    return this.http.get<CashRegister[]>(environment.baseUrl2 + '/cash-register/list');\n  }\n\n  /**\n * get a paginated list of object\n */\n  findAllByPage(data): Observable<CashRegister[]> {\n    let queryParams = {};\n    data['active'] = (data['active'] == null) ? '' : data['active'];\n    //  data['deleted']= (data['deleted'] == null) ? '' : data['deleted'];\n\n    queryParams = {\n      params: new HttpParams().set('page', data['page'])\n        .set('size', data['entries'])\n        .set('name', data['name'])\n        .set('active', data['active'])\n        .set('sort', data['sort'] + ',' + data['order'])\n    };\n    return this.http.get<CashRegister[]>(environment.baseUrl2 + '/cash-register/p_list', queryParams);\n  }\n\n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<CashRegister[]> {\n    return this.http.get<CashRegister[]>(environment.baseUrl2 + '/cash-register/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id): Observable<CashRegister> {\n    return this.http.get<CashRegister>(environment.baseUrl2 + '/cash-register/enable/' + id);\n\n  }\n\n  /**\n   * disable a object\n   */\n  disable(id): Observable<CashRegister> {\n    return this.http.get<CashRegister>(environment.baseUrl2 + '/cash-register/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<CashRegister> {\n    return this.http.get<CashRegister>(environment.baseUrl2 + '/cash-register/detail/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/cash-register/active_cash_registers_name');\n  }\n\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Cashier } from '../_models/cahier.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CashierService {\n\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(cashier: Cashier): Observable<Cashier> {\n    return this.http.post<Cashier>(environment.baseUrl2 + '/cashier/add', cashier);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<Cashier> {\n    return this.http.put<Cashier>(environment.baseUrl2 + '/cashier/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<Cashier[]> {\n    return this.http.get<Cashier[]>(environment.baseUrl2 + '/cashier/list');\n  }\n\n  /**\n * get a paginated list of object\n */\n  findAllByPage(data): Observable<Cashier[]> {\n    let queryParams = {};\n    data['active'] = (data['active'] == null) ? '' : data['active'];\n    data['cashRegister'] = (data['cashRegister'] == null) ? '' : data['cashRegister'];\n    \n    queryParams = {\n      params: new HttpParams()\n        .set('firstName', data['firstName'])\n        .set('lastName', data['lastName'])\n        .set('phoneContact', data['phoneContact'])\n        .set('cashRegister', data['cashRegister'])\n        .set('active', data['active'])\n        .set('sort', data['sort'] + ',' + data['order'])\n        .set('page', data['page'])\n        .set('size', data['entries'])\n    };\n    return this.http.get<Cashier[]>(environment.baseUrl2 + '/cashier/p_list', queryParams);\n  }\n\n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<Cashier[]> {\n    return this.http.get<Cashier[]>(environment.baseUrl2 + '/cashier/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id): Observable<Cashier> {\n    return this.http.get<Cashier>(environment.baseUrl2 + '/cashier/enable/' + id);\n\n  }\n\n  /**\n   * disable a object\n   */\n  disable(id): Observable<Cashier> {\n    return this.http.get<Cashier>(environment.baseUrl2 + '/cashier/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<Cashier> {\n    return this.http.get<Cashier>(environment.baseUrl2 + '/cashier/detail/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/cashier/active_cashiers_name');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddCashierComponent } from './add-cashier/add-cashier.component';\nimport { ListCashierComponent } from './list-cashier/list-cashier.component';\nimport { UpdateCashierComponent } from './update-cashier/update-cashier.component';\n\nconst routes: Routes = [\n  {path:\"add\", component:AddCashierComponent},\n  {path:\"update/:id\", component: UpdateCashierComponent},\n  {path:\"list\", component:ListCashierComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CashierRoutingModule { }\n"],"sourceRoot":"webpack:///"}