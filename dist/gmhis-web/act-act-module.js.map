{"version":3,"sources":["./src/app/act/act-routing.module.ts","./src/app/_shared/act/act-category-form/act-category-form.component.ts","./src/app/_shared/act/act-category-form/act-category-form.component.html","./src/app/act/list-act-family/list-act-family.component.ts","./src/app/act/list-act-family/list-act-family.component.html","./src/app/act/update-act/update-act.component.ts","./src/app/act/update-act/update-act.component.html","./src/app/act/list-act/list-act.component.ts","./src/app/act/list-act/list-act.component.html","./src/app/act/list-act-category/list-act-category.component.ts","./src/app/act/list-act-category/list-act-category.component.html","./src/app/act/add-act-code/add-act-code.component.ts","./src/app/act/add-act-code/add-act-code.component.html","./src/app/_shared/act/act-form/act-form.component.ts","./src/app/_shared/act/act-form/act-form.component.html","./src/app/_shared/act/act-list/act-list.component.ts","./src/app/_shared/act/act-list/act-list.component.html","./src/app/act/list-act-code/list-act-code.component.ts","./src/app/act/list-act-code/list-act-code.component.html","./src/app/_shared/act/act-family-list/act-family-list.component.ts","./src/app/_shared/act/act-family-list/act-family-list.component.html","./src/app/_utility/disable-item.ts","./src/app/act/update-act-code/update-act-code.component.ts","./src/app/act/update-act-code/update-act-code.component.html","./src/app/_shared/act/act-category-list/act-category-list.component.ts","./src/app/_shared/act/act-category-list/act-category-list.component.html","./src/app/act/add-act-family/add-act-family.component.ts","./src/app/act/add-act-family/add-act-family.component.html","./src/app/act/act.module.ts","./src/app/_services/act.service.ts","./src/app/act/update-act-family/update-act-family.component.ts","./src/app/act/update-act-family/update-act-family.component.html","./src/app/_shared/act/act-code-form/act-code-form.component.ts","./src/app/_shared/act/act-code-form/act-code-form.component.html","./src/app/act/add-act/add-act.component.ts","./src/app/act/add-act/add-act.component.html","./src/app/_shared/act/act-family-form/act-family-form.component.ts","./src/app/_shared/act/act-family-form/act-family-form.component.html","./src/app/_shared/act/act-code-list/act-code-list.component.ts","./src/app/_shared/act/act-code-list/act-code-list.component.html","./src/app/_utility/enable-item.ts","./src/app/act/update-act-category/update-act-category.component.ts","./src/app/act/update-act-category/update-act-category.component.html","./src/app/act/add-act-category/add-act-category.component.ts","./src/app/act/add-act-category/add-act-category.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACiC;AACZ;AACM;AACpB;AAC6B;AACZ;AACM;AACpB;AACgC;AACZ;AACM;AACpB;;;AAEvE,MAAM,MAAM,GAAW;IAErB,MAAM;IACN,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAC,0EAAe,EAAE;IAC1C,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAC,oFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,6EAAgB,EAAE;IAE5C,WAAW;IACX,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAC,oGAAuB,EAAE;IAC3D,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAC,8GAA0B,EAAE;IACrE,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAC,uGAAwB,EAAE;IAE7D,SAAS;IACT,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAC,8FAAqB,EAAE;IACvD,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAC,wGAAwB,EAAE;IACjE,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAC,iGAAsB,EAAE;IAEzD,OAAO;IACP,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAC,wFAAmB,EAAE;IACnD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAC,kGAAsB,EAAE;IAC7D,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAC,2FAAoB,EAAE;CACtD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACzCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AACX;AAKc;;;;;;;;;;ICS1D,yEACI;IAAA,6EAEI;IAFmB,yTAAoB,cAAc,KAAE;IAEvD,6EACJ;IAAA,4DAAS;IACb,4DAAM;;;IAqBN,2EACI;IAAA,mGACJ;IAAA,4DAAO;;;IAQX,gFAA8D;IAAA,uDAAgB;IAAA,4DAAY;;;IAAhD,+EAAmB;IAAC,0DAAgB;IAAhB,gFAAgB;;;IAElF,2EACI;IAAA,mGACJ;IAAA,4DAAO;;AD1ChB,MAAM,wBAAwB;IA4DnC,YACU,MAAc,EACd,YAA2B,EAC3B,kBAAsC;QAFtC,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAe;QAC3B,uBAAkB,GAAlB,kBAAkB,CAAoB;QAxDhD;;UAEE;QACF,eAAU,GAAG,EAAE,CAAC;QAoBhB;;WAEG;QAEH,kBAAa,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAOrD;;UAEE;QACH,YAAO,GAAG;YACR,EAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAC;YACzB,EAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC;SAC5B;QAED;;;;WAIG;QACH,gBAAW,GAAG,UAAU,GAAW,EAAE,UAAkB;YACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC;IAOE,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,aAAa;YAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,EAAE,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;YACtB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,MAAM,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAElD,CAAC,CAAC;IACL,CAAC;IACD;;OAEG;IACH,gBAAgB;QACZ,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAC5D,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;gBACvB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC;aACvC;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,uDAAuD,EAAE,oBAAoB,CAAC,CAAC;aACjG;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,WAAW,CAAC,gCAAgC,EAAE,oBAAoB,CAAC,CAAC;QAC3E,CAAC,CAAC;IACR,CAAC;IAED;;QAEI;IACJ,IAAI;QACF,yBAAyB;QACzB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAE1B,iBAAiB;QACjB,IAAI,CAAC,mBAAmB,GAAG,sGAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAEnC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;YACnF,IAAI,IAAI,CAAC,UAAU,IAAI,cAAc;gBAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;SACxD;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;SACjD;IACH,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,CAAC;IAC3D,CAAC;;gGApIU,wBAAwB;wGAAxB,wBAAwB;QCbrC,0EACI;QADqB,oJAAY,UAAM,IAAC;QACxC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,uDAAS;QAAA,4DAAK;QACtB,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,6EAEI;QAFmB,iJAAS,eAAW,MAAM,CAAC,IAAC;QAE/C,yEACJ;QAAA,4DAAS;QACb,4DAAM;QACN,sHACI;QAKJ,0EACI;QAAA,2EAEI;QAFE,+IAAS,kBAAc,IAAC;QAE1B,qEACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,yEAAuB;QAAA,gHAAyC;QAAA,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAC,+GACpD;QAAA,4DAAI;QACnD,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EAAkB;QAAA,+EAAmB;QAAA,4DAAQ;QAC7C,2EACI;QAAA,wEACJ;QAAA,4DAAM;QACN,yHACI;QAER,4DAAM;QACV,4DAAM;QACV,2EACI;QAAA,2EACI;QAAA,6EAAwB;QAAA,gEAAI;QAAA,4DAAQ;QACpC,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QAChC,iFACC;QAAA,mIAA8D;QAClE,4DAAY;QACZ,yHACI;QAER,4DAAM;QACF,4DAAM;QACV,4DAAM;QAEN,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAO;;QA/DD,+EAAkB;QAKA,0DAAS;QAAT,0EAAS;QAUmD,0DAAsB;QAAtB,oFAAsB;QA0BxD,2DAAuD;QAAvD,yHAAuD;QAU1E,0DAA8B;QAA9B,gFAA8B;QAEnB,0DAAyD;QAAzD,2HAAyD;;6FDxCtF,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;sSAuBC,aAAa;kBADZ,mDAAK;YAON,KAAK;kBADJ,mDAAK;YAON,aAAa;kBADZ,oDAAM;;;;;;;;;;;;;;AE9CT;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,sBAAsB;IAMjC;QAJA;;WAEG;QACH,UAAK,GAAG,6BAA6B,CAAC;IACtB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FATU,sBAAsB;sGAAtB,sBAAsB;QCPnC,oFAA2D;;QAAtC,4EAAe;;6FDOvB,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,kBAAkB;IAc9B,YACU,MAAc,EACd,cAA8B,EAC9B,UAAsB,EACtB,YAA0B;QAH1B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAVpC;;WAEG;QACH,UAAK,GAAG,wBAAwB,CAAC;IAQ7B,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC5C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,IAAI,CAAC,IAAI;QAEP,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACnB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAEzB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,0BAA0B,CAAC;QACvD,CAAC,CAAC;IACJ,CAAC;;oFAxCW,kBAAkB;kGAAlB,kBAAkB;QCV/B,kFAA6F;QAA9C,sKAAiB,gBAAY,IAAC;QAAC,4DAAe;;QAA/E,4EAAe;;6FDUhB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,gBAAgB;IAM3B;QAJA;;WAEG;QACH,UAAK,GAAG,iBAAiB,CAAC;IACV,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFATU,gBAAgB;gGAAhB,gBAAgB;QCP7B,6EAA6C;;QAA/B,4EAAe;;6FDOhB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,wBAAwB;IAOnC;QALC;;UAEE;QACH,UAAK,GAAC,6BAA6B,CAAC;IAEpB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gGAVU,wBAAwB;wGAAxB,wBAAwB;QCPrC,sFAA+D;;QAAxC,4EAAe;;6FDOzB,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,mBAAmB;IAO9B,YACU,MAAc,EACd,YAA0B,EAC1B,cAA8B;QAF9B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QARvC;;UAEE;QACH,UAAK,GAAG,sBAAsB,CAAC;IAM3B,CAAC;IAEL,QAAQ;IAER,CAAC;IAED;;;;OAIG;IACH,IAAI,CAAC,IAAI;QAEP,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAEzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAEpD,QAAQ,MAAM,EAAE;gBACd,KAAK,MAAM;oBACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,yBAAyB,CAAC;oBACpD,MAAM;gBAER,KAAK,cAAc;oBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBACvC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,yBAAyB,CAAC;oBAEpD,MAAM;gBAER;oBAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;oBAC/C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,CAAC;oBAExC,MAAM;aACT;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IAEL,CAAC;;sFAnDU,mBAAmB;mGAAnB,mBAAmB;QCVhC,uFAAuF;QAAnD,4KAAiB,gBAAY,IAAC;QAAC,4DAAoB;;QAApE,4EAAe;;6FDUrB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AACX;AAQU;AACI;;;;;;;;;;;;;ICK1D,yEACI;IAAA,6EAEI;IAFkB,oTAAoB,cAAc,KAAE;IAEtD,6EACJ;IAAA,4DAAS;IACb,4DAAM;;;IAsBN,2EACI;IAAA,mGACJ;IAAA,4DAAO;;;IAUP,2EACI;IAAA,mGACJ;IAAA,4DAAO;;;IAWP,2EACI;IAAA,2GACJ;IAAA,4DAAO;;;IAQH,gFAA8D;IAAA,uDAAgB;IAAA,4DAAY;;;IAAhD,gFAAmB;IAAC,0DAAgB;IAAhB,iFAAgB;;;IAElF,2EACI;IAAA,mGACJ;IAAA,4DAAO;;;IAUH,gFAAqE;IAAA,uDAAiB;IAAA,4DAAY;;;IAAnD,kFAAqB;IAAC,0DAAiB;IAAjB,kFAAiB;;;IAE1F,2EACI;IAAA,mGACJ;IAAA,4DAAO;;;IAQH,gFAA+D;IAAA,uDAAe;IAAA,4DAAY;;;IAA/C,gFAAmB;IAAC,0DAAe;IAAf,gFAAe;;;IAElF,2EACI;IAAA,mGACJ;IAAA,4DAAO;;;IAQH,gFAAkE;IAAA,uDAAgB;IAAA,4DAAY;;;IAAlD,iFAAoB;IAAE,0DAAgB;IAAhB,iFAAgB;;;IAEtF,2EACI;IAAA,mGACJ;IAAA,4DAAO;;ADtGxB,MAAM,gBAAgB;IA0E3B,YACU,MAAc,EACd,YAA2B,EAC3B,UAAsB,EACtB,kBAAsC,EACtC,cAA8B,EAC9B,gBAAkC;QALlC,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAe;QAC3B,eAAU,GAAV,UAAU,CAAY;QACtB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAzE5C;;UAEE;QACF,eAAU,GAAG,EAAE,CAAC;QAmBhB;;WAEG;QAEH,kBAAa,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAOrD;;UAEE;QACH,YAAO,GAAG;YACR,EAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAC;YACzB,EAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC;SAC5B,CAAC;QAiBF;;;;WAIG;QACH,gBAAW,GAAG,UAAU,GAAW,EAAE,UAAkB;YACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC;IAUE,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,GAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7E,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEjF,CAAC;IAED;;OAEG;IACH,QAAQ;QACL,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACzB,EAAE,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;YACtB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtD,MAAM,EAAE,IAAI,0DAAW,CAAC,GAAG,CAAC;YAC5B,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,0FAAW,CAAC,CAAC;YACrE,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAErD,CAAC,CAAC;IACL,CAAC;IAGD;;OAEG;IACH,gBAAgB;QAEd,IAAI,IAAI,CAAC,KAAK,EAAE;YAEd,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC5C,GAAG,CAAC,EAAE;gBACJ,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;oBACf,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;iBAC3B;qBAAM;oBACL,IAAI,CAAC,WAAW,CAAC,oDAAoD,EAAE,WAAW,CAAC,CAAC;iBACrF;YACH,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,IAAI,CAAC,WAAW,CAAC,gCAAgC,EAAE,WAAW,CAAC,CAAC;YAElE,CAAC,CAAC;SACL;IACH,CAAC;IAED;;QAEI;IACJ,IAAI;QAEF,yBAAyB;QACzB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAE1B,iBAAiB;QACjB,IAAI,CAAC,mBAAmB,GAAG,sGAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAE3B,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;YACnE,IAAI,IAAI,CAAC,UAAU,IAAI,cAAc;gBAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;SACxD;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;SACjD;IACH,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;IAClD,CAAC;;gFAtKU,gBAAgB;gGAAhB,gBAAgB;QCjB7B,0EACI;QADqB,4IAAY,UAAM,IAAC;QACxC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,uDAAS;QAAA,4DAAK;QACtB,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,6EAEI;QAFkB,yIAAS,eAAW,MAAM,CAAC,IAAC;QAE9C,yEACJ;QAAA,4DAAS;QACb,4DAAM;QACN,8GACI;QAKJ,0EACI;QAAA,2EAEI;QAFE,uIAAS,kBAAc,IAAC;QAE1B,qEACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,yEAAuB;QAAA,gHAAyC;QAAA,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAC,+GACpD;QAAA,4DAAI;QACnD,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,2EACI;QAAA,wEACJ;QAAA,4DAAM;QACN,iHACI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAA0B;QAAA,wEAAY;QAAA,4DAAQ;QAC9C,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,2EACI;QAAA,wEACJ;QAAA,4DAAM;QACN,iHACI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAyB;QAAA,uEAAW;QAAA,4DAAQ;QAC5C,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,2EACI;QAAA,wEAEJ;QAAA,4DAAM;QACN,iHACI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAwB;QAAA,gEAAI;QAAA,4DAAQ;QACpC,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,iFACI;QAAA,2HAA8D;QAClE,4DAAY;QACZ,iHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EAAyB;QAAA,+EAAmB;QAAA,4DAAQ;QACpD,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,iFACI;QAAA,2HAAqE;QACzE,4DAAY;QACZ,iHACI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAsB;QAAA,6EAAiB;QAAA,4DAAQ;QAC/C,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,iFACI;QAAA,2HAA+D;QACnE,4DAAY;QACZ,iHACI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAqB;QAAA,qEAAS;QAAA,4DAAQ;QACtC,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,iFACI;QAAA,2HAAkE;QACtE,4DAAY;QACZ,iHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAO;;QA/HD,+EAAkB;QAKA,0DAAS;QAAT,0EAAS;QAUmD,0DAAc;QAAd,4EAAc;QA2BhD,2DAAuD;QAAvD,yHAAuD;QAYvD,0DAA+D;QAA/D,iIAA+D;QAa/D,0DAA8D;QAA9D,gIAA8D;QAUzE,0DAA8B;QAA9B,gFAA8B;QAEnB,0DAAyD;QAAzD,2HAAyD;QAYpE,0DAAmC;QAAnC,mFAAmC;QAExB,0DAA8D;QAA9D,gIAA8D;QAUzE,0DAA+B;QAA/B,iFAA+B;QAEpB,0DAA2D;QAA3D,6HAA2D;QAUtE,0DAAgC;QAAhC,iFAAgC;QAErB,0DAA0D;QAA1D,4HAA0D;;6FDpG/F,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;qjBAsBC,KAAK;kBADJ,mDAAK;YAON,KAAK;kBADJ,mDAAK;YAON,aAAa;kBADZ,oDAAM;;;;;;;;;;;;;;AEjDT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACW;AAIR;AACF;AACC;AAC5B;;;;;;;;;ICUa,gFACI;IAAA,uDACJ;IAAA,4DAAY;;;IAF8B,+EAAmB;IACzD,0DACJ;IADI,2FACJ;;;IAgEZ,gFAA4D;IAAA,uDAAe;IAAA,4DAAY;;;IAA9C,8EAAkB;IAAC,0DAAe;IAAf,+EAAe;;;;;IA6BvF,qEACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EAGA;IADI,kVAA4C;IAFhD,4DAGA;IAAA,uEAA6D;IACjE,4DAAM;IACV,4DAAK;IACL,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,yEAAwC;IAAA,uDAAY;IAAA,4DAAK;IACzD,yEAAoC;IAAA,wDAAmB;IAAA,4DAAK;IAC5D,0EAAoC;IAAA,wDAAgB;IAAA,4DAAK;IACzD,0EAAkD;IAAA,wDAAe;IAAA,4DAAK;IACtE,0EAAoC;IAAA,wDAAmB;IAAA,4DAAK;IAC5D,0EAAoC;IAAA,wDAA0B;IAAA,4DAAK;IACnE,0EACI;IAAA,oEAE8D;IAClE,4DAAK;IACL,0EAAoC;IAAA,wDAA6C;;IAAA,4DAAK;IACtF,0EAAwC;IAAA,wDAAsD;IAAA,4DAAK;IACnG,0EAAgD;IAAA,wDAAkF;;IAAA,4DAAK;IACvI,0EAAwC;IAAA,wDAAoF;IAAA,4DAAK;IACrI,4DAAK;;;;IAtBwD,0DAAe;IAAf,oFAAe;IACvC,uFAAkB;IAEP,0DAAgB;IAAhB,qFAAgB;IAGxD,0DAAoB;IAApB,oFAAoB;IACgB,0DAAY;IAAZ,4EAAY;IAChB,0DAAmB;IAAnB,mFAAmB;IACnB,0DAAgB;IAAhB,gFAAgB;IACF,0DAAe;IAAf,+EAAe;IAC7B,0DAAmB;IAAnB,mFAAmB;IACnB,0DAA0B;IAA1B,oGAA0B;IAItD,0DAAqD;IAArD,6HAAqD;IADrD,uLAAwE;IAG5C,0DAA6C;IAA7C,0KAA6C;IACzC,0DAAsD;IAAtD,2HAAsD;IAC9C,0DAAkF;IAAlF,qNAAkF;IAC1F,0DAAoF;IAApF,4JAAoF;;;IAMxI,0EACI;IAAA,2EAAsB;IAAA,qEAAU;IAAA,4DAAO;IAC3C,4DAAM;;;IACN,2EAA+C;IAAA,qEAAU;IAAA,4DAAO;;;IAChE,0EACI;IAAA,2EAAgC;IAAA,uDAAgB;IAAA,4DAAO;IAC3D,4DAAM;;;IAD8B,0DAAgB;IAAhB,oFAAgB;;;ADrIzD,MAAM,gBAAgB;IA2GzB,YACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAhGhC;;WAEG;QACI,SAAI,GAAG,CAAC,CAAC;QAEhB;;WAEG;QACI,YAAO,GAAG,EAAE,CAAC;QAYpB;;WAEG;QACI,YAAO,GAAG,IAAI,CAAC;QAkBtB;;WAEG;QACH,YAAO,GAAG;YACR,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;SACxB,CAAC;QAEH;;UAEE;QACH,YAAO,GAAG;YACR,EAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAC;YACzB,EAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC;SAC5B;QAEC;;WAEG;QACH,UAAK,GAAG,MAAM,CAAC;QAEf;;WAEG;QACH,SAAI,GAAG,IAAI,CAAC;QAEZ;;WAEG;QACH,qBAAgB,GAAG,aAAa,CAAC;QAkBjC;;WAEG;QACH,WAAM,GAAG,wEAAW,CAAC,MAAM,CAAC;IAIxB,CAAC;IAEL,QAAQ;QAEN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,EAAE,CAAC;IAEjB,CAAC;IAGD;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SAC9B,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC7B,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,OAAO;QACL,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAC3C,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC;gBACtC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC/B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;gBAC3B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;aACnC;YAAA,CAAC;QACJ,CAAC,EACD,KAAK,CAAC,EAAE;YACF,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;YACnB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;YACpB,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;QAC9B,CAAC,CAAC;IACN,CAAC;IAGH;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,GAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,UAAU;QACf,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC;QACnB,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,EAAE;YACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC;YACpC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;SACrB;QACD,IAAI,CAAC,gBAAgB,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED;;;OAGG;IACI,YAAY,CAAC,OAAe;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,aAAa;QACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED;;;OAGG;IACH,YAAY,CAAC,IAAI;QACf,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,OAAO;QACL,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,8CAA8C;YACrD,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,MAAM;YACzB,gBAAgB,EAAE,SAAS;SAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAEhB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAC5D,yBAAyB;oBACzB,IAAI,MAAM;wBAAE,gFAAW,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBAEjD,kDAAI,CAAC,IAAI,CACP,YAAY,EACZ,8BAA8B,EAC9B,SAAS,CACV,CAAC;gBAEJ,CAAC,CAAC,CAAC;aAEJ;iBAAM,IAAI,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBACvD,kDAAI,CAAC,IAAI,CACP,SAAS,EACT,+BAA+B,EAC/B,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,2CAA2C;YAClD,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,MAAM;YACzB,gBAAgB,EAAE,SAAS;SAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAEjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAC3D,wBAAwB;oBACxB,IAAI,MAAM;wBAAE,8EAAU,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBAEhD,kDAAI,CAAC,IAAI,CACP,QAAQ,EACR,0BAA0B,EAC1B,SAAS,CACV,CAAC;gBAEJ,CAAC,CAAC,CAAC;aACJ;iBAAM,IAAI,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBACvD,kDAAI,CAAC,IAAI,CACP,SAAS,EACT,+BAA+B,EAC/B,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;;gFAjSU,gBAAgB;gGAAhB,gBAAgB;QCf7B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,yEACQ;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAEJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,iFACI;QAAA,2HACI;QAER,4DAAY;QAChB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EACI;QAD+B,uIAAS,YAAQ,IAAC;QACjD,oEAA6B;QACjC,4DAAO;QACX,4DAAM;QACd,4DAAM;QACV,4DAAO;QACX,4DAAM;QACN,2EACI;QAAA,uEACI;QAAA,0EACI;QAAA,2EACI;QAAA,yEAEI;QAAA,oEAAgC;QAChC,qEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAAA,oEAAmC;QACnC,sEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAHD,oIAAS,YAAQ,IAAC;QAGjB,oEAAqC;QACrC,qEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAHD,oIAAS,aAAS,IAAC;QAGlB,oEAAsC;QACtC,wEACJ;QAAA,4DAAI;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,0EACI;QAAA,2EACI;QAAA,sEAAI;QAAA,wDAAS;QAAA,4DAAK;QACtB,4DAAM;QACN,2EACI;QAAA,2EACK;QAAA,0EACG;QAAA,2EAAsD;QAAA,qEAAQ;QAAA,4DAAM;QACpE,2EACI;QAAA,iFAEI;QADA,8IAAU,mBAAe,IAAC;QAC1B,2HAA4D;QAChE,4DAAY;QAChB,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,6EACI;QAAA,6EACI;QAAA,sEACI;QAAA,qEAAqB;QACrB,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,0EAAgB;QAAA,gEAAI;QAAA,yEAC2C;QADhB,oIAAS,WAAO,MAAM,CAAC,IAAC;QACZ,4DAAI;QAAA,4DAAK;QAC5D,0EAAgB;QAAA,qEAAS;QAAA,4DAAK;QAC9B,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,uEAAW;QAAA,4DAAK;QAChC,0EAAgB;QAAA,qEAAI;QAAA,4DAAK;QACjC,0EAAgB;QAAA,iEAAK;QAAA,yEAC0C;QADf,oIAAS,WAAO,QAAQ,CAAC,IAAC;QACf,4DAAI;QAAA,4DAAK;QACpE,0EAAgB;QAAA,yEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,yEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,gFAAe;QAAA,4DAAK;QACpC,0EAAgB;QAAA,4EAAW;QAAA,4DAAK;QACpC,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,+GACI;QAyBR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACN,2EACI;QAAA,+GACI;QAEJ,iHAA+C;QAC/C,+GACI;QAER,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,sFAC8F;QAD5B,sLAAe,mGAC/D,0BAAkB,IAD6C;QACJ,4DAAiB;QAClG,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA3JgB,0DAAkB;QAAlB,+EAAkB;QAce,2DAA8B;QAA9B,gFAA8B;QA0BtD,2DAAyC;QAAzC,wHAAyC;QAExC,8JAAwC;QAQxC,0DAAwC;QAAxC,8JAAwC;QAQxC,0DAAwC;QAAxC,8JAAwC;QAapD,0DAAS;QAAT,0EAAS;QAGP,0DAAuB;QAAvB,oFAAuB;QAIoB,0DAAoB;QAApB,6EAAoB;QAE1C,0DAA6B;QAA7B,gFAA6B;QAcxC,2DAAkD;QAAlD,gIAAkD;QAOlD,2DAAkD;QAAlD,gIAAkD;QAQ1D,2DAAwB;QAAxB,6EAAwB;QA8B/B,0DAAe;QAAf,6EAAe;QAGW,0DAAe;QAAf,6EAAe;QACzC,0DAAiB;QAAjB,+EAAiB;QAMF,0DAA4B;QAA5B,yFAA4B;;6FD1I/C,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;uHAqGG,KAAK;kBADJ,mDAAK;;;;;;;;;;;;;;AElHV;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,oBAAoB;IAM/B;QAJC;;UAEE;QACH,UAAK,GAAC,uBAAuB,CAAC;IACd,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFATU,oBAAoB;oGAApB,oBAAoB;QCPjC,kFAAuD;;QAApC,4EAAe;;6FDOrB,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACD;AAGI;AACF;AAC3B;;;;;;;;;ICYa,gFACI;IAAA,uDACJ;IAAA,4DAAY;;;IAF8B,+EAAmB;IACzD,0DACJ;IADI,2FACJ;;;IAgEZ,gFAA4D;IAAA,uDAAe;IAAA,4DAAY;;;IAA9C,8EAAkB;IAAC,0DAAe;IAAf,+EAAe;;;;;IAwBvF,qEACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EAGA;IADI,wVAA4C;IAFhD,4DAGA;IAAA,uEAAgE;IACpE,4DAAM;IACV,4DAAK;IACN,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACrB,yEAA4B;IAAA,uDAAe;IAAA,4DAAK;IAChD,yEACI;IAAA,oEAEiE;IACrE,4DAAK;IACL,0EAAwB;IAAA,wDAAgD;;IAAA,4DAAK;IAC7E,0EAAwC;IAAA,wDAA4D;IAAA,4DAAK;IACzG,0EAAgD;IAAA,wDAAwF;;IAAA,4DAAK;IAC7I,0EAAwC;IAAA,wDAA6F;IAAA,4DAAK;IAC9I,4DAAK;;;IAjBwD,0DAAkB;IAAlB,uFAAkB;IAC1C,0FAAqB;IAEV,0DAAmB;IAAnB,wFAAmB;IAG5D,0DAAa;IAAb,6EAAa;IACY,0DAAe;IAAf,+EAAe;IAInC,0DAAwD;IAAxD,gIAAwD;IADxD,6LAA8E;IAG9D,0DAAgD;IAAhD,6KAAgD;IAChC,0DAA4D;IAA5D,iIAA4D;IACpD,0DAAwF;IAAxF,2NAAwF;IAChG,0DAA6F;IAA7F,qKAA6F;;;IAMjJ,0EACI;IAAA,2EAAsB;IAAA,qEAAU;IAAA,4DAAO;IAC3C,4DAAM;;;IACN,2EAA+C;IAAA,qEAAU;IAAA,4DAAO;;;IAChE,0EACI;IAAA,2EAAgC;IAAA,uDAAgB;IAAA,4DAAO;IAC3D,4DAAM;;;IAD8B,0DAAgB;IAAhB,oFAAgB;;;AD7HzD,MAAM,sBAAsB;IAsGjC,YACU,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QA3F5C;;WAEG;QACI,SAAI,GAAG,CAAC,CAAC;QAEhB;;WAEG;QACI,YAAO,GAAG,EAAE,CAAC;QAYpB;;WAEG;QACI,YAAO,GAAG,IAAI,CAAC;QAkBtB;;WAEG;QACH,YAAO,GAAG;YACR,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;SACxB,CAAC;QAEF;;UAEE;QACF,YAAO,GAAG;YACR,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE;YAC3B,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE;SAC9B;QAED;;WAEG;QACH,UAAK,GAAG,MAAM,CAAC;QAEf;;WAEG;QACH,SAAI,GAAG,IAAI,CAAC;QAEZ;;WAEG;QACH,qBAAgB,GAAG,aAAa,CAAC;IAoB7B,CAAC;IAEL,QAAQ;QAEN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC;IAErB,CAAC;IAGD;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SAC9B,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC7B,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,WAAW;QACT,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CACjD,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC;gBACtC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC/B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;gBAClC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;aACnC;YAAA,CAAC;QACJ,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC;IACN,CAAC;IAGD;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,UAAU;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,EAAE;YACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC;YACpC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;SACrB;QACD,IAAI,CAAC,gBAAgB,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;;OAGG;IACI,YAAY,CAAC,OAAe;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,aAAa;QACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,YAAY,CAAC,IAAI;QACf,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,OAAO;QACL,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,4DAA4D;YACnE,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,MAAM;YACzB,gBAAgB,EAAE,SAAS;SAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAEhB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAClE,yBAAyB;oBACzB,IAAI,MAAM;wBAAE,gFAAW,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBAExD,kDAAI,CAAC,IAAI,CACP,YAAY,EACZ,0CAA0C,EAC1C,SAAS,CACV,CAAC;gBAEJ,CAAC,CAAC,CAAC;aAEJ;iBAAM,IAAI,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBACvD,kDAAI,CAAC,IAAI,CACP,SAAS,EACT,4CAA4C,EAC5C,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,yDAAyD;YAChE,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,MAAM;YACzB,gBAAgB,EAAE,SAAS;SAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAEjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACjE,wBAAwB;oBACxB,IAAI,MAAM;wBAAE,8EAAU,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBAEvD,kDAAI,CAAC,IAAI,CACP,QAAQ,EACR,sCAAsC,EACtC,SAAS,CACV,CAAC;gBAEJ,CAAC,CAAC,CAAC;aACJ;iBAAM,IAAI,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBACvD,kDAAI,CAAC,IAAI,CACP,SAAS,EACT,2CAA2C,EAC3C,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;;4FA5RU,sBAAsB;sGAAtB,sBAAsB;QCbnC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,yEACQ;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAEJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,iFACI;QAAA,iIACI;QAER,4DAAY;QAChB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EACI;QAD+B,6IAAS,YAAQ,IAAC;QACjD,oEAA6B;QACjC,4DAAO;QACX,4DAAM;QACd,4DAAM;QACV,4DAAO;QACX,4DAAM;QACN,2EACI;QAAA,uEACI;QAAA,0EACI;QAAA,2EACI;QAAA,yEAEI;QAAA,oEAAgC;QAChC,qEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAAA,oEAAmC;QACnC,sEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAHD,0IAAS,YAAQ,IAAC;QAGjB,oEAAqC;QACrC,qEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAHD,0IAAS,aAAS,IAAC;QAGlB,oEAAsC;QACtC,wEACJ;QAAA,4DAAI;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,0EACI;QAAA,2EACI;QAAA,sEAAI;QAAA,wDAAS;QAAA,4DAAK;QACtB,4DAAM;QACN,2EACI;QAAA,2EACK;QAAA,0EACG;QAAA,2EAAsD;QAAA,qEAAQ;QAAA,4DAAM;QACpE,2EACI;QAAA,iFAEI;QADA,oJAAU,mBAAe,IAAC;QAC1B,iIAA4D;QAChE,4DAAY;QAChB,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,6EACI;QAAA,6EACI;QAAA,sEACI;QAAA,qEAAqB;QACrB,sEAAI;QAAA,8DAAE;QAAA,4DAAK;QACX,0EAAgB;QAAA,2EAAe;QAAA,yEACgC;QADL,0IAAS,WAAO,MAAM,CAAC,IAAC;QACvB,4DAAI;QAAA,4DAAK;QACpE,0EAAgB;QAAA,iEAAK;QAAA,yEAC0C;QADf,0IAAS,WAAO,QAAQ,CAAC,IAAC;QACf,4DAAI;QAAA,4DAAK;QACpE,0EAAgB;QAAA,yEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,yEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,gFAAe;QAAA,4DAAK;QACpC,0EAAgB;QAAA,4EAAW;QAAA,4DAAK;QACpC,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,qHACI;QAoBR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACN,2EACI;QAAA,qHACI;QAEJ,uHAA+C;QAC/C,qHACI;QAER,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,sFAC8F;QAD5B,4LAAe,yGAC/D,0BAAkB,IAD6C;QACJ,4DAAiB;QAClG,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAjJgB,0DAAkB;QAAlB,+EAAkB;QAce,2DAA8B;QAA9B,gFAA8B;QA0BtD,2DAAgD;QAAhD,+HAAgD;QAE/C,8JAAwC;QAQxC,0DAAwC;QAAxC,8JAAwC;QAQxC,0DAAwC;QAAxC,8JAAwC;QAapD,0DAAS;QAAT,0EAAS;QAGP,0DAAuB;QAAvB,oFAAuB;QAIoB,0DAAoB;QAApB,6EAAoB;QAE1C,0DAA6B;QAA7B,gFAA6B;QAcxC,2DAAkD;QAAlD,gIAAkD;QAElD,0DAAkD;QAAlD,gIAAkD;QAQ1D,2DAAkC;QAAlC,oFAAkC;QAyBzC,0DAAe;QAAf,6EAAe;QAGW,0DAAe;QAAf,6EAAe;QACzC,0DAAiB;QAAjB,+EAAiB;QAMF,0DAA4B;QAA5B,yFAA4B;;6FDlI/C,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;oIAqGC,KAAK;kBADJ,mDAAK;;;;;;;;;;;;;;AEhHR;AAAA;AAAA;;;;GAIG;AACI,SAAS,WAAW,CAAE,KAAW,EAAE,KAAc;IACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QAEnC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,EAAE;YACvB,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC;SACzB;KACJ;AACL,CAAC;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,sBAAsB;IAclC,YACU,MAAc,EACd,cAA8B,EAC9B,cAA8B,EAC9B,YAA0B;QAH1B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAVpC;;WAEG;QACH,UAAK,GAAG,gCAAgC,CAAC;IAQrC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC5C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,IAAI,CAAC,IAAI;QAEP,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAEzB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,0BAA0B,CAAC;QACvD,CAAC,CAAC;IACJ,CAAC;;4FAxCW,sBAAsB;sGAAtB,sBAAsB;QCVnC,uFAA+G;QAAnD,+KAAiB,gBAAY,IAAC;QAAC,4DAAoB;;QAA5F,oFAAuB;;6FDU7B,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACD;AAII;AACF;AAC3B;;;;;;;;;ICWa,gFACI;IAAA,uDACJ;IAAA,4DAAY;;;IAF8B,+EAAmB;IACzD,0DACJ;IADI,2FACJ;;;IAgEZ,gFAA4D;IAAA,uDAAe;IAAA,4DAAY;;;IAA9C,8EAAkB;IAAC,0DAAe;IAAf,+EAAe;;;;;IAwBvF,qEACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EAGA;IADI,0VAA4C;IAFhD,4DAGA;IAAA,uEAAkE;IACtE,4DAAM;IACV,4DAAK;IACN,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACvB,yEAA4B;IAAA,uDAAiB;IAAA,4DAAK;IAClD,yEACI;IAAA,oEAEmE;IACvE,4DAAK;IACL,0EAAwB;IAAA,wDAAkD;;IAAA,4DAAK;IAC/E,0EAAwC;IAAA,wDAAgE;IAAA,4DAAK;IAC7G,0EAAgD;IAAA,wDAA4F;;IAAA,4DAAK;IACjJ,0EAAwC;IAAA,wDAAmG;IAAA,4DAAK;IACpJ,4DAAK;;;IAjBwD,0DAAoB;IAApB,yFAAoB;IAC5C,4FAAuB;IAEZ,0DAAqB;IAArB,0FAAqB;IAG9D,0DAAe;IAAf,+EAAe;IACU,0DAAiB;IAAjB,iFAAiB;IAIrC,0DAA0D;IAA1D,kIAA0D;IAD1D,iMAAkF;IAGlE,0DAAkD;IAAlD,+KAAkD;IAClC,0DAAgE;IAAhE,qIAAgE;IACxD,0DAA4F;IAA5F,+NAA4F;IACpG,0DAAmG;IAAnG,2KAAmG;;;IAMvJ,0EACI;IAAA,2EAAsB;IAAA,qEAAU;IAAA,4DAAO;IAC3C,4DAAM;;;IACN,2EAA+C;IAAA,qEAAU;IAAA,4DAAO;;;IAChE,0EACI;IAAA,2EAAgC;IAAA,uDAAgB;IAAA,4DAAO;IAC3D,4DAAM;;;IAD8B,0DAAgB;IAAhB,oFAAgB;;;AD5HzD,MAAM,wBAAwB;IAqGnC,YACU,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QA3FhD;;WAEG;QACI,SAAI,GAAG,CAAC,CAAC;QAEhB;;WAEG;QACI,YAAO,GAAG,EAAE,CAAC;QAYpB;;WAEG;QACI,YAAO,GAAG,IAAI,CAAC;QAkBtB;;WAEG;QACH,YAAO,GAAG;YACR,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;SACxB,CAAC;QAEF;;UAEE;QACF,YAAO,GAAG;YACR,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE;YAC3B,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE;SAC9B;QAED;;WAEG;QACH,UAAK,GAAG,MAAM,CAAC;QAEf;;WAEG;QACH,SAAI,GAAG,IAAI,CAAC;QAEZ;;WAEG;QACH,qBAAgB,GAAG,aAAa,CAAC;IAoB7B,CAAC;IAEL,QAAQ;QAEN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC;IAErB,CAAC;IAGD;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SAC9B,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC7B,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,WAAW;QACT,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CACnD,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC;gBACtC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC/B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;gBACpC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;aACnC;YAAA,CAAC;QACJ,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC;IACN,CAAC;IAGD;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,UAAU;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,EAAE;YACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC;YACpC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;SACrB;QACD,IAAI,CAAC,gBAAgB,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;;OAGG;IACI,YAAY,CAAC,OAAe;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,aAAa;QACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,YAAY,CAAC,IAAI;QACf,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,OAAO;QACL,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,8DAA8D;YACrE,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,MAAM;YACzB,gBAAgB,EAAE,SAAS;SAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAEhB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACpE,yBAAyB;oBACzB,IAAI,MAAM;wBAAE,gFAAW,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBAE1D,kDAAI,CAAC,IAAI,CACP,YAAY,EACZ,4CAA4C,EAC5C,SAAS,CACV,CAAC;gBAEJ,CAAC,CAAC,CAAC;aAEJ;iBAAM,IAAI,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBACvD,kDAAI,CAAC,IAAI,CACP,SAAS,EACT,8CAA8C,EAC9C,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,2DAA2D;YAClE,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,MAAM;YACzB,gBAAgB,EAAE,SAAS;SAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAEjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACnE,wBAAwB;oBACxB,IAAI,MAAM;wBAAE,8EAAU,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBAEzD,kDAAI,CAAC,IAAI,CACP,QAAQ,EACR,wCAAwC,EACxC,SAAS,CACV,CAAC;gBAEJ,CAAC,CAAC,CAAC;aACJ;iBAAM,IAAI,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBACvD,kDAAI,CAAC,IAAI,CACP,SAAS,EACT,8CAA8C,EAC9C,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;;gGA3RU,wBAAwB;wGAAxB,wBAAwB;QCdrC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,yEACQ;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAEJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,iFACI;QAAA,mIACI;QAER,4DAAY;QAChB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EACI;QAD+B,+IAAS,YAAQ,IAAC;QACjD,oEAA6B;QACjC,4DAAO;QACX,4DAAM;QACd,4DAAM;QACV,4DAAO;QACX,4DAAM;QACN,2EACI;QAAA,uEACI;QAAA,0EACI;QAAA,2EACI;QAAA,yEAEI;QAAA,oEAAgC;QAChC,qEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAAA,oEAAmC;QACnC,sEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAHD,4IAAS,YAAQ,IAAC;QAGjB,oEAAqC;QACrC,qEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAHD,4IAAS,aAAS,IAAC;QAGlB,oEAAsC;QACtC,wEACJ;QAAA,4DAAI;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,0EACI;QAAA,2EACI;QAAA,sEAAI;QAAA,wDAAS;QAAA,4DAAK;QACtB,4DAAM;QACN,2EACI;QAAA,2EACK;QAAA,0EACG;QAAA,2EAAsD;QAAA,qEAAQ;QAAA,4DAAM;QACpE,2EACI;QAAA,iFAEI;QADA,sJAAU,mBAAe,IAAC;QAC1B,mIAA4D;QAChE,4DAAY;QAChB,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,6EACI;QAAA,6EACI;QAAA,sEACI;QAAA,qEAAqB;QACrB,sEAAI;QAAA,8DAAE;QAAA,4DAAK;QACX,0EAAgB;QAAA,kFAAiB;QAAA,yEAC8B;QADH,4IAAS,WAAO,MAAM,CAAC,IAAC;QACzB,4DAAI;QAAA,4DAAK;QACpE,0EAAgB;QAAA,iEAAK;QAAA,yEAC0C;QADf,4IAAS,WAAO,QAAQ,CAAC,IAAC;QACf,4DAAI;QAAA,4DAAK;QACpE,0EAAgB;QAAA,yEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,yEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,gFAAe;QAAA,4DAAK;QACpC,0EAAgB;QAAA,4EAAW;QAAA,4DAAK;QACpC,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,uHACI;QAoBR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACN,2EACI;QAAA,uHACI;QAEJ,yHAA+C;QAC/C,uHACI;QAER,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,sFAC8F;QAD5B,8LAAe,2GAC/D,0BAAkB,IAD6C;QACJ,4DAAiB;QAClG,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAjJgB,0DAAkB;QAAlB,+EAAkB;QAce,2DAA8B;QAA9B,gFAA8B;QA0BtD,2DAAkD;QAAlD,iIAAkD;QAEjD,8JAAwC;QAQxC,0DAAwC;QAAxC,8JAAwC;QAQxC,0DAAwC;QAAxC,8JAAwC;QAapD,0DAAS;QAAT,0EAAS;QAGP,0DAAuB;QAAvB,oFAAuB;QAIoB,0DAAoB;QAApB,6EAAoB;QAE1C,0DAA6B;QAA7B,gFAA6B;QAcxC,2DAAkD;QAAlD,gIAAkD;QAElD,0DAAkD;QAAlD,gIAAkD;QAQ1D,2DAAsC;QAAtC,sFAAsC;QAyB7C,0DAAe;QAAf,6EAAe;QAGW,0DAAe;QAAf,6EAAe;QACzC,0DAAiB;QAAjB,+EAAiB;QAMF,0DAA4B;QAA5B,yFAA4B;;6FDjI/C,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;wIAoGC,KAAK;kBADJ,mDAAK;;;;;;;;;;;;;;AEhHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,qBAAqB;IAOhC,YACU,MAAc,EACd,YAA0B,EAC1B,gBAAkC;QAFlC,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAR5C;;WAEG;QACH,UAAK,GAAG,2BAA2B,CAAC;IAMhC,CAAC;IAEL,QAAQ;IAER,CAAC;IAED;;;;OAIG;IACH,IAAI,CAAC,IAAI;QAEP,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAEzB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAEpD,QAAQ,MAAM,EAAE;gBACd,KAAK,MAAM;oBACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBAC1C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,qCAAqC,CAAC;oBAChE,MAAM;gBAER,KAAK,cAAc;oBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACzC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,qCAAqC,CAAC;oBAEhE,MAAM;gBAER;oBAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBACjD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,CAAC;oBAExC,MAAM;aACT;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IAEL,CAAC;;0FAnDU,qBAAqB;qGAArB,qBAAqB;QCVlC,yFAA2F;QAArD,gLAAiB,gBAAY,IAAC;QAAC,4DAAsB;;QAAtE,4EAAe;;6FDUvB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAES;AACgC;AACS;AACN;AACe;AACA;AACxC;AACZ;AAC6B;AACD;AACS;AACN;AACT;AACG;AACM;AACS;AACA;AACI;AACA;AACpC;AACS;AACN;AACa;AACA;;AAoCvE,MAAM,SAAS;;wFAAT,SAAS;4IAAT,SAAS,kBAVX;YACP,4DAAY;YACZ,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,mEAAc;YACd,+EAAmB;YACnB,4EAAgB;SACjB;mIAEU,SAAS,mBAhClB,oGAAuB;QACvB,6GAA0B;QAC1B,uGAAwB;QACxB,kHAAwB;QACxB,kHAAwB;QACxB,+FAAqB;QACrB,wGAAwB;QACxB,kGAAsB;QACtB,yFAAmB;QACnB,4FAAoB;QACpB,kGAAsB;QACtB,uGAAoB;QACpB,uGAAoB;QACpB,6GAAsB;QACtB,6GAAsB;QACtB,2EAAe;QACf,oFAAkB;QAClB,8EAAgB;QAChB,yFAAgB;QAChB,yFAAgB,aAIhB,4DAAY;QACZ,oEAAgB;QAChB,0DAAW;QACX,kEAAmB;QACnB,mEAAc;QACd,+EAAmB;QACnB,4EAAgB;6FAGP,SAAS;cAlCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,oGAAuB;oBACvB,6GAA0B;oBAC1B,uGAAwB;oBACxB,kHAAwB;oBACxB,kHAAwB;oBACxB,+FAAqB;oBACrB,wGAAwB;oBACxB,kGAAsB;oBACtB,yFAAmB;oBACnB,4FAAoB;oBACpB,kGAAsB;oBACtB,uGAAoB;oBACpB,uGAAoB;oBACpB,6GAAsB;oBACtB,6GAAsB;oBACtB,2EAAe;oBACf,oFAAkB;oBAClB,8EAAgB;oBAChB,yFAAgB;oBAChB,yFAAgB;iBAEjB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,oEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;oBACnB,mEAAc;oBACd,+EAAmB;oBACnB,4EAAgB;iBACjB;aACF;;;;;;;;;;;;;;AC7DD;AAAA;AAAA;AAAA;AAAA;AAA8D;AACnB;AAEgB;;;AAMpD,MAAM,UAAU;IAGrB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC;;OAEG;IACH,IAAI,CAAC,GAAQ;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,wEAAW,CAAC,QAAQ,GAAG,UAAU,EAAE,GAAG,CAAC,CAAC;IACrE,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,IAAI;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,wEAAW,CAAC,QAAQ,GAAG,cAAc,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IACnF,CAAC;IAED;;OAEG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,wEAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,CAAC;IAClE,CAAC;IAED;;KAEC;IACD,aAAa,CAAC,IAAI;QAChB,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEhE,WAAW,GAAG;YACZ,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC/C,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC5B,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;iBACzB,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC7B,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;iBACvC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;iBACjC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;iBACjC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC7B,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC7B,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;SACnD,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,wEAAW,CAAC,QAAQ,GAAG,aAAa,EAAE,WAAW,CAAC,CAAC;IACjF,CAAC;IAED;;OAEG;IACH,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,wEAAW,CAAC,QAAQ,GAAG,kBAAkB,CAAC,CAAC;IAEzE,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,EAAE;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,wEAAW,CAAC,QAAQ,GAAG,cAAc,GAAG,EAAE,CAAC,CAAC;IAExE,CAAC;IAED;;OAEG;IACH,OAAO,CAAC,EAAE;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,wEAAW,CAAC,QAAQ,GAAG,eAAe,GAAG,EAAE,CAAC,CAAC;IACzE,CAAC;IAED;;;OAGG;IACH,QAAQ,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,wEAAW,CAAC,QAAQ,GAAG,cAAc,GAAG,EAAE,CAAC,CAAC;IACxE,CAAC;IAED;;OAEG;IACH,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,wEAAW,CAAC,QAAQ,GAAG,uBAAuB,CAAC,CAAC;IAC5E,CAAC;IAED;;;QAGI;IACJ,cAAc,CAAC,IAAI;QACjB,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEhE,WAAW,GAAG;YACZ,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC/C,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;iBACjC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChC,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,wEAAW,CAAC,QAAQ,GAAG,yBAAyB,EAAE,WAAW,CAAC,CAAC;IAC7F,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,wEAAW,CAAC,QAAQ,GAAG,oBAAoB,GAAG,EAAE,CAAC,CAAC;IAC9E,CAAC;;oEA9GU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;6FAEP,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,wBAAwB;IAcpC,YACU,MAAc,EACd,cAA8B,EAC9B,gBAAkC,EAClC,YAA0B;QAH1B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAVpC;;WAEG;QACH,UAAK,GAAG,oCAAoC,CAAC;IAQzC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC5C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,EAAE,CAAC;QAC/B,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,IAAI,CAAC,IAAI;QAEP,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAEzB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,6BAA6B,CAAC;QAC1D,CAAC,CAAC;IACJ,CAAC;;gGAxCW,wBAAwB;wGAAxB,wBAAwB;QCVrC,yFAAuH;QAArD,mLAAiB,gBAAY,IAAC;QAAC,4DAAsB;;QAAlG,wFAA2B;;6FDUnC,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AACX;AAKU;AACI;;;;;;;;;;ICQ1D,yEACI;IAAA,6EAEI;IAFkB,qTAAoB,cAAc,KAAE;IAEtD,6EACJ;IAAA,4DAAS;IACb,4DAAM;;;IAsBN,2EACI;IAAA,mGACJ;IAAA,4DAAO;;;IAUP,2EACI;IAAA,mGACJ;IAAA,4DAAO;;;IAQH,gFAA8D;IAAA,uDAAgB;IAAA,4DAAY;;;IAAhD,+EAAmB;IAAC,0DAAgB;IAAhB,gFAAgB;;;IAElF,2EACI;IAAA,mGACJ;IAAA,4DAAO;;ADtDxB,MAAM,oBAAoB;IA4D/B,YACU,MAAc,EACd,YAA2B,EAC3B,cAA8B;QAF9B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAe;QAC3B,mBAAc,GAAd,cAAc,CAAgB;QAxDxC;;UAEE;QACF,eAAU,GAAG,EAAE,CAAC;QAoBhB;;WAEG;QAEH,kBAAa,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAOrD;;UAEE;QACH,YAAO,GAAG;YACR,EAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAC;YACzB,EAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC;SAC5B;QAED;;;;WAIG;QACH,gBAAW,GAAG,UAAU,GAAW,EAAE,UAAkB;YACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC;IAOE,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,SAAS;YAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC9C,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,EAAE,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;YACtB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,0FAAW,CAAC,CAAC;YAC9D,MAAM,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAElD,CAAC,CAAC;IACL,CAAC;IACD;;OAEG;IACH,gBAAgB;QACZ,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CACpD,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;aACnC;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,0DAA0D,EAAE,gBAAgB,CAAC,CAAC;aAChG;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,WAAW,CAAC,gCAAgC,EAAE,gBAAgB,CAAC,CAAC;QACvE,CAAC,CAAC;IACR,CAAC;IAED;;QAEI;IACJ,IAAI;QACF,yBAAyB;QACzB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAE1B,iBAAiB;QACjB,IAAI,CAAC,mBAAmB,GAAG,sGAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAE/B,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;YAC3E,IAAI,IAAI,CAAC,UAAU,IAAI,cAAc;gBAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;SACxD;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;SACjD;IACH,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;IACzD,CAAC;;wFArIU,oBAAoB;oGAApB,oBAAoB;QCdjC,0EACI;QADqB,gJAAY,UAAM,IAAC;QACxC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,uDAAS;QAAA,4DAAK;QACtB,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,6EAEI;QAFkB,6IAAS,eAAW,MAAM,CAAC,IAAC;QAE9C,yEACJ;QAAA,4DAAS;QACb,4DAAM;QACN,kHACI;QAKJ,0EACI;QAAA,2EAEI;QAFE,2IAAS,kBAAc,IAAC;QAE1B,qEACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,yEAAuB;QAAA,gHAAyC;QAAA,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAC,+GACpD;QAAA,4DAAI;QACnD,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EAAkB;QAAA,wEAAY;QAAA,4DAAQ;QACtC,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,2EACI;QAAA,wEACJ;QAAA,4DAAM;QACN,qHACI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAmB;QAAA,kEAAM;QAAA,4DAAQ;QACjC,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,2EACI;QAAA,wEACJ;QAAA,4DAAM;QACN,qHACI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAwB;QAAA,gEAAI;QAAA,4DAAQ;QACpC,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QAC/B,iFACI;QAAA,+HAA8D;QAClE,4DAAY;QACZ,qHACI;QAER,4DAAM;QACV,4DAAM;QAEV,4DAAM;QAEN,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAO;;QA7ED,+EAAkB;QAKA,0DAAS;QAAT,0EAAS;QAUmD,0DAAkB;QAAlB,gFAAkB;QA2BpD,2DAAuD;QAAvD,yHAAuD;QAYvD,0DAAwD;QAAxD,0HAAwD;QAUnE,0DAA8B;QAA9B,gFAA8B;QAEnB,0DAAyD;QAAzD,2HAAyD;;6FDpD9F,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;8RAuBC,SAAS;kBADR,mDAAK;YAON,KAAK;kBADJ,mDAAK;YAON,aAAa;kBADZ,oDAAM;;;;;;;;;;;;;;AE/CT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,eAAe;IAO1B,YACU,MAAc,EACd,YAA0B,EAC1B,UAAsB;QAFtB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,eAAU,GAAV,UAAU,CAAY;QAR/B;;UAEE;QACH,UAAK,GAAG,iBAAiB,CAAC;IAMtB,CAAC;IAEL,QAAQ;IAER,CAAC;IAED;;;;OAIG;IACH,IAAI,CAAC,IAAI;QAEP,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACnB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAEzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAExC,QAAQ,MAAM,EAAE;gBACd,KAAK,MAAM;oBACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBACnC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,yBAAyB,CAAC;oBACpD,MAAM;gBAER,KAAK,cAAc;oBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,yBAAyB,CAAC;oBAEpD,MAAM;gBAER;oBAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC1C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,CAAC;oBAExC,MAAM;aACT;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;;8EAhDU,eAAe;+FAAf,eAAe;QCV5B,kFAA6E;QAA9C,mKAAiB,gBAAY,IAAC;QAAC,4DAAe;;QAA/D,4EAAe;;6FDUhB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AACX;AAKc;;;;;;;;;;ICS1D,yEACI;IAAA,6EAEI;IAFkB,uTAAoB,cAAc,KAAE;IAEtD,6EACJ;IAAA,4DAAS;IACb,4DAAM;;;IAsBN,2EACI;IAAA,mGACJ;IAAA,4DAAO;;;IAQH,gFAA8D;IAAA,uDAAgB;IAAA,4DAAY;;;IAAhD,+EAAmB;IAAC,0DAAgB;IAAhB,gFAAgB;;;IAElF,2EACI;IAAA,mGACJ;IAAA,4DAAO;;AD3CxB,MAAM,sBAAsB;IA2DjC,YACU,MAAc,EACd,YAA2B,EAC3B,gBAAkC;QAFlC,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAe;QAC3B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAxD5C;;UAEE;QACF,eAAU,GAAG,EAAE,CAAC;QAoBhB;;WAEG;QAEH,kBAAa,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAOrD;;UAEE;QACH,YAAO,GAAG;YACR,EAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAC;YACzB,EAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC;SAC5B;QAED;;;;WAIG;QACH,gBAAW,GAAG,UAAU,GAAW,EAAE,UAAkB;YACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC;IAOE,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,WAAW;YAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAChD,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,EAAE,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;YACtB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,MAAM,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAElD,CAAC,CAAC;IACL,CAAC;IACD;;OAEG;IACH,gBAAgB;QACZ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CACxD,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACrB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,6DAA6D,EAAE,kBAAkB,CAAC,CAAC;aACrG;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,WAAW,CAAC,gCAAgC,EAAE,kBAAkB,CAAC,CAAC;QACzE,CAAC,CAAC;IACR,CAAC;IAED;;QAEI;IACJ,IAAI;QACF,yBAAyB;QACzB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAE1B,iBAAiB;QACjB,IAAI,CAAC,mBAAmB,GAAG,sGAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAEjC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;YAC/E,IAAI,IAAI,CAAC,UAAU,IAAI,cAAc;gBAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;SACxD;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;SACjD;IACH,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;IACzD,CAAC;;4FAnIU,sBAAsB;sGAAtB,sBAAsB;QCbnC,0EACI;QADqB,kJAAY,UAAM,IAAC;QACxC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,uDAAS;QAAA,4DAAK;QACtB,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,6EAEI;QAFkB,+IAAS,eAAW,MAAM,CAAC,IAAC;QAE9C,yEACJ;QAAA,4DAAS;QACb,4DAAM;QACN,oHACI;QAKJ,0EACI;QAAA,2EAEI;QAFE,6IAAS,kBAAc,IAAC;QAE1B,qEACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,yEAAuB;QAAA,gHAAyC;QAAA,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAAC,+GACpD;QAAA,4DAAI;QACnD,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EAAkB;QAAA,2EAAe;QAAA,4DAAQ;QACzC,4EAA0B;QAAA,6DAAC;QAAA,4DAAO;QAClC,2EACI;QAAA,wEACJ;QAAA,4DAAM;QACN,uHACI;QAER,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAwB;QAAA,gEAAI;QAAA,4DAAQ;QACpC,4EAAuB;QAAA,6DAAC;QAAA,4DAAO;QAC/B,iFACI;QAAA,iIAA8D;QAClE,4DAAY;QACZ,uHACI;QAER,4DAAM;QACV,4DAAM;QAEV,4DAAM;QAEN,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAO;;QAjED,+EAAkB;QAKA,0DAAS;QAAT,0EAAS;QAUmD,0DAAoB;QAApB,kFAAoB;QA2BtD,2DAAuD;QAAvD,yHAAuD;QAUlE,0DAA8B;QAA9B,gFAA8B;QAEnB,0DAAyD;QAAzD,2HAAyD;;6FDzC9F,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;kSAsBC,WAAW;kBADV,mDAAK;YAON,KAAK;kBADJ,mDAAK;YAON,aAAa;kBADZ,oDAAM;;;;;;;;;;;;;;AE7CT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACD;AAGI;AACF;AAC3B;;;;;;;;;ICYa,gFACI;IAAA,uDACJ;IAAA,4DAAY;;;IAF8B,+EAAmB;IACzD,0DACJ;IADI,2FACJ;;;IAgEZ,gFAA4D;IAAA,uDAAe;IAAA,4DAAY;;;IAA9C,8EAAkB;IAAC,0DAAe;IAAf,+EAAe;;;;;IAyBvF,qEACI;IAAA,yEACI;IAAA,0EACI;IAAA,4EAGA;IADI,sVAA4C;IAFhD,4DAGA;IAAA,uEAA8D;IAClE,4DAAM;IACV,4DAAK;IACN,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACnB,yEAA4B;IAAA,uDAAa;IAAA,4DAAK;IAC9C,yEAAwB;IAAA,wDAAc;IAAA,4DAAK;IAC3C,0EACI;IAAA,oEAE+D;IACnE,4DAAK;IACL,0EAAwB;IAAA,wDAA8C;;IAAA,4DAAK;IAC3E,0EAAwC;IAAA,wDAAwD;IAAA,4DAAK;IACrG,0EAAgD;IAAA,wDAAoF;;IAAA,4DAAK;IACzI,0EAAwC;IAAA,wDAAuF;IAAA,4DAAK;IACxI,4DAAK;;;IAlBwD,0DAAgB;IAAhB,qFAAgB;IACxC,wFAAmB;IAER,0DAAiB;IAAjB,sFAAiB;IAG1D,0DAAW;IAAX,2EAAW;IACc,0DAAa;IAAb,6EAAa;IACjB,0DAAc;IAAd,8EAAc;IAI9B,0DAAsD;IAAtD,8HAAsD;IADtD,yLAA0E;IAG1D,0DAA8C;IAA9C,2KAA8C;IAC9B,0DAAwD;IAAxD,6HAAwD;IAChD,0DAAoF;IAApF,uNAAoF;IAC5F,0DAAuF;IAAvF,+JAAuF;;;IAM3I,0EACI;IAAA,2EAAsB;IAAA,qEAAU;IAAA,4DAAO;IAC3C,4DAAM;;;IACN,2EAA+C;IAAA,qEAAU;IAAA,4DAAO;;;IAChE,0EACI;IAAA,2EAAgC;IAAA,uDAAgB;IAAA,4DAAO;IAC3D,4DAAM;;;IAD8B,0DAAgB;IAAhB,oFAAgB;;;AD/HzD,MAAM,oBAAoB;IAsG/B,YACU,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QA3FxC;;WAEG;QACI,SAAI,GAAG,CAAC,CAAC;QAEhB;;WAEG;QACI,YAAO,GAAG,EAAE,CAAC;QAYpB;;WAEG;QACI,YAAO,GAAG,IAAI,CAAC;QAkBtB;;WAEG;QACH,YAAO,GAAG;YACR,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACrB,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;SACxB,CAAC;QAEF;;UAEE;QACF,YAAO,GAAG;YACR,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE;YAC3B,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE;SAC9B;QAED;;WAEG;QACH,UAAK,GAAG,MAAM,CAAC;QAEf;;WAEG;QACH,SAAI,GAAG,IAAI,CAAC;QAEZ;;WAEG;QACH,qBAAgB,GAAG,aAAa,CAAC;IAoB7B,CAAC;IAEL,QAAQ;QAEN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAElB,CAAC;IAGD;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SAC9B,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC7B,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAC/C,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC;gBACtC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC/B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;gBAC/B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;aACnC;YAAA,CAAC;QACJ,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC;IACN,CAAC;IAGD;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,UAAU;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,EAAE;YACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC;YACpC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;SACrB;QACD,IAAI,CAAC,gBAAgB,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED;;;OAGG;IACI,YAAY,CAAC,OAAe;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED;;OAEG;IACH,aAAa;QACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED;;;OAGG;IACH,YAAY,CAAC,IAAI;QACf,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,OAAO;QACL,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,sDAAsD;YAC7D,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,MAAM;YACzB,gBAAgB,EAAE,SAAS;SAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAEhB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAChE,yBAAyB;oBACzB,IAAI,MAAM;wBAAE,gFAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBAErD,kDAAI,CAAC,IAAI,CACP,YAAY,EACZ,uCAAuC,EACvC,SAAS,CACV,CAAC;gBAEJ,CAAC,CAAC,CAAC;aAEJ;iBAAM,IAAI,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBACvD,kDAAI,CAAC,IAAI,CACP,SAAS,EACT,wCAAwC,EACxC,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,mDAAmD;YAC1D,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,MAAM;YACzB,gBAAgB,EAAE,SAAS;SAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAEjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAC/D,wBAAwB;oBACxB,IAAI,MAAM;wBAAE,8EAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBAEpD,kDAAI,CAAC,IAAI,CACP,QAAQ,EACR,mCAAmC,EACnC,SAAS,CACV,CAAC;gBAEJ,CAAC,CAAC,CAAC;aACJ;iBAAM,IAAI,MAAM,CAAC,OAAO,KAAK,kDAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBACvD,kDAAI,CAAC,IAAI,CACP,SAAS,EACT,wCAAwC,EACxC,OAAO,CACR;aACF;QACH,CAAC,CAAC;IACJ,CAAC;;wFA5RU,oBAAoB;oGAApB,oBAAoB;QCbjC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,yEACQ;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAEJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,iFACI;QAAA,+HACI;QAER,4DAAY;QAChB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EACI;QAD+B,2IAAS,YAAQ,IAAC;QACjD,oEAA6B;QACjC,4DAAO;QACX,4DAAM;QACd,4DAAM;QACV,4DAAO;QACX,4DAAM;QACN,2EACI;QAAA,uEACI;QAAA,0EACI;QAAA,2EACI;QAAA,yEAEI;QAAA,oEAAgC;QAChC,qEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAAA,oEAAmC;QACnC,sEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAHD,wIAAS,YAAQ,IAAC;QAGjB,oEAAqC;QACrC,qEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EACI;QAAA,yEAGI;QAHD,wIAAS,aAAS,IAAC;QAGlB,oEAAsC;QACtC,wEACJ;QAAA,4DAAI;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,0EACI;QAAA,2EACI;QAAA,sEAAI;QAAA,wDAAS;QAAA,4DAAK;QACtB,4DAAM;QACN,2EACI;QAAA,2EACK;QAAA,0EACG;QAAA,2EAAsD;QAAA,qEAAQ;QAAA,4DAAM;QACpE,2EACI;QAAA,iFAEI;QADA,kJAAU,mBAAe,IAAC;QAC1B,+HAA4D;QAChE,4DAAY;QAChB,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,6EACI;QAAA,6EACI;QAAA,sEACI;QAAA,qEAAqB;QACrB,sEAAI;QAAA,8DAAE;QAAA,4DAAK;QACX,0EAAgB;QAAA,wEAAY;QAAA,yEACmC;QADR,wIAAS,WAAO,MAAM,CAAC,IAAC;QACpB,4DAAI;QAAA,4DAAK;QACpE,0EAAiB;QAAA,mEAAM;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,iEAAK;QAAA,yEAC0C;QADf,wIAAS,WAAO,QAAQ,CAAC,IAAC;QACf,4DAAI;QAAA,4DAAK;QACpE,0EAAgB;QAAA,yEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,yEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,gFAAe;QAAA,4DAAK;QACpC,0EAAgB;QAAA,4EAAW;QAAA,4DAAK;QACpC,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,mHACI;QAqBR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACN,2EACI;QAAA,mHACI;QAEJ,qHAA+C;QAC/C,mHACI;QAER,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,sFAC8F;QAD5B,0LAAe,uGAC/D,0BAAkB,IAD6C;QACJ,4DAAiB;QAClG,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAnJgB,0DAAkB;QAAlB,+EAAkB;QAce,2DAA8B;QAA9B,gFAA8B;QA0BtD,2DAA8C;QAA9C,6HAA8C;QAE7C,8JAAwC;QAQxC,0DAAwC;QAAxC,8JAAwC;QAQxC,0DAAwC;QAAxC,8JAAwC;QAapD,0DAAS;QAAT,0EAAS;QAGP,0DAAuB;QAAvB,oFAAuB;QAIoB,0DAAoB;QAApB,6EAAoB;QAE1C,0DAA6B;QAA7B,gFAA6B;QAcxC,2DAAkD;QAAlD,gIAAkD;QAGlD,0DAAkD;QAAlD,gIAAkD;QAQ1D,2DAA6B;QAA7B,iFAA6B;QA0BpC,0DAAe;QAAf,6EAAe;QAGW,0DAAe;QAAf,6EAAe;QACzC,0DAAiB;QAAjB,+EAAiB;QAMF,0DAA4B;QAA5B,yFAA4B;;6FDpI/C,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;gIAqGC,KAAK;kBADJ,mDAAK;;;;;;;;;;;;;;AEhHR;AAAA;AAAA;;;;GAIG;AACI,SAAS,UAAU,CAAE,KAAW,EAAE,KAAc;IACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QAEnC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,EAAE;YACvB,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC;SACzB;KACJ;AACL,CAAC;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,0BAA0B;IAarC,YACU,MAAc,EACd,cAA8B,EAC9B,kBAAsC,EACtC,YAA0B;QAH1B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAc;QAVpC;;WAEG;QACH,UAAK,GAAG,sCAAsC,CAAC;IAQ3C,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC5C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,EAAE,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,IAAI,CAAC,IAAI;QAEP,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACnC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAEzB,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC1D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAC;QAC5D,CAAC,CAAC;IACJ,CAAC;;oGAvCU,0BAA0B;0GAA1B,0BAA0B;QCVvC,2FAA+H;QAAvD,uLAAiB,gBAAY,IAAC;QAAC,4DAAwB;;QAAxG,4FAA+B;;6FDUzC,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,uBAAuB;IAQlC,YACU,MAAc,EACd,YAA0B,EAC1B,kBAAsC;QAFtC,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,uBAAkB,GAAlB,kBAAkB,CAAoB;QAR/C;;UAEE;QACH,UAAK,GAAG,8BAA8B,CAAC;IAMnC,CAAC;IAEL,QAAQ;IAER,CAAC;IAED;;;;OAIG;IACH,IAAI,CAAC,IAAI;QAEP,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACnC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAEzB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAExD,QAAQ,MAAM,EAAE;gBACd,KAAK,MAAM;oBACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;oBAC5C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,8BAA8B,CAAC;oBACzD,MAAM;gBAER,KAAK,cAAc;oBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBAC3C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,8BAA8B,CAAC;oBAEzD,MAAM;gBAER;oBAAS,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;oBACnD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,CAAC;oBAExC,MAAM;aACT;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IAEL,CAAC;;8FApDU,uBAAuB;uGAAvB,uBAAuB;QCVpC,2FAA+F;QAAvD,oLAAiB,gBAAY,IAAC;QAAC,4DAAwB;;QAAxE,4EAAe;;6FDUzB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD","file":"act-act-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddActCategoryComponent } from './add-act-category/add-act-category.component';\nimport { AddActCodeComponent } from './add-act-code/add-act-code.component';\nimport { AddActFamilyComponent } from './add-act-family/add-act-family.component';\nimport { AddActComponent } from './add-act/add-act.component';\nimport { ListActCategoryComponent } from './list-act-category/list-act-category.component';\nimport { ListActCodeComponent } from './list-act-code/list-act-code.component';\nimport { ListActFamilyComponent } from './list-act-family/list-act-family.component';\nimport { ListActComponent } from './list-act/list-act.component';\nimport { UpdateActCategoryComponent } from './update-act-category/update-act-category.component';\nimport { UpdateActCodeComponent } from './update-act-code/update-act-code.component';\nimport { UpdateActFamilyComponent } from './update-act-family/update-act-family.component';\nimport { UpdateActComponent } from './update-act/update-act.component';\n\nconst routes: Routes = [\n\n  // act\n  { path: 'add', component:AddActComponent },\n  { path: 'update/:id', component:UpdateActComponent },\n  { path: 'list', component:ListActComponent },\n\n  // category\n  { path: 'add-category', component:AddActCategoryComponent },\n  { path: 'update-category/:id', component:UpdateActCategoryComponent },\n  { path: 'list-category', component:ListActCategoryComponent },\n\n  // family\n  { path: 'add-family', component:AddActFamilyComponent },\n  { path: 'update-family/:id', component:UpdateActFamilyComponent },\n  { path: 'list-family', component:ListActFamilyComponent },\n\n  // code\n  { path: 'add-code', component:AddActCodeComponent },\n  { path: 'update-code/:id', component:UpdateActCodeComponent },\n  { path: 'list-code', component:ListActCodeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ActRoutingModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ActCategory } from 'src/app/_models/actCategory.model';\nimport { ActCategoryService } from 'src/app/_services/act-category.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\n\n@Component({\n  selector: 'app-act-category-form',\n  templateUrl: './act-category-form.component.html',\n  styleUrls: ['./act-category-form.component.css']\n})\nexport class ActCategoryFormComponent implements OnInit {\n\n   /**\n   *   form Group\n   */\n  form: FormGroup;\n\n  /**\n  * form submission action, it will get the value of the action to do\n  */\n  formAction = '';\n\n  /**\n   * invalid from controls\n   */\n  invalidFormControls: any;\n\n\n  /**\n   * parent component input\n   */\n  @Input()\n  actCategoryId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * child component output\n   */\n  @Output()\n  objectEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * the component model\n   */\n  actCategory: ActCategory\n\n   /**\n   * define  states options\n   */\n  actives = [\n    {id: \"Y\", value: \"Actif\"},\n    {id: \"N\", value: \"Inactif\"},\n  ]\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   * @param redirectTo \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n\n  constructor(\n    private router: Router,\n    private alertService : AlertService,\n    private actCategoryService: ActCategoryService\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    if (this.actCategoryId) this.initUpdateAction();\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      id: new FormControl(0),\n      name: new FormControl('', Validators.required),\n      active: new FormControl('Y', Validators.required),\n      \n    });\n  }\n  /**\n   * init the form value when updating\n   */\n  initUpdateAction() {\n      this.actCategoryService.findById(this.actCategoryId).subscribe(\n        res => {\n          if (res) {\n            this.actCategory = res;\n            this.form.patchValue(this.actCategory)\n          } else {\n            this.errorAction(\"Modification impossible car la categorie n'existe pas\", '/act/list-category');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de la modification\", '/act/list-category');\n        })\n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the object\n    */\n  save() {\n    // reset alerts on submit\n    this.alertService.clear();\n\n    //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    this.actCategory = this.form.value;\n  \n    if (this.form.valid) {\n      this.objectEmitter.emit({ actCategory: this.actCategory, action: this.formAction })\n      if (this.formAction == \"save_and_new\") this.initForm();\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n  /**\n   * get the form submission action\n   * @param action : string\n   */\n  actionToDo(action) {\n    this.formAction = action;\n  }\n\n  /**\n   * action to Do when  ckick on cancel button\n   */\n  cancelAction() {\n    this.errorAction('Action annulée', '/act/list-category');\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"mr-auto p-2 col-md-4\">\n                    <h3>{{title}}</h3>\n                </div>\n                <div class=\"col-md-5\">\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <button  type=\"submit\" (click)=\"actionToDo('save')\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold\" value=\"save\">\n                                Enregistrer\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\" *ngIf='!actCategoryId'>\n                            <button  type=\"submit\" (click)=\"actionToDo('save_and_new')\"\n                                class=\"btn btn-block btn-info btn-sm font-weight-bold\" value=\"save_and_new\">\n                                Enreg. & nouveau\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <span (click)=\"cancelAction()\" class=\"btn btn-block btn-danger btn-sm font-weight-bold\"\n                                value=\"cancel\">\n                                Annuler\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <p class=\"text-muted\"> NB: les champs marqués d'un astérisque ( <span class=\"text-danger\">*</span> ) sont\n                obligatoire pour la validation du formulare</p>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Categorie de l'acte</label>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Categorie\">\n                        </div>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.name\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n            <div class=\"col-md-4\">\n                <div class=\"form-group\">\n                    <label for=\"typeactive\">Etat</label>\n                    <span class=\"text-red\">*</span>\n                   <ng-select formControlName=\"active\" placeholder=\"Etat\">\n                    <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">{{active.value}}</ng-option>\n                </ng-select>\n                <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.active\">\n                    ce champ doit être renseigné\n                </span>\n            </div>\n                </div>\n            </div>\n            <!-- hidden -->\n            <input type=\"hidden\" formControlName=\"id\">\n        </div>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-act-family',\n  templateUrl: './list-act-family.component.html',\n  styleUrls: ['./list-act-family.component.css']\n})\nexport class ListActFamilyComponent implements OnInit {\n\n  /**\n   * title to display\n   */\n  title = 'Liste des familles d\\'actes';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-act-family-list [title]='title'></app-act-family-list>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ActService } from 'src/app/_services/act.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-update-act',\n  templateUrl: './update-act.component.html',\n  styleUrls: ['./update-act.component.css']\n})\nexport class UpdateActComponent implements OnInit {\n\n  \n  /**\n  * act id \n  */\n actId: number;\n\n /**\n  * title to display\n  */\n title = \"Modification d'un acte\";\n\n\n constructor(\n   private router: Router,\n   private activatedRoute: ActivatedRoute,\n   private actService: ActService,\n   private alertService: AlertService\n ) { }\n\n ngOnInit(): void {\n   this.activatedRoute.params.subscribe(params => {\n     this.actId = params.id;\n   })\n }\n\n /**\n  * update existing object\n  * @param data object\n  */\n save(data) {\n\n   let act = data.act;\n   let action = data.action;\n\n   this.actService.update(act).subscribe(res => {\n     this.router.navigate(['/act/list']);\n     this.alertService.success('Acte modifié avec succès')\n   })\n }\n}\n","<app-act-form [actId]=\"actId\" [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-act-form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-act',\n  templateUrl: './list-act.component.html',\n  styleUrls: ['./list-act.component.css']\n})\nexport class ListActComponent implements OnInit {\n\n  /**\n   * title to display\n   */\n  title = 'Liste des actes'; \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-act-list [title]='title'></app-act-list>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-act-category',\n  templateUrl: './list-act-category.component.html',\n  styleUrls: ['./list-act-category.component.css']\n})\nexport class ListActCategoryComponent implements OnInit {\n\n   /**\n   * title to display\n   */\n  title=\"Liste des Categories d'acte\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-act-category-list [title]='title'></app-act-category-list>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActCodeService } from 'src/app/_services/act-code.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-add-act-code',\n  templateUrl: './add-act-code.component.html',\n  styleUrls: ['./add-act-code.component.css']\n})\nexport class AddActCodeComponent implements OnInit {\n  \n   /**\n   * title to display\n   */\n  title = \"Ajouter un code acte\";\n\n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    private actCodeService: ActCodeService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * add a new object\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let actCode = data.actCode;\n    let action = data.action;\n     \n    this.actCodeService.save(actCode).subscribe(actCode => {\n\n      switch (action) {\n        case 'save':\n          this.router.navigate(['act/list-code']);\n          this.alertService.success('Code ajouté avec succès')\n          break;\n\n        case 'save_and_new':\n          this.router.navigate(['act/add-code']);\n          this.alertService.success('Code ajouté avec succès')\n\n          break;\n\n        default: this.router.navigate(['act/list-code']);\n          this.alertService.error('Ajout annulée')\n\n          break;\n      }\n    }, \n    error => {\n      this.alertService.error(error);\n    });\n\n  }\n\n}\n","<app-act-code-form [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-act-code-form>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Act } from 'src/app/_models/act.model';\nimport { ActCategoryService } from 'src/app/_services/act-category.service';\nimport { ActCodeService } from 'src/app/_services/act-code.service';\nimport { ActFamilyService } from 'src/app/_services/act-family.service';\nimport { ActService } from 'src/app/_services/act.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { ValidateInt } from 'src/app/_utility/CustomValidators/int.Validator';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\n\n@Component({\n  selector: 'app-act-form',\n  templateUrl: './act-form.component.html',\n  styleUrls: ['./act-form.component.css']\n})\nexport class ActFormComponent implements OnInit {\n\n   /**\n   *   form Group\n   */\n  form: FormGroup;\n\n  /**\n  * form submission action, it will get the value of the action to do\n  */\n  formAction = '';\n\n  /** \n  * invalid from controls\n  */\n  invalidFormControls: any;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  actId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * child component output\n   */\n  @Output()\n  objectEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * the component model\n   */\n  act: Act;\n\n   /**\n   * define states options\n   */\n  actives = [\n    {id: \"Y\", value: \"Actif\"},\n    {id: \"N\", value: \"Inactif\"},\n  ];\n\n  /**\n   * define categories options\n   */\n  categories :  object;\n\n   /**\n   * define families options\n   */\n  families :  object;\n\n /**\n   * define actCodes options\n   */\n  actCodes :  object;\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   * @param redirectTo \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n\n  constructor(\n    private router: Router,\n    private alertService : AlertService,\n    private actService: ActService,\n    private actCategoryService: ActCategoryService,\n    private actCodeService: ActCodeService,\n    private actFamilyService: ActFamilyService\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.initUpdateAction();\n    this.actCategoryService.getIdAndName().subscribe(res => { this.categories= res; });\n    this.actCodeService.getIdAndName().subscribe(res => { this.actCodes= res; });\n    this.actFamilyService.getIdAndName().subscribe(res => { this.families= res; });\n\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n     this.form = new FormGroup({\n      id: new FormControl(0),\n      name: new FormControl('', Validators.required),\n      codification: new FormControl('', Validators.required),\n      active: new FormControl('Y'),\n      coefficient: new FormControl(null,[Validators.required, ValidateInt]),\n      actCode: new FormControl(null, Validators.required) ,\n      actCategory: new FormControl(null, Validators.required),\n      actGroup: new FormControl(null, Validators.required) ,\n      \n    });\n  }\n\n\n  /**\n   * init the form value when updating\n   */\n  initUpdateAction() {\n\n    if (this.actId) {\n\n      this.actService.findById(this.actId).subscribe(\n        act => {\n          if (act) {\n            this.act = act;\n            this.form.patchValue(act);\n          } else {\n            this.errorAction(\"Modification impossible car l'élément n'existe pas\", '/act/list');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de la modification\", '/act/list');\n          \n        })\n    }\n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the object\n    */\n  save() {\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    this.act = this.form.value;\n\n    if (this.form.valid) {\n      this.objectEmitter.emit({ act: this.act, action: this.formAction })\n      if (this.formAction == \"save_and_new\") this.initForm();\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n  /**\n   * get the form submission action\n   * @param action : string\n   */\n  actionToDo(action) {\n    this.formAction = action;\n  }\n\n  /**\n   * action to Do when  ckick on cancel button\n   */\n  cancelAction() {\n    this.errorAction('Action annulée', '/act/list');\n  }\n\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"mr-auto p-2 col-md-4\">\n                    <h3>{{title}}</h3>\n                </div>\n                <div class=\"col-md-5\">\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <button type=\"submit\" (click)=\"actionToDo('save')\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold\" value=\"save\">\n                                Enregistrer\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\" *ngIf='!actId'>\n                            <button type=\"submit\" (click)=\"actionToDo('save_and_new')\"\n                                class=\"btn btn-block btn-info btn-sm font-weight-bold\" value=\"save_and_new\">\n                                Enreg. & nouveau\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <span (click)=\"cancelAction()\" class=\"btn btn-block btn-danger btn-sm font-weight-bold\"\n                                value=\"cancel\">\n                                Annuler\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <p class=\"text-muted\"> NB: les champs marqués d'un astérisque ( <span class=\"text-danger\">*</span> ) sont\n                obligatoire pour la validation du formulare</p>\n            <div class=\"row\">\n                <div class=\"col-md-3\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Acte</label>\n                        <span class=\"text-danger\">*</span>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"nom de l'acte\">\n                        </div>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.name\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"form-group\">\n                        <label for=\"codification\">Codification</label>\n                        <span class=\"text-danger\">*</span>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"codification\" class=\"form-control\" placeholder=\"Codification\">\n                        </div>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.codification\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"form-group\">\n                        <label for=\"coefficient\">Coefficient</label>\n                        <span class=\"text-danger\">*</span>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"coefficient\" class=\"form-control\"\n                                placeholder=\"Coefficient\">\n                        </div>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.coefficient\">\n                            La valeur de ce champ doit être un entier\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"form-group\">\n                        <label for=\"typeactive\">Etat</label>\n                        <span class=\"text-danger\">*</span>\n                        <ng-select formControlName=\"active\" placeholder=\"Etat\">\n                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">{{active.value}}</ng-option>\n                        </ng-select>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.active\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-3\">\n                    <div class=\"form-group\">\n                        <label for=\"actCategory\">Categorie de l'acte</label>\n                        <span class=\"text-danger\">*</span>\n                        <ng-select formControlName=\"actCategory\" placeholder=\"Categorie de l'acte\">\n                            <ng-option *ngFor=\"let category of categories\" [value]=\"category.id\">{{category.name}}</ng-option>\n                        </ng-select>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.actCategory\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"form-group\">\n                        <label for=\"actGroup\">Famille de l'acte</label>\n                        <span class=\"text-danger\">*</span>\n                        <ng-select formControlName=\"actGroup\" placeholder=\"Famille de l'acte\">\n                            <ng-option *ngFor=\"let family of families\" [value]=\"family.id\">{{family.name}}</ng-option>\n                        </ng-select>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.actGroup\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"form-group\">\n                        <label for=\"actCode\">Code Acte</label>\n                        <span class=\"text-danger\">*</span>\n                        <ng-select formControlName=\"actCode\" placeholder=\"Code Acte\">\n                            <ng-option *ngFor=\"let actCode of actCodes\" [value]=\"actCode.id\" >{{actCode.name}}</ng-option>\n                        </ng-select>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.actCode\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <!-- hidden -->\n            <input type=\"hidden\" formControlName=\"id\">\n        </div>\n    </div>\n</form>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Act } from 'src/app/_models/act.model';\nimport { ActService } from 'src/app/_services/act.service';\nimport { deleteRow } from 'src/app/_utility/delete-row';\nimport { disableItem } from 'src/app/_utility/disable-item';\nimport { enableItem } from 'src/app/_utility/enable-item';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-act-list',\n  templateUrl: './act-list.component.html',\n  styleUrls: ['./act-list.component.css']\n})\nexport class ActListComponent implements OnInit {\n\n /**\n     * search formGroup\n     */\n    public form: FormGroup;\n\n    /**\n     * entries formGroup\n     */\n    public entryForm: FormGroup;\n  \n    /**\n     * init first page\n     */\n    public page = 0;\n  \n    /**\n     * number of item par page default 10\n     */\n    public perPage = 10;\n  \n    /**\n     * total items\n     */\n    public totalItem: number;\n  \n    /**\n     * number of page\n     */\n    public pages: number;\n  \n    /**\n     * handle the spinner\n     */\n    public loading = true;\n  \n    /**\n     * the selected item a action\n     */\n    public selectedItem: number;\n  \n    /**\n     * object model\n     */\n    act : Act;\n\n    /**\n     * collection of object\n     */\n    acts: Act[];\n  \n  \n    /**\n     * Define entries options\n     */\n    entries = [\n      { id: 10, value: 10 },\n      { id: 25, value: 25 },\n      { id: 50, value: 50 },\n      { id: 100, value: 100 }\n    ];\n\n   /**\n   * define  states options\n   */\n  actives = [\n    {id: \"Y\", value: \"Actif\"},\n    {id: \"N\", value: \"Inactif\"},\n  ]\n  \n    /**\n     *  order direction\n     */\n    order = 'desc';\n  \n    /**\n     * order column default id\n     */\n    sort = 'id';\n  \n    /**\n     * description of the order direction\n     */\n    orderDescription = 'decroissant';\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n   /**\n    * Msg to display when request result is empty\n    */\n   EmptyMessage: String;\n  \n  /**\n   * page title\n   */\n    @Input()\n    title: string;\n\n    /**\n     * devise\n     */\n    devise = environment.devise;\n  \n    constructor(\n      private actService: ActService,\n    ) { }\n  \n    ngOnInit() {\n      \n      this.initForm();\n      this.getActs();\n      \n    }\n  \n  \n    /**\n     *  init form \n     */\n    initForm() {\n      this.form = new FormGroup({\n        name: new FormControl(''),\n        active: new FormControl(null),\n      })\n  \n      this.entryForm = new FormGroup({\n        entries: new FormControl(10),\n      })\n    }\n  \n    /**\n     * get object paginated list\n     */\n    getActs() {\n      let data = this.form.value\n      data.entries = this.entryForm.get('entries').value;\n      data.page = this.page;\n      data.order = this.order;\n      data.sort = this.sort;\n     \n      this.actService.findAllByPage(data).subscribe(\n        res => {\n          if (res) {\n            this.loading = false;\n            this.hasNoData=false;\n            this.totalItem = res['totalElements'];\n            this.pages = res['totalPages'];\n            this.acts = res['content'];\n            this.page = res['pageNumber'] + 1;\n          };\n        },\n        error =>{\n              this.acts = [];\n              this.loading=false;\n              this.hasNoData=true;\n              this.EmptyMessage=error;\n        })\n    }\n  \n   \n  /**\n   * search function\n   */\n  search() {\n    this.loading = true;\n    this.page =this.page > 0 ? this.page - 1: 0;\n    this.getActs();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n    this.loading= true;\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getActs();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getActs();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.loading = true;\n    this.perPage = this.entryForm.get('entries').value;\n    this.page = this.page - 1;\n    this.getActs();\n  }\n\n  /**\n   * set the selected item \n   * @param item \n   */\n  onItemChange(item) {\n    this.selectedItem = item;\n  }\n\n  /**\n   * disable a act \n   */\n  disable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment desactiver cet acte?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n      if (result.value) {\n\n        this.actService.disable(this.selectedItem).subscribe(result => {\n          //disable item in the DOM\n          if (result) disableItem(this.acts, result['id']);\n\n          Swal.fire(\n            'Desactivé!',\n            'acte desactiver avec succès.',\n            'success'\n          );\n\n        });\n\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'l\\'acte n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n\n  /**\n   * enable an act \n   */\n  enable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Activer cet acte?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n\n      if (result.value) {\n        this.actService.enable(this.selectedItem).subscribe(result => {\n          //Enable item in the Dom\n          if (result) enableItem(this.acts, result['id']);\n\n          Swal.fire(\n            'Actvé!',\n            'acte activé avec succès.',\n            'success'\n          );\n\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'L\\'acte n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"row pl-3 pr-3\">\n            <div class=\"col-md-7\">\n                <form [formGroup]=\"form\">\n                    <div class=\"row\">\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                                            placeholder=\"Acte\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"active\" placeholder=\" Etat \" style=\"width: 100%;\">\n                                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">\n                                                {{active.value}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"px-2 col-lg-2 col-md-2 col-sm-12 mb-1\">\n                                <span class=\"btn btn-light btn-sm\" (click)=\"search()\" style=\"width: 100%;\">\n                                    <i class=\"fas fa-search\"></i>\n                                </span>\n                            </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-5\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/act/add\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold text-nowrap text-white\">\n                                <i class=\"fas fa-list mr-2\"></i>\n                                Nouveau\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/act/update/{{selectedItem}}\"\n                                class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-pen-alt mr-2\"></i>\n                                Modifier\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"enable()\"\n                                class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-on mr-2\"></i>\n                                Activer\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"disable()\"\n                                class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-off mr-2\"></i>\n                                Desactiver\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-10 text-center text-muted\">\n                <h4>{{title}}</h4>\n            </div>\n            <div class=\"col-md-2 text-right\">\n                <form [formGroup]=\"entryForm\">\n                     <div class=\"row\">\n                        <div for=\"entries\" class=\"col-sm-12 text-right mt-1\"> Afficher</div>\n                        <div class=\"col-sm-12 mb-2\">\n                            <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\"\n                                (change)=\"OnEntryChange()\">\n                                <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\n                            </ng-select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-sm table-hover table-bordered \">\n                <thead class=\"thead-light text-center\">\n                    <tr>\n                        <th scope=\"col\"></th>\n                        <th>Codification</th>\n                        <th scope=\"col\">Acte<i class=\"fa fa-sort ml-2\" (click)=\"onSort('name')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                                <th scope=\"col\">Categorie</th>\n                                <th scope=\"col\">Famille</th>\n                                <th scope=\"col\">Code</th>\n                                <th scope=\"col\">Coefficient</th>\n                                <th scope=\"col\">Coût</th>\n                        <th scope=\"col\">Etat <i class=\"fa fa-sort ml-2\" (click)=\"onSort('active')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">crée le </th>\n                        <th scope=\"col\">crée par</th>\n                        <th scope=\"col\">Dernière modif.</th>\n                        <th scope=\"col\">Modifié par</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let act of acts\">\n                        <th class=\"text-center\" scope=\"row\">\n                            <div class=\"custom-control custom-radio\">\n                                <input type=\"radio\" class=\"custom-control-input\" id=\"{{act.id}}\"\n                                    name=\"radio-stacked\" value=\"{{act.id}}\"\n                                    (change)=\"onItemChange($event.target.value)\">\n                                <label class=\"custom-control-label\" for=\"{{act.id}}\"></label>\n                            </div>\n                        </th> \n                        <td>{{act.codification}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{act.name}}</td>\n                        <td class=\"text-center text-nowrap\">{{act.actCategory}}</td>\n                        <td class=\"text-center text-nowrap\">{{act.actGroup}}</td>\n                        <td class=\"text-center tex-uppercase text-nowrap\">{{act.actCode}}</td>\n                        <td class=\"text-center text-nowrap\">{{act.coefficient}}</td>\n                        <td class=\"text-center text-nowrap\">{{act.amount+\" \"+ devise}}</td>\n                        <td class=\"text-capitalize text-center\">\n                            <i class=\"fas fa-circle\"\n                                [ngClass]=\"{'text-green': act.active=='Y', 'text-red': act.active=='N'}\"\n                                ngbTooltip=\"{{act.active=='Y'? 'Actif' : 'Inactif'}}\"></i>\n                        </td>\n                        <td class=\"text-center text-nowrap\">{{act.createdAt | date:'dd/MM/yyyy H:mm:ss'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{act.createdByFirstName +' '+ act.createdByLastName}}</td>\n                        <td class=\"text-center text-center text-nowrap\">{{act.updatedAt ? (act.updatedAt | date:'dd/MM/yyyy H:mm:ss') : 'Jamais modifié'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{act.UpdatedByFirstName ? act.UpdatedByFirstName +' '+ act.UpdatedByLastName : ''}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"text-center mb-5 mt-4\">\n            <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n            <div *ngIf=\"hasNoData\" class=\"mt-3\">\n                <span class=\"text-muted ml-3 \" >{{EmptyMessage}}</span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-7 offset-md-5\">\n                <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n                    (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-act-code',\n  templateUrl: './list-act-code.component.html',\n  styleUrls: ['./list-act-code.component.css']\n})\nexport class ListActCodeComponent implements OnInit {\n\n   /**\n   * title to display\n   */\n  title=\"Liste des Codes actes\";\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-act-code-list [title]='title'></app-act-code-list>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActFamily } from 'src/app/_models/actFamily.model';\nimport { ActFamilyService } from 'src/app/_services/act-family.service';\nimport { disableItem } from 'src/app/_utility/disable-item';\nimport { enableItem } from 'src/app/_utility/enable-item';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-act-family-list',\n  templateUrl: './act-family-list.component.html',\n  styleUrls: ['./act-family-list.component.css']\n})\nexport class ActFamilyListComponent implements OnInit {\n\n  /**\n     * search formGroup\n     */\n  public form: FormGroup;\n\n  /**\n   * entries formGroup\n   */\n  public entryForm: FormGroup;\n\n  /**\n   * init first page\n   */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * the selected item a action\n   */\n  public selectedItem: number;\n\n  /**\n   * object model\n   */\n  actFamily: ActFamily;\n\n  /**\n   * collection of object\n   */\n  actFamilies: ActFamily[];\n\n\n  /**\n   * Define entries options\n   */\n  entries = [\n    { id: 10, value: 10 },\n    { id: 25, value: 25 },\n    { id: 50, value: 50 },\n    { id: 100, value: 100 }\n  ];\n\n  /**\n  * define  states options\n  */\n  actives = [\n    { id: \"Y\", value: \"Actif\" },\n    { id: \"N\", value: \"Inactif\" },\n  ]\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * description of the order direction\n   */\n  orderDescription = 'decroissant';\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  /**\n   * page title\n   */\n  @Input()\n  title: string;\n\n  constructor(\n    private actFamilyService: ActFamilyService,\n  ) { }\n\n  ngOnInit() {\n\n    this.initForm();\n    this.getFamilies();\n\n  }\n\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      name: new FormControl(''),\n      active: new FormControl(null),\n    })\n\n    this.entryForm = new FormGroup({\n      entries: new FormControl(10),\n    })\n  }\n\n  /**\n   * get objects paginated list\n   */\n  getFamilies() {\n    let data = this.form.value\n    data.entries = this.entryForm.get('entries').value;\n    data.page = this.page;\n    data.order = this.order;\n    data.sort = this.sort;\n\n    this.actFamilyService.findAllByPage(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.actFamilies = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        this.actFamilies = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n  }\n\n\n  /**\n   * search function\n   */\n  search() {\n    this.loading = true;\n    this.page = this.page > 0 ? this.page - 1 : 0;\n    this.getFamilies();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n    this.loading = true;\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getFamilies();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getFamilies();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.loading = true;\n    this.perPage = this.entryForm.get('entries').value;\n    this.page = this.page - 1;\n    this.getFamilies();\n  }\n\n  /**\n   * set the selected item \n   * @param item \n   */\n  onItemChange(item) {\n    this.selectedItem = item;\n  }\n\n  /**\n   * disable a act family\n   */\n  disable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment desactiver cette famille d\\'actes?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n      if (result.value) {\n\n        this.actFamilyService.disable(this.selectedItem).subscribe(result => {\n          //disable item in the DOM\n          if (result) disableItem(this.actFamilies, result['id']);\n\n          Swal.fire(\n            'Desactivé!',\n            'famille d\\'actes desactiver avec succès.',\n            'success'\n          );\n\n        });\n\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'la famille d\\'actes n\\'a pas été modifiée.',\n          'error'\n        )\n      }\n    })\n  }\n\n  /**\n   * enable an act family\n   */\n  enable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Activer cette famille d\\'actes?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n\n      if (result.value) {\n        this.actFamilyService.enable(this.selectedItem).subscribe(result => {\n          //Enable item in the Dom\n          if (result) enableItem(this.actFamilies, result['id']);\n\n          Swal.fire(\n            'Actvé!',\n            'famille d\\'actes activé avec succès.',\n            'success'\n          );\n\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'La famille d\\'actes n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"row pl-3 pr-3\">\n            <div class=\"col-md-7\">\n                <form [formGroup]=\"form\">\n                    <div class=\"row\">\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                                            placeholder=\"Famille\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"active\" placeholder=\" Etat \" style=\"width: 100%;\">\n                                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">\n                                                {{active.value}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"px-2 col-lg-2 col-md-2 col-sm-12 mb-1\">\n                                <span class=\"btn btn-light btn-sm\" (click)=\"search()\" style=\"width: 100%;\">\n                                    <i class=\"fas fa-search\"></i>\n                                </span>\n                            </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-5\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/act/add-family\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold text-nowrap text-white\">\n                                <i class=\"fas fa-list mr-2\"></i>\n                                Nouveau\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/act/update-family/{{selectedItem}}\"\n                                class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-pen-alt mr-2\"></i>\n                                Modifier\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"enable()\"\n                                class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-on mr-2\"></i>\n                                Activer\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"disable()\"\n                                class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-off mr-2\"></i>\n                                Desactiver\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-10 text-center text-muted\">\n                <h4>{{title}}</h4>\n            </div>\n            <div class=\"col-md-2 text-right\">\n                <form [formGroup]=\"entryForm\">\n                     <div class=\"row\">\n                        <div for=\"entries\" class=\"col-sm-12 text-right mt-1\"> Afficher</div>\n                        <div class=\"col-sm-12 mb-2\">\n                            <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\"\n                                (change)=\"OnEntryChange()\">\n                                <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\n                            </ng-select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-sm table-hover table-bordered \">\n                <thead class=\"thead-light text-center\">\n                    <tr>\n                        <th scope=\"col\"></th>\n                        <th>ID</th>\n                        <th scope=\"col\">Famille d'actes<i class=\"fa fa-sort ml-2\" (click)=\"onSort('name')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">Etat <i class=\"fa fa-sort ml-2\" (click)=\"onSort('active')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">crée le </th>\n                        <th scope=\"col\">crée par</th>\n                        <th scope=\"col\">Dernière modif.</th>\n                        <th scope=\"col\">Modifié par</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let family of actFamilies\">\n                        <th class=\"text-center\" scope=\"row\">\n                            <div class=\"custom-control custom-radio\">\n                                <input type=\"radio\" class=\"custom-control-input\" id=\"{{family.id}}\"\n                                    name=\"radio-stacked\" value=\"{{family.id}}\"\n                                    (change)=\"onItemChange($event.target.value)\">\n                                <label class=\"custom-control-label\" for=\"{{family.id}}\"></label>\n                            </div>\n                        </th> \n                       <td>{{family.id}}</td>\n                        <td class=\"text-capitalize\">{{family.name}}</td>\n                        <td class=\"text-capitalize text-center\">\n                            <i class=\"fas fa-circle\"\n                                [ngClass]=\"{'text-green': family.active=='Y', 'text-red': family.active=='N'}\"\n                                ngbTooltip=\"{{family.active=='Y'? 'Actif' : 'Inactif'}}\"></i>\n                        </td>\n                        <td class=\"text-center\">{{family.createdAt | date:'dd/MM/yyyy H:mm:ss'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{family.createdByFirstName +' '+ family.createdByLastName}}</td>\n                        <td class=\"text-center text-center text-nowrap\">{{family.updatedAt ? (family.updatedAt | date:'dd/MM/yyyy H:mm:ss') : 'Jamais modifié'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{family.UpdatedByFirstName ? family.UpdatedByFirstName +' '+ family.UpdatedByLastName : ''}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"text-center mb-5 mt-4\">\n            <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n            <div *ngIf=\"hasNoData\" class=\"mt-3\">\n                <span class=\"text-muted ml-3 \" >{{EmptyMessage}}</span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-7 offset-md-5\">\n                <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n                    (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n            </div>\n\n        </div>\n    </div>\n</div>","/**\r\n * disable object from the DOM whithout refresh the page  after  disabling from the database\r\n * @param array array of objects\r\n * @param rowId row to disable\r\n */\r\nexport function disableItem( array : any, rowId : number){\r\n    for (let i = 0; i < array.length; ++i) {\r\n      \r\n        if (array[i].id === rowId) {\r\n            array[i].active = 'N'; \r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ActCodeService } from 'src/app/_services/act-code.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-update-act-code',\n  templateUrl: './update-act-code.component.html',\n  styleUrls: ['./update-act-code.component.css']\n})\nexport class UpdateActCodeComponent implements OnInit {\n\n   \n  /**\n  * code id \n  */\n actCodeId: number;\n\n /**\n  * title to display\n  */\n title = \"Modification d'un code d'actes\";\n\n\n constructor(\n   private router: Router,\n   private activatedRoute: ActivatedRoute,\n   private actCodeService: ActCodeService,\n   private alertService: AlertService\n ) { }\n\n ngOnInit(): void {\n   this.activatedRoute.params.subscribe(params => {\n     this.actCodeId = params.id;\n   })\n }\n\n /**\n  * update existing object\n  * @param data object\n  */\n save(data) {\n\n   let actCode = data.actCode;\n   let action = data.action;\n\n   this.actCodeService.update(actCode).subscribe(res => {\n     this.router.navigate(['/act/list-code']);\n     this.alertService.success('Code modifié avec succès')\n   })\n }\n\n}\n","<app-act-code-form [actCodeId]=\"actCodeId\" [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-act-code-form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActCategory } from 'src/app/_models/actCategory.model';\nimport { ActCategoryService } from 'src/app/_services/act-category.service';\nimport { deleteRow } from 'src/app/_utility/delete-row';\nimport { disableItem } from 'src/app/_utility/disable-item';\nimport { enableItem } from 'src/app/_utility/enable-item';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-act-category-list',\n  templateUrl: './act-category-list.component.html',\n  styleUrls: ['./act-category-list.component.css']\n})\nexport class ActCategoryListComponent implements OnInit {\n  /**\n      * search formGroup\n      */\n  public form: FormGroup;\n\n  /**\n   * entries formGroup\n   */\n  public entryForm: FormGroup;\n\n  /**\n   * init first page\n   */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * the selected item a action\n   */\n  public selectedItem: number;\n\n  /**\n   * object model\n   */\n  actCategory: ActCategory;\n\n  /**\n   * collection of object\n   */\n  actCategories: ActCategory[];\n\n\n  /**\n   * Define entries options\n   */\n  entries = [\n    { id: 10, value: 10 },\n    { id: 25, value: 25 },\n    { id: 50, value: 50 },\n    { id: 100, value: 100 }\n  ];\n\n  /**\n  * define  states options\n  */\n  actives = [\n    { id: \"Y\", value: \"Actif\" },\n    { id: \"N\", value: \"Inactif\" },\n  ]\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * description of the order direction\n   */\n  orderDescription = 'decroissant';\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  /**\n   * page title\n   */\n  @Input()\n  title: string;\n\n  constructor(\n    private actCategoryService: ActCategoryService,\n  ) { }\n\n  ngOnInit() {\n\n    this.initForm();\n    this.getActCodes();\n\n  }\n\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      name: new FormControl(''),\n      active: new FormControl(null),\n    })\n\n    this.entryForm = new FormGroup({\n      entries: new FormControl(10),\n    })\n  }\n\n  /**\n   * get objects paginated list\n   */\n  getActCodes() {\n    let data = this.form.value\n    data.entries = this.entryForm.get('entries').value;\n    data.page = this.page;\n    data.order = this.order;\n    data.sort = this.sort;\n\n    this.actCategoryService.findAllByPage(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.actCategories = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        this.actCategories = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n  }\n\n\n  /**\n   * search function\n   */\n  search() {\n    this.loading = true;\n    this.page = this.page > 0 ? this.page - 1 : 0;\n    this.getActCodes();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n    this.loading = true;\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getActCodes();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getActCodes();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.loading = true;\n    this.perPage = this.entryForm.get('entries').value;\n    this.page = this.page - 1;\n    this.getActCodes();\n  }\n\n  /**\n   * set the selected item \n   * @param item \n   */\n  onItemChange(item) {\n    this.selectedItem = item;\n  }\n\n  /**\n   * disable an act code\n   */\n  disable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment desactiver cette catégorie d\\'actes?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n      if (result.value) {\n\n        this.actCategoryService.disable(this.selectedItem).subscribe(result => {\n          //disable item in the DOM\n          if (result) disableItem(this.actCategories, result['id']);\n\n          Swal.fire(\n            'Desactivé!',\n            'catégorie d\\'actes desactiver avec succès.',\n            'success'\n          );\n\n        });\n\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'la catégorie d\\'actes n\\'a pas été modifiée.',\n          'error'\n        )\n      }\n    })\n  }\n\n  /**\n   * enable an act code\n   */\n  enable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Activer cette catégorie d\\'actes?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n\n      if (result.value) {\n        this.actCategoryService.enable(this.selectedItem).subscribe(result => {\n          //Enable item in the Dom\n          if (result) enableItem(this.actCategories, result['id']);\n\n          Swal.fire(\n            'Actvé!',\n            'catégorie d\\'actes activé avec succès.',\n            'success'\n          );\n\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'La catégorie d\\'actes n\\'a pas été modifiée.',\n          'error'\n        )\n      }\n    })\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"row pl-3 pr-3\">\n            <div class=\"col-md-7\">\n                <form [formGroup]=\"form\">\n                    <div class=\"row\">\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                                            placeholder=\"Catégorie\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"active\" placeholder=\" Etat \" style=\"width: 100%;\">\n                                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">\n                                                {{active.value}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"px-2 col-lg-2 col-md-2 col-sm-12 mb-1\">\n                                <span class=\"btn btn-light btn-sm\" (click)=\"search()\" style=\"width: 100%;\">\n                                    <i class=\"fas fa-search\"></i>\n                                </span>\n                            </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-5\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/act/add-category\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold text-nowrap text-white\">\n                                <i class=\"fas fa-list mr-2\"></i>\n                                Nouveau\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/act/update-category/{{selectedItem}}\"\n                                class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-pen-alt mr-2\"></i>\n                                Modifier\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"enable()\"\n                                class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-on mr-2\"></i>\n                                Activer\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"disable()\"\n                                class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-off mr-2\"></i>\n                                Desactiver\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-10 text-center text-muted\">\n                <h4>{{title}}</h4>\n            </div>\n            <div class=\"col-md-2 text-right\">\n                <form [formGroup]=\"entryForm\">\n                     <div class=\"row\">\n                        <div for=\"entries\" class=\"col-sm-12 text-right mt-1\"> Afficher</div>\n                        <div class=\"col-sm-12 mb-2\">\n                            <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\"\n                                (change)=\"OnEntryChange()\">\n                                <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\n                            </ng-select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-sm table-hover table-bordered \">\n                <thead class=\"thead-light text-center\">\n                    <tr>\n                        <th scope=\"col\"></th>\n                        <th>ID</th>\n                        <th scope=\"col\">Catégorie d'actes<i class=\"fa fa-sort ml-2\" (click)=\"onSort('name')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">Etat <i class=\"fa fa-sort ml-2\" (click)=\"onSort('active')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">crée le </th>\n                        <th scope=\"col\">crée par</th>\n                        <th scope=\"col\">Dernière modif.</th>\n                        <th scope=\"col\">Modifié par</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let category of actCategories\">\n                        <th class=\"text-center\" scope=\"row\">\n                            <div class=\"custom-control custom-radio\">\n                                <input type=\"radio\" class=\"custom-control-input\" id=\"{{category.id}}\"\n                                    name=\"radio-stacked\" value=\"{{category.id}}\"\n                                    (change)=\"onItemChange($event.target.value)\">\n                                <label class=\"custom-control-label\" for=\"{{category.id}}\"></label>\n                            </div>\n                        </th> \n                       <td>{{category.id}}</td>\n                        <td class=\"text-capitalize\">{{category.name}}</td>\n                        <td class=\"text-capitalize text-center\">\n                            <i class=\"fas fa-circle\"\n                                [ngClass]=\"{'text-green': category.active=='Y', 'text-red': category.active=='N'}\"\n                                ngbTooltip=\"{{category.active=='Y'? 'Actif' : 'Inactif'}}\"></i>\n                        </td>\n                        <td class=\"text-center\">{{category.createdAt | date:'dd/MM/yyyy H:mm:ss'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{category.createdByFirstName +' '+ category.createdByLastName}}</td>\n                        <td class=\"text-center text-center text-nowrap\">{{category.updatedAt ? (category.updatedAt | date:'dd/MM/yyyy H:mm:ss') : 'Jamais modifié'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{category.UpdatedByFirstName ? category.UpdatedByFirstName +' '+ category.UpdatedByLastName : ''}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"text-center mb-5 mt-4\">\n            <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n            <div *ngIf=\"hasNoData\" class=\"mt-3\">\n                <span class=\"text-muted ml-3 \" >{{EmptyMessage}}</span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-7 offset-md-5\">\n                <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n                    (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActFamilyService } from 'src/app/_services/act-family.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-add-act-family',\n  templateUrl: './add-act-family.component.html',\n  styleUrls: ['./add-act-family.component.css']\n})\nexport class AddActFamilyComponent implements OnInit {\n\n  /**\n   * title to display\n   */\n  title = \"Ajouter un famille d'acte\";\n\n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    private actFamilyService: ActFamilyService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * add a new object\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let actFamily = data.actFamily;\n    let action = data.action;\n     \n    this.actFamilyService.save(actFamily).subscribe(res => {\n\n      switch (action) {\n        case 'save':\n          this.router.navigate(['act/list-family']);\n          this.alertService.success('Famille d\\'actes ajouté avec succès')\n          break;\n\n        case 'save_and_new':\n          this.router.navigate(['act/add-family']);\n          this.alertService.success('Famille d\\'actes ajouté avec succès')\n\n          break;\n\n        default: this.router.navigate(['act/list-family']);\n          this.alertService.error('Ajout annulée')\n\n          break;\n      }\n    },\n    error => {\n      this.alertService.error(error);\n    });\n\n  }\n\n\n}\n","<app-act-family-form [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-act-family-form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ActRoutingModule } from './act-routing.module';\nimport { AddActCategoryComponent } from './add-act-category/add-act-category.component';\nimport { UpdateActCategoryComponent } from './update-act-category/update-act-category.component';\nimport { ListActCategoryComponent } from './list-act-category/list-act-category.component';\nimport { ActCategoryFormComponent } from './../_shared/act/act-category-form/act-category-form.component';\nimport { ActCategoryListComponent } from './../_shared/act/act-category-list/act-category-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgbPaginationModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AddActFamilyComponent } from './add-act-family/add-act-family.component';\nimport { UpdateActFamilyComponent } from './update-act-family/update-act-family.component';\nimport { ListActFamilyComponent } from './list-act-family/list-act-family.component';\nimport { AddActCodeComponent } from './add-act-code/add-act-code.component';\nimport { ListActCodeComponent } from './list-act-code/list-act-code.component';\nimport { UpdateActCodeComponent } from './update-act-code/update-act-code.component';\nimport { ActCodeListComponent } from './../_shared/act/act-code-list/act-code-list.component';\nimport { ActCodeFormComponent } from './../_shared/act/act-code-form/act-code-form.component';\nimport { ActFamilyFormComponent } from '../_shared/act/act-family-form/act-family-form.component';\nimport { ActFamilyListComponent } from '../_shared/act/act-family-list/act-family-list.component';\nimport { AddActComponent } from './add-act/add-act.component';\nimport { UpdateActComponent } from './update-act/update-act.component';\nimport { ListActComponent } from './list-act/list-act.component';\nimport { ActFormComponent } from '../_shared/act/act-form/act-form.component';\nimport { ActListComponent } from '../_shared/act/act-list/act-list.component';\n\n@NgModule({\n  declarations: [\n    AddActCategoryComponent, \n    UpdateActCategoryComponent, \n    ListActCategoryComponent, \n    ActCategoryFormComponent, \n    ActCategoryListComponent, \n    AddActFamilyComponent, \n    UpdateActFamilyComponent, \n    ListActFamilyComponent, \n    AddActCodeComponent, \n    ListActCodeComponent, \n    UpdateActCodeComponent, \n    ActCodeFormComponent, \n    ActCodeListComponent, \n    ActFamilyFormComponent, \n    ActFamilyListComponent, \n    AddActComponent, \n    UpdateActComponent, \n    ListActComponent, \n    ActFormComponent, \n    ActListComponent,\n    \n  ],\n  imports: [ \n    CommonModule,\n    ActRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    NgbPaginationModule,\n    NgbTooltipModule\n  ]\n})\nexport class ActModule { }\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Act } from '../_models/act.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActService {\n\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   *  POST: add a new object to the database \n   */\n  save(act: Act): Observable<Act> {\n    return this.http.post<Act>(environment.baseUrl2 + '/act/add', act);\n  }\n\n  /** \n   * PUT: update the object on the server. Returns the updated objet upon success. \n   */\n  update(data): Observable<Act> {\n    return this.http.put<Act>(environment.baseUrl2 + '/act/update/' + data.id, data);\n  }\n\n  /**\n   * get a list of object\n   */\n  findAll(): Observable<any[]> {\n    return this.http.get<any[]>(environment.baseUrl2 + '/act/list');\n  }\n\n  /**\n * get a paginated list of object\n */\n  findAllByPage(data): Observable<any[]> {\n    let queryParams = {};\n    data['active'] = (data['active'] == null) ? '' : data['active'];\n\n    queryParams = {\n      params: new HttpParams().set('page', data['page'])\n        .set('size', data['entries'])\n        .set('name', data['name'])\n        .set('coding', data['coding'])\n        .set('coefficient', data['coefficient'])\n        .set('codeActe', data['codeActe'])\n        .set('category', data['category'])\n        .set('family', data['family'])\n        .set('active', data['active'])\n        .set('sort', data['sort'] + ',' + data['order'])\n    };\n    return this.http.get<any[]>(environment.baseUrl2 + '/act/p_list', queryParams);\n  }\n\n  /**\n   * get a list of active object\n   */\n  findActive(): Observable<any[]> {\n    return this.http.get<any[]>(environment.baseUrl2 + '/act/active_list');\n\n  }\n\n  /**\n   * enable a object\n   */\n  enable(id): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/act/enable/' + id);\n\n  }\n\n  /**\n   * disable a object\n   */\n  disable(id): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/act/disable/' + id);\n  }\n\n  /**\n   * get object by id\n   * @param id \n   */\n  findById(id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/act/detail/' + id);\n  }\n\n  /**\n   * get a list of object\n   */\n  getIdAndName(): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/act/active_acts_name');\n  }\n\n  /**\n    * get object by criteria\n    * \n    */\n  findByCriteria(data): Observable<any[]> {\n    let queryParams = {};\n    data['category'] = (data['category'] == null) ? '' : data['category'];\n    data['family'] = (data['family'] == null) ? '' : data['family'];\n\n    queryParams = {\n      params: new HttpParams().set('name', data['name'])\n        .set('category', data['category'])\n        .set('group', data['family'])\n    };\n\n    return this.http.get<any[]>(environment.baseUrl2 + '/act/active_by_criteria', queryParams);\n  }\n\n  /**\n   * get object by bill id\n   * @param id \n   */\n  findByBill(id: number): Observable<any> {\n    return this.http.get<any>(environment.baseUrl2 + '/act/find-by-bill/' + id);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ActFamilyService } from 'src/app/_services/act-family.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-update-act-family',\n  templateUrl: './update-act-family.component.html',\n  styleUrls: ['./update-act-family.component.css']\n})\nexport class UpdateActFamilyComponent implements OnInit {\n\n  \n  /**\n  * family id \n  */\n actFamilyId: number;\n\n /**\n  * title to display\n  */\n title = \"Modification d'une Famille d'actes\";\n\n\n constructor(\n   private router: Router,\n   private activatedRoute: ActivatedRoute,\n   private actFamilyService: ActFamilyService,\n   private alertService: AlertService\n ) { }\n\n ngOnInit(): void {\n   this.activatedRoute.params.subscribe(params => {\n     this.actFamilyId = params.id;\n   })\n }\n\n /**\n  * update existing object\n  * @param data object\n  */\n save(data) {\n\n   let actFamily = data.actFamily;\n   let action = data.action;\n\n   this.actFamilyService.update(actFamily).subscribe(res => {\n     this.router.navigate(['/act/list-family']);\n     this.alertService.success('Famille modifié avec succès')\n   })\n }\n}\n","<app-act-family-form [actFamilyId]=\"actFamilyId\" [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-act-family-form>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ActCode } from 'src/app/_models/actCode.model';\nimport { ActCodeService } from 'src/app/_services/act-code.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { ValidateInt } from 'src/app/_utility/CustomValidators/int.Validator';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\n\n@Component({\n  selector: 'app-act-code-form',\n  templateUrl: './act-code-form.component.html',\n  styleUrls: ['./act-code-form.component.css']\n})\nexport class ActCodeFormComponent implements OnInit {\n\n   /**\n   *   form Group\n   */\n  form: FormGroup;\n\n  /**\n  * form submission action, it will get the value of the action to do\n  */\n  formAction = '';\n\n  /**\n   * invalid from controls\n   */\n  invalidFormControls: any;\n\n\n  /**\n   * parent component input\n   */\n  @Input()\n  actCodeId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * child component output\n   */\n  @Output()\n  objectEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * the component model\n   */\n  actCode: ActCode\n\n   /**\n   * define  states options\n   */\n  actives = [\n    {id: \"Y\", value: \"Actif\"},\n    {id: \"N\", value: \"Inactif\"},\n  ]\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   * @param redirectTo \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n\n  constructor(\n    private router: Router,\n    private alertService : AlertService,\n    private actCodeService: ActCodeService\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    if (this.actCodeId) this.initUpdateAction();\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      id: new FormControl(0),\n      name: new FormControl('', Validators.required),\n      value: new FormControl('', [Validators.required, ValidateInt]),\n      active: new FormControl('Y', Validators.required),\n      \n    });\n  }\n  /**\n   * init the form value when updating\n   */\n  initUpdateAction() {\n      this.actCodeService.findById(this.actCodeId).subscribe(\n        res => {\n          if (res) {\n            this.actCode = res;\n            this.form.patchValue(this.actCode)\n          } else {\n            this.errorAction(\"Modification impossible car le code d'actes n'existe pas\", '/act/list-code');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de la modification\", '/act/list-code');\n        })\n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the object\n    */\n  save() {\n    // reset alerts on submit\n    this.alertService.clear();\n\n    //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    this.actCode = this.form.value;\n  \n    if (this.form.valid) {\n      this.objectEmitter.emit({ actCode: this.actCode, action: this.formAction })\n      if (this.formAction == \"save_and_new\") this.initForm();\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n  /**\n   * get the form submission action\n   * @param action : string\n   */\n  actionToDo(action) {\n    this.formAction = action;\n  }\n\n  /**\n   * action to Do when  ckick on cancel button\n   */\n  cancelAction() {\n    this.errorAction('Action annulée', '/act/list-family');\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"mr-auto p-2 col-md-6\">\n                    <h3>{{title}}</h3>\n                </div>\n                <div class=\"col-md-5\">\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <button type=\"submit\" (click)=\"actionToDo('save')\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold\" value=\"save\">\n                                Enregistrer\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\" *ngIf='!actCodeId'>\n                            <button type=\"submit\" (click)=\"actionToDo('save_and_new')\"\n                                class=\"btn btn-block btn-info btn-sm font-weight-bold\" value=\"save_and_new\">\n                                Enreg. & nouveau\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <span (click)=\"cancelAction()\" class=\"btn btn-block btn-danger btn-sm font-weight-bold\"\n                                value=\"cancel\">\n                                Annuler\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <p class=\"text-muted\"> NB: les champs marqués d'un astérisque ( <span class=\"text-danger\">*</span> ) sont\n                obligatoire pour la validation du formulare</p>\n            <div class=\"row\">\n                <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Code d'actes</label>\n                        <span class=\"text-danger\">*</span>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Code d'actes\">\n                        </div>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.name\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                    <div class=\"form-group\">\n                        <label for=\"value\">Valeur</label>\n                        <span class=\"text-danger\">*</span>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"value\" class=\"form-control\" placeholder=\"Code d'actes\">\n                        </div>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.value\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                    <div class=\"form-group\">\n                        <label for=\"typeactive\">Etat</label>\n                        <span class=\"text-red\">*</span>\n                        <ng-select formControlName=\"active\">\n                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">{{active.value}}</ng-option>\n                        </ng-select>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.active\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n\n            </div>\n            <!-- hidden -->\n            <input type=\"hidden\" formControlName=\"id\">\n        </div>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActService } from 'src/app/_services/act.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-add-act',\n  templateUrl: './add-act.component.html',\n  styleUrls: ['./add-act.component.css']\n})\nexport class AddActComponent implements OnInit {\n\n   /**\n   * title to display\n   */\n  title = \"Ajouter un acte\";\n\n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    private actService: ActService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * add a new object\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let act = data.act;\n    let action = data.action;\n     \n    this.actService.save(act).subscribe(act => {\n\n      switch (action) {\n        case 'save':\n          this.router.navigate(['act/list']);\n          this.alertService.success('Acte ajouté avec succès')\n          break;\n\n        case 'save_and_new':\n          this.router.navigate(['act/add']);\n          this.alertService.success('Acte ajouté avec succès')\n\n          break;\n\n        default: this.router.navigate(['act/list']);\n          this.alertService.error('Ajout annulée')\n\n          break;\n      }\n    });\n\n  }\n\n}\n","<app-act-form [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-act-form>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ActFamily } from 'src/app/_models/actFamily.model';\nimport { ActFamilyService } from 'src/app/_services/act-family.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\n\n@Component({\n  selector: 'app-act-family-form',\n  templateUrl: './act-family-form.component.html',\n  styleUrls: ['./act-family-form.component.css']\n})\nexport class ActFamilyFormComponent implements OnInit {\n /**\n   *   form Group\n   */\n  form: FormGroup;\n\n  /**\n  * form submission action, it will get the value of the action to do\n  */\n  formAction = '';\n\n  /**\n   * invalid from controls\n   */\n  invalidFormControls: any;\n\n\n  /**\n   * parent component input\n   */\n  @Input()\n  actFamilyId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * child component output\n   */\n  @Output()\n  objectEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * the component model\n   */\n  actFamily: ActFamily\n\n   /**\n   * define  states options\n   */\n  actives = [\n    {id: \"Y\", value: \"Actif\"},\n    {id: \"N\", value: \"Inactif\"},\n  ]\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   * @param redirectTo \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n\n  constructor(\n    private router: Router,\n    private alertService : AlertService,\n    private actFamilyService: ActFamilyService\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    if (this.actFamilyId) this.initUpdateAction();\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      id: new FormControl(0),\n      name: new FormControl('', Validators.required),\n      active: new FormControl('Y', Validators.required),\n      \n    });\n  }\n  /**\n   * init the form value when updating\n   */\n  initUpdateAction() {\n      this.actFamilyService.findById(this.actFamilyId).subscribe(\n        res => {\n          if (res) {\n            this.actFamily = res;\n            this.form.patchValue(this.actFamily)\n          } else {\n            this.errorAction(\"Modification impossible car la famille d'actes n'existe pas\", '/act/list-family');\n          }\n        },\n        error => {\n          this.errorAction(\"Erreur lors de la modification\", '/act/list-family');\n        })\n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the object\n    */\n  save() {\n    // reset alerts on submit\n    this.alertService.clear();\n\n    //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    this.actFamily = this.form.value;\n  \n    if (this.form.valid) {\n      this.objectEmitter.emit({ actFamily: this.actFamily, action: this.formAction })\n      if (this.formAction == \"save_and_new\") this.initForm();\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n  /**\n   * get the form submission action\n   * @param action : string\n   */\n  actionToDo(action) {\n    this.formAction = action;\n  }\n\n  /**\n   * action to Do when  ckick on cancel button\n   */\n  cancelAction() {\n    this.errorAction('Action annulée', '/act/list-family');\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"mr-auto p-2 col-md-6\">\n                    <h3>{{title}}</h3>\n                </div>\n                <div class=\"col-md-5\">\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <button type=\"submit\" (click)=\"actionToDo('save')\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold\" value=\"save\">\n                                Enregistrer\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\" *ngIf='!actFamilyId'>\n                            <button type=\"submit\" (click)=\"actionToDo('save_and_new')\"\n                                class=\"btn btn-block btn-info btn-sm font-weight-bold\" value=\"save_and_new\">\n                                Enreg. & nouveau\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-4  col-md-6 col-sm-12  text-nowrap\">\n                            <span (click)=\"cancelAction()\" class=\"btn btn-block btn-danger btn-sm font-weight-bold\"\n                                value=\"cancel\">\n                                Annuler\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <p class=\"text-muted\"> NB: les champs marqués d'un astérisque ( <span class=\"text-danger\">*</span> ) sont\n                obligatoire pour la validation du formulare</p>\n            <div class=\"row\">\n                <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Famille d'actes</label>\n                        <span class=\"text-danger\">*</span>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Famille d'actes\">\n                        </div>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.name\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                    <div class=\"form-group\">\n                        <label for=\"typeactive\">Etat</label>\n                        <span class=\"text-red\">*</span>\n                        <ng-select formControlName=\"active\">\n                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">{{active.value}}</ng-option>\n                        </ng-select>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.active\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n\n            </div>\n            <!-- hidden -->\n            <input type=\"hidden\" formControlName=\"id\">\n        </div>\n    </div>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActCode } from 'src/app/_models/actCode.model';\nimport { ActCodeService } from 'src/app/_services/act-code.service';\nimport { disableItem } from 'src/app/_utility/disable-item';\nimport { enableItem } from 'src/app/_utility/enable-item';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-act-code-list',\n  templateUrl: './act-code-list.component.html',\n  styleUrls: ['./act-code-list.component.css']\n})\nexport class ActCodeListComponent implements OnInit {\n  \n  /**\n   * search formGroup\n   */\n  public form: FormGroup;\n\n  /**\n   * entries formGroup\n   */\n  public entryForm: FormGroup;\n\n  /**\n   * init first page\n   */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * the selected item a action\n   */\n  public selectedItem: number;\n\n  /**\n   * object model\n   */\n  actCode: ActCode;\n\n  /**\n   * collection of object\n   */\n  actCodes: ActCode[];\n\n\n  /**\n   * Define entries options\n   */\n  entries = [\n    { id: 10, value: 10 },\n    { id: 25, value: 25 },\n    { id: 50, value: 50 },\n    { id: 100, value: 100 }\n  ];\n\n  /**\n  * define  states options\n  */\n  actives = [\n    { id: \"Y\", value: \"Actif\" },\n    { id: \"N\", value: \"Inactif\" },\n  ]\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * description of the order direction\n   */\n  orderDescription = 'decroissant';\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n  /**\n   * Msg to display when request result is empty\n   */\n  EmptyMessage: String;\n\n  /**\n   * page title\n   */\n  @Input()\n  title: string;\n\n  constructor(\n    private actCodeService: ActCodeService,\n  ) { }\n\n  ngOnInit() {\n\n    this.initForm();\n    this.getCodes();\n\n  }\n\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      name: new FormControl(''),\n      active: new FormControl(null),\n    })\n\n    this.entryForm = new FormGroup({\n      entries: new FormControl(10),\n    })\n  }\n\n  /**\n   * get object paginated list\n   */\n  getCodes() {\n    let data = this.form.value\n    data.entries = this.entryForm.get('entries').value;\n    data.page = this.page;\n    data.order = this.order;\n    data.sort = this.sort;\n\n    this.actCodeService.findAllByPage(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData = false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.actCodes = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error => {\n        this.actCodes = [];\n        this.loading = false;\n        this.hasNoData = true;\n        this.EmptyMessage = error;\n      })\n  }\n\n\n  /**\n   * search function\n   */\n  search() {\n    this.loading = true;\n    this.page = this.page > 0 ? this.page - 1 : 0;\n    this.getCodes();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n    this.loading = true;\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getCodes();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getCodes();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.loading = true;\n    this.perPage = this.entryForm.get('entries').value;\n    this.page = this.page - 1;\n    this.getCodes();\n  }\n\n  /**\n   * set the selected item \n   * @param item \n   */\n  onItemChange(item) {\n    this.selectedItem = item;\n  }\n\n  /**\n   * disable a act code\n   */\n  disable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment desactiver ce code d\\'actes?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n      if (result.value) {\n\n        this.actCodeService.disable(this.selectedItem).subscribe(result => {\n          //disable item in the DOM\n          if (result) disableItem(this.actCodes, result['id']);\n\n          Swal.fire(\n            'Desactivé!',\n            'code d\\'actes desactiver avec succès.',\n            'success'\n          );\n\n        });\n\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'le code d\\'actes n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n\n  /**\n   * enable an act code\n   */\n  enable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Activer ce code d\\'actes?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n\n      if (result.value) {\n        this.actCodeService.enable(this.selectedItem).subscribe(result => {\n          //Enable item in the Dom\n          if (result) enableItem(this.actCodes, result['id']);\n\n          Swal.fire(\n            'Actvé!',\n            'code d\\'actes activé avec succès.',\n            'success'\n          );\n\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'Le code d\\'actes n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"row pl-3 pr-3\">\n            <div class=\"col-md-7\">\n                <form [formGroup]=\"form\">\n                    <div class=\"row\">\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                                            placeholder=\"Code\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"active\" placeholder=\" Etat \" style=\"width: 100%;\">\n                                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">\n                                                {{active.value}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"px-2 col-lg-2 col-md-2 col-sm-12 mb-1\">\n                                <span class=\"btn btn-light btn-sm\" (click)=\"search()\" style=\"width: 100%;\">\n                                    <i class=\"fas fa-search\"></i>\n                                </span>\n                            </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-5\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/act/add-code\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold text-nowrap text-white\">\n                                <i class=\"fas fa-list mr-2\"></i>\n                                Nouveau\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/act/update-code/{{selectedItem}}\"\n                                class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-pen-alt mr-2\"></i>\n                                Modifier\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"enable()\"\n                                class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-on mr-2\"></i>\n                                Activer\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a (click)=\"disable()\"\n                                class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-off mr-2\"></i>\n                                Desactiver\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-10 text-center text-muted\">\n                <h4>{{title}}</h4>\n            </div>\n            <div class=\"col-md-2 text-right\">\n                <form [formGroup]=\"entryForm\">\n                     <div class=\"row\">\n                        <div for=\"entries\" class=\"col-sm-12 text-right mt-1\"> Afficher</div>\n                        <div class=\"col-sm-12 mb-2\">\n                            <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\"\n                                (change)=\"OnEntryChange()\">\n                                <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\n                            </ng-select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-sm table-hover table-bordered \">\n                <thead class=\"thead-light text-center\">\n                    <tr>\n                        <th scope=\"col\"></th>\n                        <th>ID</th>\n                        <th scope=\"col\">Code d'actes<i class=\"fa fa-sort ml-2\" (click)=\"onSort('name')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\"> Valeur</th>\n                        <th scope=\"col\">Etat <i class=\"fa fa-sort ml-2\" (click)=\"onSort('active')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">crée le </th>\n                        <th scope=\"col\">crée par</th>\n                        <th scope=\"col\">Dernière modif.</th>\n                        <th scope=\"col\">Modifié par</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let code of actCodes\">\n                        <th class=\"text-center\" scope=\"row\">\n                            <div class=\"custom-control custom-radio\">\n                                <input type=\"radio\" class=\"custom-control-input\" id=\"{{code.id}}\"\n                                    name=\"radio-stacked\" value=\"{{code.id}}\"\n                                    (change)=\"onItemChange($event.target.value)\">\n                                <label class=\"custom-control-label\" for=\"{{code.id}}\"></label>\n                            </div>\n                        </th> \n                       <td>{{code.id}}</td>\n                        <td class=\"text-capitalize\">{{code.name}}</td>\n                        <td class=\"text-center\">{{code.value}}</td>\n                        <td class=\"text-capitalize text-center\">\n                            <i class=\"fas fa-circle\"\n                                [ngClass]=\"{'text-green': code.active=='Y', 'text-red': code.active=='N'}\"\n                                ngbTooltip=\"{{code.active=='Y'? 'Actif' : 'Inactif'}}\"></i>\n                        </td>\n                        <td class=\"text-center\">{{code.createdAt | date:'dd/MM/yyyy H:mm:ss'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{code.createdByFirstName +' '+ code.createdByLastName}}</td>\n                        <td class=\"text-center text-center text-nowrap\">{{code.updatedAt ? (code.updatedAt | date:'dd/MM/yyyy H:mm:ss') : 'Jamais modifié'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{code.UpdatedByFirstName ? code.UpdatedByFirstName +' '+ code.UpdatedByLastName : ''}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"text-center mb-5 mt-4\">\n            <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n            <div *ngIf=\"hasNoData\" class=\"mt-3\">\n                <span class=\"text-muted ml-3 \" >{{EmptyMessage}}</span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-7 offset-md-5\">\n                <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n                    (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n            </div>\n\n        </div>\n    </div>\n</div>","/**\r\n * enable object from the DOM whithout refresh the page  after  enabling from the database\r\n * @param array array of objects\r\n * @param rowId row to enable\r\n */\r\nexport function enableItem( array : any, rowId : number){\r\n    for (let i = 0; i < array.length; ++i) {\r\n      \r\n        if (array[i].id === rowId) {\r\n            array[i].active = 'Y'; \r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ActCategoryService } from 'src/app/_services/act-category.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-update-act-category',\n  templateUrl: './update-act-category.component.html',\n  styleUrls: ['./update-act-category.component.css']\n})\nexport class UpdateActCategoryComponent implements OnInit {\n\n  /**\n  * categorie id \n  */\n  actCategoryId: number;\n\n  /**\n   * title to display\n   */\n  title = \"Modification d'une catégorie d'actes\";\n\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private actCategoryService: ActCategoryService,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      this.actCategoryId = params.id;\n    })\n  }\n\n  /**\n   * update existing object\n   * @param data object\n   */\n  save(data) {\n\n    let actCategory = data.actCategory;\n    let action = data.action;\n\n    this.actCategoryService.update(actCategory).subscribe(res => {\n      this.router.navigate(['/act/list-category']);\n      this.alertService.success('Catégorie modifié avec succès')\n    })\n  }\n}\n","<app-act-category-form [actCategoryId]=\"actCategoryId\" [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-act-category-form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActCategoryService } from 'src/app/_services/act-category.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-add-act-category',\n  templateUrl: './add-act-category.component.html',\n  styleUrls: ['./add-act-category.component.css']\n})\nexport class AddActCategoryComponent implements OnInit {\n\n \n   /**\n   * title to display\n   */\n  title = \"Ajouter une catégorie d'acte\";\n\n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    private actCategoryService: ActCategoryService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * add a new object\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let actCategory = data.actCategory;\n    let action = data.action;\n     \n    this.actCategoryService.save(actCategory).subscribe(res => {\n\n      switch (action) {\n        case 'save':\n          this.router.navigate(['act/list-category']);\n          this.alertService.success('Catégorie ajouté avec succès')\n          break;\n\n        case 'save_and_new':\n          this.router.navigate(['act/add-category']);\n          this.alertService.success('Catégorie ajouté avec succès')\n\n          break;\n\n        default: this.router.navigate(['act/list-category']);\n          this.alertService.error('Ajout annulée')\n\n          break;\n      }\n    },\n    error => {\n      this.alertService.error(error);\n    });\n\n  }\n\n}\n","<app-act-category-form [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-act-category-form>\n"],"sourceRoot":"webpack:///"}