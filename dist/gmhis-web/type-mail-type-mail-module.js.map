{"version":3,"sources":["./src/app/_shared/document/type-mail-list/type-mail-list.component.ts","./src/app/_shared/document/type-mail-list/type-mail-list.component.html","./src/app/type-mail/type-mail-routing.module.ts","./src/app/type-mail/update-type-mail/update-type-mail.component.ts","./src/app/type-mail/update-type-mail/update-type-mail.component.html","./src/app/type-mail/add-type-mail/add-type-mail.component.ts","./src/app/type-mail/add-type-mail/add-type-mail.component.html","./src/app/type-mail/type-mail.module.ts","./src/app/_shared/document/type-mail-form/type-mail-form.component.ts","./src/app/_shared/document/type-mail-form/type-mail-form.component.html","./src/app/_utility/date/date-output-format.ts","./src/app/type-mail/list-type-mail/list-type-mail.component.ts","./src/app/type-mail/list-type-mail/list-type-mail.component.html"],"names":[],"mappings":"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","file":"type-mail-type-mail-module.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { TypeMail } from 'src/app/_models/typeMail.model';\nimport { TypeMailService } from 'src/app/_services/type-mail.service';\nimport { disableItem } from 'src/app/_utility/disable-item';\nimport { enableItem } from 'src/app/_utility/enable-item';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-type-mail-list',\n  templateUrl: './type-mail-list.component.html',\n  styleUrls: ['./type-mail-list.component.css']\n})\nexport class TypeMailListComponent implements OnInit {\n\n  \n   /**\n   * search formGroup\n   */\n  public form: FormGroup;\n\n  /**\n   * entries formGroup\n   */\n  public entryForm: FormGroup;\n\n  /**\n   * init first page\n   */\n  public page = 0;\n\n  /**\n   * number of item par page default 10\n   */\n  public perPage = 10;\n\n  /**\n   * total items\n   */\n  public totalItem: number;\n\n  /**\n   * number of page\n   */\n  public pages: number;\n\n  /**\n   * handle the spinner\n   */\n  public loading = true;\n\n  /**\n   * the selected item a action\n   */\n  public selectedItem: number;\n\n  /**\n   * object model\n   */\n  typeMail: TypeMail;\n\n  /**\n   * collection of object\n   */\n  typeMails: TypeMail[];\n\n  /**\n   * Define entries options\n   */\n  entries = [\n    { id: 10, value: 10 },\n    { id: 25, value: 25 },\n    { id: 50, value: 50 },\n    { id: 100, value: 100 }\n  ];\n\n  /**\n  * define  states options\n  */\n  actives = [\n    { id: \"Y\", value: \"Actif\" },\n    { id: \"N\", value: \"Inactif\" },\n  ];\n\n  /**\n   *  order direction\n   */\n  order = 'desc';\n\n  /**\n   * order column default id\n   */\n  sort = 'id';\n\n  /**\n   * description of the order direction\n   */\n  orderDescription = 'decroissant';\n\n  /**\n   * define if request result has datas or no\n   */\n  hasNoData: boolean;\n\n   /**\n    * Msg to display when request result is empty\n    */\n   EmptyMessage: String;\n\n  /**\n   * permission service\n   */\n  permission : any;\n\n  @Input()\n  title: string;\n\n  constructor(\n    private typeMailService: TypeMailService,\n   ) {}\n      \n\n  ngOnInit() {\n\n    this.initForm();\n    this.getTypeMails();\n\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      name: new FormControl(''),\n      active: new FormControl(null),\n    })\n\n    this.entryForm = new FormGroup({\n      entries: new FormControl(10),\n    })\n  }\n\n  /**\n   * get list\n   */\n  getTypeMails() {\n    let data = this.form.value\n    data.entries = this.entryForm.get('entries').value;\n    data.page = this.page;\n    data.order = this.order;\n    data.sort = this.sort;\n\n    this.typeMailService.findAllByPage(data).subscribe(\n      res => {\n        if (res) {\n          this.loading = false;\n          this.hasNoData=false;\n          this.totalItem = res['totalElements'];\n          this.pages = res['totalPages'];\n          this.typeMails = res['content'];\n          this.page = res['pageNumber'] + 1;\n        };\n      },\n      error =>{\n            this.typeMails = [];\n            this.loading=false;\n            this.hasNoData=true;\n            this.EmptyMessage=error;\n      })\n  }\n\n  /**\n   * search function\n   */\n  search() {\n    this.loading = true;\n    this.page =this.page > 0 ? this.page - 1: 0;\n    this.getTypeMails();\n  }\n\n  /**\n   * sort function\n   * @param SortColumn \n   */\n  onSort(SortColumn) {\n    this.loading= true;\n    if (this.order == 'desc') {\n      this.order = 'asc';\n      this.orderDescription = 'decroissant';\n    } else {\n      this.orderDescription = 'croissant';\n      this.order = 'desc';\n    }\n    this.orderDescription;\n    this.sort = SortColumn;\n    this.loading = true\n    this.page = this.page - 1;\n    this.getTypeMails();\n  }\n\n  /**\n   * set the current page\n   * @param pageNum \n   */\n  public onPageChange(pageNum: number): void {\n    this.loading = true;\n    this.page = pageNum - 1;\n    this.getTypeMails();\n  }\n\n  /**\n   * function to handle the selected number of entries to show\n   */\n  OnEntryChange() {\n    this.loading = true;\n    this.perPage = this.entryForm.get('entries').value;\n    this.page = this.page - 1;\n    this.getTypeMails();\n  }\n\n  /**\n   * set the selected item \n   * @param item \n   */\n  onItemChange(item) {\n    this.selectedItem = item;\n  }\n\n  /**\n   * disable an object\n   */\n  disable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment desactiver cet élément?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n      if (result.value) {\n\n        this.typeMailService.disable(this.selectedItem).subscribe(result => {\n          //disable item in the DOM\n          if (result) disableItem(this.typeMails, result['id']);\n\n          Swal.fire(\n            'Desactivé!',\n            'Elément desactiver avec succès.',\n            'success'\n          );\n\n        });\n\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'l\\élement n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n\n  /**\n   * enable an object\n   */\n  enable() {\n    Swal.fire({\n      title: 'Souhaitez-vous vraiment Activer cet élément?',\n      text: '',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui.',\n      cancelButtonText: 'Annulée'\n    }).then((result) => {\n\n      if (result.value) {\n        this.typeMailService.enable(this.selectedItem).subscribe(result => {\n          //Enable item in the Dom\n          if (result) enableItem(this.typeMails, result['id']);\n\n          Swal.fire(\n            'Actvé!',\n            'Element activé avec succès.',\n            'success'\n          );\n\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Annulée',\n          'L\\'élémnent n\\'a pas été modifié.',\n          'error'\n        )\n      }\n    })\n  }\n\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"row pl-3 pr-3\">\n            <div class=\"col-md-7\">\n                <form [formGroup]=\"form\">\n                    <div class=\"row\">\n                        <div class=\"row pt-1 m-0 col-md-12\">\n                            <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                                            placeholder=\"Courier Type\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-3 col-md-6 col-sm-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"input-group input-group-sm\">\n                                        <ng-select formControlName=\"active\" placeholder=\" etat \" style=\"width: 100%;\">\n                                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">\n                                                {{active.value}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"px-2 col-lg-2 col-md-2 col-sm-12 mb-1\">\n                                <span class=\"btn btn-light btn-sm\" (click)=\"search()\" style=\"width: 100%;\">\n                                    <i class=\"fas fa-search\"></i>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-5\">\n                <div>\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/mail-type/add\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold text-nowrap text-white\">\n                                <i class=\"fas fa-list mr-2\"></i>\n                                Nouveau\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\">\n                            <a routerLink=\"/mail-type/update/{{selectedItem}}\"\n                                class=\"btn btn-block btn-secondary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-pen-alt mr-2\"></i>\n                                Modifier\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\" >\n                            <a (click)=\"enable()\"\n                                class=\"btn btn-block btn-primary btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-on mr-2\"></i>\n                                Activer\n                            </a>\n                        </div>\n                        <div class=\"py-1 col-lg-3 col-md-6 col-sm-12\" >\n                            <a (click)=\"disable()\"\n                                class=\"btn btn-block btn-warning btn-sm font-weight-bold text-nowrap text-white\"\n                                [ngClass]=\"{'disabled': !selectedItem }\">\n                                <i class=\"fas fa-toggle-off mr-2\"></i>\n                                Desactiver\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-8 text-center text-muted\">\n                <h4>{{title}}</h4>\n            </div>\n            <div class=\"col-md-4 text-right\">\n                <form [formGroup]=\"entryForm\">\n                    <div class=\"row\">\n                        <div for=\"entries\" class=\"col-md-6 text-right mt-1\"> Afficher</div>\n                        <div class=\"col-md-6 mb-2\">\n                            <ng-select formControlName=\"entries\" [searchable]=\"false\" [clearable]=\"false\"\n                                (change)=\"OnEntryChange()\">\n                                <ng-option *ngFor=\"let entry of entries\" [value]=\"entry.id\">{{entry.value}}</ng-option>\n                            </ng-select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-sm table-hover table-bordered \">\n                <thead class=\"thead-light text-center\">\n                    <tr>\n                        <th scope=\"col\"></th>\n                        <th>ID<i class=\"fa fa-sort ml-2\" (click)=\"onSort('id')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">Courier Type<i class=\"fa fa-sort ml-2\" (click)=\"onSort('name')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">Etat <i class=\"fa fa-sort ml-2\" (click)=\"onSort('active')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">crée le <i class=\"fa fa-sort ml-2\" (click)=\"onSort('createdAt')\"\n                                ngbTooltip=\"trier par ordre {{orderDescription }}\"></i></th>\n                        <th scope=\"col\">crée par</th>\n                        <th scope=\"col\">Dernière modif.</th>\n                        <th scope=\"col\">Modifié par</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let mail of typeMails\">\n                        <th class=\"text-center\" scope=\"row\">\n                            <div class=\"custom-control custom-radio\">\n                                <input type=\"radio\" class=\"custom-control-input\" id=\"{{mail.id}}\" name=\"radio-stacked\"\n                                    value=\"{{mail.id}}\" (change)=\"onItemChange($event.target.value)\">\n                                <label class=\"custom-control-label\" for=\"{{mail.id}}\"></label>\n                            </div>\n                        </th>\n                        <td>{{mail.id}}</td>\n                        <td class=\"text-capitalize\">{{mail.name}}</td>\n                        <td class=\"text-capitalize text-center\">\n                            <i class=\"fas fa-circle\"\n                                [ngClass]=\"{'text-green': mail.active=='Y', 'text-red': mail.active=='N'}\"\n                                ngbTooltip=\"{{mail.active=='Y'? 'Actif' : 'Inactif'}}\"></i>\n                        </td>\n                        <td class=\"text-center text-nowrap\">{{mail.createdAt | date:'dd/MM/yyy H:mm:ss'}}</td>\n                      <td class=\"text-capitalize text-nowrap\">{{mail.createdByFirstName +' '+ mail.createdByLastName}}</td>\n                        <td class=\"text-center text-center text-nowrap\">{{mail.updatedAt ? (mail.updatedAt | date:'dd/MM/yyyy H:mm:ss') : 'Jamais modifié'}}</td>\n                        <td class=\"text-capitalize text-nowrap\">{{mail.UpdatedByFirstName ? mail.UpdatedByFirstName +' '+ mail.UpdatedByLastName : ''}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"text-center mb-5 mt-4\">\n            <div *ngIf=\"loading\" class=\"spinner-border text-info\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <span class=\"text-muted ml-3 \" *ngIf=\"loading\">Loading...</span>\n            <div *ngIf=\"hasNoData\" class=\"mt-3\">\n                <span class=\"text-muted ml-3 \" >{{EmptyMessage}}</span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-7 offset-md-5\">\n                <ngb-pagination [collectionSize]=\"totalItem\" [pageSize]=\"perPage\" [(page)]=\"page\" [maxSize]=\"10\"\n                    (pageChange)=\"onPageChange(page)\" [rotate]=\"true\" [boundaryLinks]=\"true\"></ngb-pagination>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddTypeMailComponent } from './add-type-mail/add-type-mail.component';\nimport { ListTypeMailComponent } from './list-type-mail/list-type-mail.component';\nimport { UpdateTypeMailComponent } from './update-type-mail/update-type-mail.component';\n\nconst routes: Routes = [\n  {path:\"add\", component:AddTypeMailComponent},\n  {path:\"update/:id\", component: UpdateTypeMailComponent},\n  {path:\"list\", component:ListTypeMailComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TypeMailRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TypeMailService } from 'src/app/_services/type-mail.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-update-type-mail',\n  templateUrl: './update-type-mail.component.html',\n  styleUrls: ['./update-type-mail.component.css']\n})\nexport class UpdateTypeMailComponent implements OnInit {\n\n \n  /**\n  *  id \n  */\n typeMailId: number;\n\n /**\n  * title to display\n  */\n title = \"Modification d'un courier type\";\n\n\n constructor(\n   private router: Router,\n   private activatedRoute: ActivatedRoute,\n   private typeMailService: TypeMailService,\n   private alertService: AlertService\n ) { }\n\n ngOnInit(): void {\n   this.activatedRoute.params.subscribe(params => {\n     this.typeMailId = params.id;\n   })\n }\n\n /**\n  * update existing object\n  * @param data object\n  */\n save(data) {\n\n   let mailType = data.mailType;\n   let action = data.action;\n   this.typeMailService.update(mailType).subscribe(res => {\n     this.router.navigate(['/mail-type/list']);\n     this.alertService.success('Courier type modifié avec succès'); \n   });\n\n }\n\n}\n","<app-type-mail-form [typeMailId]=\"typeMailId\" [title]=\"title\"  (objectEmitter)=\"save($event)\"></app-type-mail-form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TypeMailService } from 'src/app/_services/type-mail.service';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\n\n@Component({\n  selector: 'app-add-type-mail',\n  templateUrl: './add-type-mail.component.html',\n  styleUrls: ['./add-type-mail.component.css']\n})\nexport class AddTypeMailComponent implements OnInit {\n\n /**\n   * title to display\n   */\n  title = \"Ajouter un courier type\";\n\n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    private typeMailService: TypeMailService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * add a new object\n   * @param data object\n   * \n   */\n  save(data) {\n\n    let mailType = data.mailType;\n    let action = data.action;\n     \n    this.typeMailService.save(mailType).subscribe(res => {\n\n      switch (action) {\n        case 'save':\n          this.router.navigate(['/mail-type/list']);\n          this.alertService.success('Elément ajouté avec succès')\n          break;\n\n        case 'save_and_new':\n          this.router.navigate(['/mail-type/add']);\n          this.alertService.success('Elément ajouté avec succès')\n\n          break;\n\n        default: this.router.navigate(['/certificat-type/list']);\n          this.alertService.error('Ajout annulée')\n\n          break;\n      }\n    }, \n    error => {\n      this.alertService.error(error);\n    });\n\n  }\n\n}\n","<app-type-mail-form [title]='title' (objectEmitter)=\"save($event)\"></app-type-mail-form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TypeMailRoutingModule } from './type-mail-routing.module';\nimport { AddTypeMailComponent } from './add-type-mail/add-type-mail.component';\nimport { ListTypeMailComponent } from './list-type-mail/list-type-mail.component';\nimport { UpdateTypeMailComponent } from './update-type-mail/update-type-mail.component';\nimport { NgbPaginationModule, NgbPopoverModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { TypeMailFormComponent } from '../_shared/document/type-mail-form/type-mail-form.component';\nimport { TypeMailListComponent } from '../_shared/document/type-mail-list/type-mail-list.component';\nimport { CommonComponentModule } from '../common-component/common-component.module';\n\n@NgModule({\n  declarations: [\n    AddTypeMailComponent, \n    ListTypeMailComponent, \n    UpdateTypeMailComponent, \n    TypeMailFormComponent,\n    TypeMailListComponent,\n    \n  ],\n  imports: [\n    CommonModule,\n    TypeMailRoutingModule,\n    NgbPaginationModule,\n    NgbTooltipModule,\n    NgbPopoverModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CKEditorModule,\n    CommonComponentModule,\n\n  ]\n})\nexport class TypeMailModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, Sanitizer, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'src/app/_utility/alert/alert.service';\nimport { invalidformControls } from 'src/app/_utility/form/invalid-form-controls';\nimport * as DecoupedEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport { environment } from 'src/environments/environment';\nimport { dateOutputFormat } from 'src/app/_utility/date/date-output-format';\nimport { slugify } from 'src/app/_utility/string/slugify';\nimport { replaceDocVarialbles } from 'src/app/_utility/string/replaceDocParms';\nimport { TypeMail } from 'src/app/_models/typeMail.model';\nimport { TypeMailService } from 'src/app/_services/type-mail.service';\nimport { documentTypes } from '../../../../appData/docTypeVariables';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'app-type-mail-form',\n  templateUrl: './type-mail-form.component.html',\n  styleUrls: ['./type-mail-form.component.css']\n})\nexport class TypeMailFormComponent implements OnInit {\n\n  /**\n   *   form Group\n   */\n  form: FormGroup;\n\n  /**\n  * form submission action, it will get the value of the action to do\n  */\n  formAction = '';\n\n  /** \n  * invalid from controls\n  */\n  invalidFormControls: any;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  typeMailId: number;\n\n  /**\n   * parent component input\n   */\n  @Input()\n  title: string;\n\n  /**\n   * child component output\n   */\n  @Output()\n  objectEmitter: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * the component model\n   */\n  typeMail: TypeMail;\n\n  /**\n  * define  states options\n  */\n  actives = [\n    { id: \"Y\", value: \"Actif\" },\n    { id: \"N\", value: \"Inactif\" },\n  ];\n\n  /**\n   * Document type variables\n   */\n  docTypeVariables = documentTypes.variables;\n\n  logo: string;\n\n  /**\n   * store the clicked variable value\n   */\n  clickedVariable: string\n\n  /**\n   * today's' date\n   */\n  today = dateOutputFormat(new Date());\n  /**\n   * assign the editor to a public property to make it accessible from the template\n   */\n  public Editor = DecoupedEditor;\n\n  /**\n   * share a model in with the editor\n   */\n  public model = {\n    editorData: ''\n  };\n\n  /**\n   * data to preview\n   */\n  previewData: SafeHtml;\n\n  /**\n   * add the toolbar to the DOM\n   */\n  public onReady(editor) {\n    editor.ui.getEditableElement().parentElement.insertBefore(\n      editor.ui.view.toolbar.element,\n      editor.ui.getEditableElement()\n    );\n  }\n\n  /**\n   * action to do for display error msg and redirect\n   * @param msg \n   * @param redirectTo \n   */\n  errorAction = function (msg: string, redirectTo: string) {\n    this.router.navigate([redirectTo]);\n    this.alertService.error(msg);\n  };\n\n  constructor(\n    private router: Router,\n    private alertService: AlertService,\n    private typeMailService: TypeMailService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    if (this.typeMailId) this.initUpdateAction();\n    this.logo = environment.logo;\n  }\n\n  /**\n   *  init form \n   */\n  initForm() {\n    this.form = new FormGroup({\n      id: new FormControl(0),\n      name: new FormControl('', Validators.required),\n      content: new FormControl(null, Validators.required),\n      active: new FormControl('Y', Validators.required),\n\n    });\n  }\n\n\n  /**\n   * init the form value when updating\n   */\n  initUpdateAction() {\n\n    this.typeMailService.findById(this.typeMailId).subscribe(\n      res => {\n        if (res) {\n          this.form.patchValue(res);\n          \n        } else {\n          this.errorAction(\"Modification impossible car l'élément n'existe pas\", '/mail-type/list');\n        }\n      },\n      error => {\n        this.errorAction(\"Erreur lors de la modification\", '/mail-type/list');\n\n      })\n  }\n\n  /**\n    * fonction called at the form submission action whenever to add or update the object\n    */\n  save() {\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    //validate form '\n    this.invalidFormControls = invalidformControls(this.form);\n    let data = this.form.value;\n\n    if (this.form.valid) {\n      this.objectEmitter.emit({ mailType: data, action: this.formAction })\n\n      if (this.formAction == \"save_and_new\") {\n        this.initForm();\n      }\n\n    } else {\n      this.alertService.error('Formulaire non valid');\n    }\n  }\n\n\n  /**\n   * \n   */\npreview(){\n\n let patient = documentTypes.patient_test;\n let practician = documentTypes.practician_test;\n\n  for (let index = 0; index < Object.keys(patient).length; index++) {\n    const element = '@@@-' + slugify(Object.keys(patient)[index]) + '-';\n    this.previewData = this.sanitizer.bypassSecurityTrustHtml(replaceDocVarialbles(this.model.editorData, patient, practician));\n     \n  }\n}\n\n  /**\n   * get the form submission action\n   * @param action : string\n   */\n  actionToDo(action) {\n    this.formAction = action;\n  }\n\n  /**\n   * action to Do when  ckick on cancel button\n   */\n  cancelAction() {\n    this.errorAction('Action annulée', '/mail-type/list');\n  }\n\n  /**\n   * get the clicked variable value\n   */\n  copyVariableValue(value) {\n \n    this.clickedVariable = '@@@' + slugify(value);\n\n  }\n\n  \n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <div class=\"row\">\n                <div class=\"mr-auto p-2 col-md-4\">\n                    <h3>{{title}}</h3>\n                </div>\n                <div class=\"col-md-7\">\n                    <div class=\"row\">\n                        <div class=\"py-1 col-lg-3  col-md-6 col-sm-12  text-nowrap\">\n                            <!-- Button trigger modal -->\n                            <span class=\"btn btn-block btn-secondary btn-sm font-weight-bold\" (click)=\"preview()\"\n                                data-toggle=\"modal\" data-target=\"#staticBackdrop\">\n                                Previsualiser\n                            </span>\n                        </div>\n                        <div class=\"py-1 col-lg-3  col-md-6 col-sm-12  text-nowrap\">\n                            <button type=\"submit\" (click)=\"actionToDo('save')\"\n                                class=\"btn btn-block btn-success btn-sm font-weight-bold\" value=\"save\">\n                                Enregistrer\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-3  col-md-6 col-sm-12  text-nowrap\" *ngIf='!typeMailId'>\n                            <button type=\"submit\" (click)=\"actionToDo('save_and_new')\"\n                                class=\"btn btn-block btn-info btn-sm font-weight-bold\" value=\"save_and_new\">\n                                Enreg. & nouveau\n                            </button>\n                        </div>\n                        <div class=\"py-1 col-lg-3  col-md-6 col-sm-12  text-nowrap\">\n                            <span (click)=\"cancelAction()\" class=\"btn btn-block btn-danger btn-sm font-weight-bold\"\n                                value=\"cancel\">\n                                Annuler\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <p class=\"text-muted\"> NB: les champs marqués d'un astérisque ( <span class=\"text-danger\">*</span> ) sont\n                obligatoire pour la validation du formulare</p>\n            <div class=\"row\">\n                <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Courier Type</label>\n                        <div class=\"input-group input-group-sm\">\n                            <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                                placeholder=\"Courier type\">\n                        </div>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.name\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n                <div class=\"col-lg-4 col-md-6 col-sm-12\">\n                    <div class=\"form-group\">\n                        <label for=\"typeactive\">Etat</label>\n                        <span class=\"text-red\">*</span>\n                        <ng-select formControlName=\"active\" placeholder=\"Etat\">\n                            <ng-option *ngFor=\"let active of actives\" [value]=\"active.id\">{{active.value}}</ng-option>\n                        </ng-select>\n                        <span class=\"text-danger\" *ngIf=\"invalidFormControls && invalidFormControls.active\">\n                            ce champ doit être renseigné\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row mt-3\">\n                <div class=\"col-lg-9 col-md-8 border p-0\">\n                    <ckeditor formControlName=\"content\" [(ngModel)]=\"model.editorData\" [editor]=\"Editor\"\n                        (ready)=\"onReady($event)\" class=\"bg-light\" style=\"height:40rem;\"></ckeditor>\n                </div>\n                <div class=\"col-lg-2 col-md-3 mx-2 p-0 border\">\n                    <div class=\"bg-light p-2 border text-center text-bold\" style=\"width: 100%;\">\n                        Variales documents\n                    </div>\n                    <div class=\"m-2\"><b><u>Variables patients</u></b></div>\n                    <ul style=\"cursor: copy; font-size: small;\">\n                        <li class=\"docVariableListItem\" ngbTooltip=\"Cliquer pour copier\" *ngFor=\"let variable of docTypeVariables.patient\"\n                            (click)=\"copyVariableValue($event.target.textContent)\" placement=\"top\"\n                            ngbPopover=\"{{clickedVariable}}\" popoverTitle=\"Copier\" [autoClose]=\"'outside'\">\n                            {{variable}}\n                        </li>\n                    </ul>\n                    <div class=\"m-2\"><b><u>Variables practiciens</u></b></div>\n                    <ul style=\"cursor: copy; font-size: small;\">\n                        <li class=\"docVariableListItem\" ngbTooltip=\"Cliquer pour copier\" *ngFor=\"let variable of docTypeVariables.practician\"\n                            (click)=\"copyVariableValue($event.target.textContent)\" placement=\"top\"\n                            ngbPopover=\"{{clickedVariable}}\" popoverTitle=\"Copier\" [autoClose]=\"'outside'\">\n                            {{variable}}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- hidden -->\n            <input type=\"hidden\" formControlName=\"id\">\n        </div>\n    </div>\n</form>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"staticBackdrop\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n                <table style=\"width: 100%;\">\n                    <tr>\n                        <td><img src=\"{{logo}}\" alt=\"Logo\" width=\"100\"></td>\n                        <td class=\"text-bold text-nowrap text-right\"> Date:{{today}}</td>\n                    </tr>\n                </table>\n                <h4>\n                    <div class=\"my-5 text-center\"><u><b>Courier Médical</b></u></div>\n                </h4>\n                <div [innerHTML]=\"previewData\">\n                </div>\n\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Fermer</button>\n            </div>\n        </div>\n    </div>\n</div>","/**\r\n * \r\n * @param date \r\n * @return string\r\n */\r\nexport function dateOutputFormat(date:  Date) : string {\r\n    \r\n    let newDate = new Date(date);\r\n    let day =  (\"0\"+ newDate.getDate()).slice(-2);\r\n    let month = (\"0\"+ (newDate.getMonth() + 1) ).slice(-2);\r\n    let year = newDate.getFullYear();\r\n   \r\n    return  day+'-'+ month+'-'+year;\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-type-mail',\n  templateUrl: './list-type-mail.component.html',\n  styleUrls: ['./list-type-mail.component.css']\n})\nexport class ListTypeMailComponent implements OnInit {\n  \n  /**\n   * page title\n   */\n  title=\"Liste des courier types\";\n\n  constructor(){}\n\n  ngOnInit() { }\n}\n","<app-type-mail-list [title]='title'></app-type-mail-list>\n"],"sourceRoot":"webpack:///"}